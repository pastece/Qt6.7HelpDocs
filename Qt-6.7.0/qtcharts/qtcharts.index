<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="https://doc.qt.io/qt" title="Qt Charts Reference Documentation" version="6.7.0" project="QtCharts" indexTitle="Qt Charts">
    <namespace name="" status="active" access="public" module="qtcharts">
        <page name="audio" href="qtcharts-audio-example.html" status="active" location="examples-audio.qdoc" documented="true" groups="category Data Visualization,qtcharts_examples" subtype="example" title="Audio Samples vs Sound Level" fulltitle="Audio Samples vs Sound Level" subtitle="" brief="This example shows the drawing of microphone samples vs audio level">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="retrieving-the-audio-data" title="Retrieving the audio data" level="1"/>
            <contents name="setting-up-the-chart" title="Setting up the chart" level="1"/>
            <contents name="the-x-axis-samples" title="The x-axis &quot;Samples&quot;" level="2"/>
            <contents name="the-y-axis-audio-level" title="The y-axis &quot;Audio Level&quot;" level="2"/>
            <contents name="attaching-the-axes-and-setting-the-chart-title" title="Attaching the axes and setting the chart title" level="2"/>
            <contents name="laying-out-the-chart" title="Laying out the chart" level="2"/>
            <contents name="using-the-audio-input-data" title="Using the audio input data" level="1"/>
            <contents name="xyseriesiodevice" title="XYSeriesIODevice" level="2"/>
            <page name="audio/widget.cpp" href="qtcharts-audio-widget-cpp.html" status="active" subtype="file" title="" fulltitle="widget.cpp Example File" subtitle="audio/widget.cpp"/>
            <page name="audio/widget.h" href="qtcharts-audio-widget-h.html" status="active" subtype="file" title="" fulltitle="widget.h Example File" subtitle="audio/widget.h"/>
            <page name="audio/xyseriesiodevice.cpp" href="qtcharts-audio-xyseriesiodevice-cpp.html" status="active" subtype="file" title="" fulltitle="xyseriesiodevice.cpp Example File" subtitle="audio/xyseriesiodevice.cpp"/>
            <page name="audio/xyseriesiodevice.h" href="qtcharts-audio-xyseriesiodevice-h.html" status="active" subtype="file" title="" fulltitle="xyseriesiodevice.h Example File" subtitle="audio/xyseriesiodevice.h"/>
            <page name="audio/main.cpp" href="qtcharts-audio-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="audio/main.cpp"/>
            <page name="audio/CMakeLists.txt" href="qtcharts-audio-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="audio/CMakeLists.txt"/>
            <page name="audio/audio.pro" href="qtcharts-audio-audio-pro.html" status="active" subtype="file" title="" fulltitle="audio.pro Example File" subtitle="audio/audio.pro"/>
        </page>
        <page name="qtcharts-changes-qt6.html" href="qtcharts-changes-qt6.html" status="active" location="qt6-changes.qdoc" documented="true" groups="changes-qt-5-to-6" subtype="page" title="Changes to Qt Charts" fulltitle="Changes to Qt Charts" subtitle="" brief="Migrate Qt Charts to Qt 6">
            <contents name="qtcharts-namespace" title="QtCharts Namespace" level="1"/>
            <contents name="opengl-acceleration-in-qml" title="OpenGL Acceleration in QML" level="1"/>
        </page>
        <page name="qtcharts-selectedbar-example.html" href="qtcharts-selectedbar-example.html" status="active" location="examples-selectedbar.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Changing the Color and State of Bars" fulltitle="Changing the Color and State of Bars" subtitle="" brief="Shows how to use a selection feature for the bar chart"/>
        <page name="qmlchartsgallery" href="qtcharts-qmlchartsgallery-example.html" status="active" location="qmlchartsgallery.qdoc" documented="true" groups="category Data Visualization,category Mobile,qtcharts_examples" subtype="example" title="Charts with QML Gallery" fulltitle="Charts with QML Gallery" subtitle="" brief="Demonstrates how to use the different chart types by using qml">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="including-dependencies" title="Including dependencies" level="1"/>
            <contents name="creating-charts-with-qml" title="Creating charts with QML" level="1"/>
            <contents name="more-charts" title="More charts" level="1"/>
            <page name="qmlchartsgallery/qml/AreaSeries.qml" href="qtcharts-qmlchartsgallery-qml-areaseries-qml.html" status="active" subtype="file" title="" fulltitle="AreaSeries.qml Example File" subtitle="qmlchartsgallery/qml/AreaSeries.qml"/>
            <page name="qmlchartsgallery/qml/BarSeries.qml" href="qtcharts-qmlchartsgallery-qml-barseries-qml.html" status="active" subtype="file" title="" fulltitle="BarSeries.qml Example File" subtitle="qmlchartsgallery/qml/BarSeries.qml"/>
            <page name="qmlchartsgallery/qml/BarSeriesHorizontal.qml" href="qtcharts-qmlchartsgallery-qml-barserieshorizontal-qml.html" status="active" subtype="file" title="" fulltitle="BarSeriesHorizontal.qml Example File" subtitle="qmlchartsgallery/qml/BarSeriesHorizontal.qml"/>
            <page name="qmlchartsgallery/qml/BarSeriesPercent.qml" href="qtcharts-qmlchartsgallery-qml-barseriespercent-qml.html" status="active" subtype="file" title="" fulltitle="BarSeriesPercent.qml Example File" subtitle="qmlchartsgallery/qml/BarSeriesPercent.qml"/>
            <page name="qmlchartsgallery/qml/BarSeriesPercentHorizontal.qml" href="qtcharts-qmlchartsgallery-qml-barseriespercenthorizontal-qml.html" status="active" subtype="file" title="" fulltitle="BarSeriesPercentHorizontal.qml Example File" subtitle="qmlchartsgallery/qml/BarSeriesPercentHorizontal.qml"/>
            <page name="qmlchartsgallery/qml/BarSeriesStacked.qml" href="qtcharts-qmlchartsgallery-qml-barseriesstacked-qml.html" status="active" subtype="file" title="" fulltitle="BarSeriesStacked.qml Example File" subtitle="qmlchartsgallery/qml/BarSeriesStacked.qml"/>
            <page name="qmlchartsgallery/qml/BarSeriesStackedHorizontal.qml" href="qtcharts-qmlchartsgallery-qml-barseriesstackedhorizontal-qml.html" status="active" subtype="file" title="" fulltitle="BarSeriesStackedHorizontal.qml Example File" subtitle="qmlchartsgallery/qml/BarSeriesStackedHorizontal.qml"/>
            <page name="qmlchartsgallery/qml/BoxPlotSeries.qml" href="qtcharts-qmlchartsgallery-qml-boxplotseries-qml.html" status="active" subtype="file" title="" fulltitle="BoxPlotSeries.qml Example File" subtitle="qmlchartsgallery/qml/BoxPlotSeries.qml"/>
            <page name="qmlchartsgallery/qml/CandlestickSeries.qml" href="qtcharts-qmlchartsgallery-qml-candlestickseries-qml.html" status="active" subtype="file" title="" fulltitle="CandlestickSeries.qml Example File" subtitle="qmlchartsgallery/qml/CandlestickSeries.qml"/>
            <page name="qmlchartsgallery/qml/CategoryAxis.qml" href="qtcharts-qmlchartsgallery-qml-categoryaxis-qml.html" status="active" subtype="file" title="" fulltitle="CategoryAxis.qml Example File" subtitle="qmlchartsgallery/qml/CategoryAxis.qml"/>
            <page name="qmlchartsgallery/qml/CategoryAxisPolar.qml" href="qtcharts-qmlchartsgallery-qml-categoryaxispolar-qml.html" status="active" subtype="file" title="" fulltitle="CategoryAxisPolar.qml Example File" subtitle="qmlchartsgallery/qml/CategoryAxisPolar.qml"/>
            <page name="qmlchartsgallery/qml/DateTimeAxis.qml" href="qtcharts-qmlchartsgallery-qml-datetimeaxis-qml.html" status="active" subtype="file" title="" fulltitle="DateTimeAxis.qml Example File" subtitle="qmlchartsgallery/qml/DateTimeAxis.qml"/>
            <page name="qmlchartsgallery/qml/DateTimeAxisPolar.qml" href="qtcharts-qmlchartsgallery-qml-datetimeaxispolar-qml.html" status="active" subtype="file" title="" fulltitle="DateTimeAxisPolar.qml Example File" subtitle="qmlchartsgallery/qml/DateTimeAxisPolar.qml"/>
            <page name="qmlchartsgallery/qml/Donut.qml" href="qtcharts-qmlchartsgallery-qml-donut-qml.html" status="active" subtype="file" title="" fulltitle="Donut.qml Example File" subtitle="qmlchartsgallery/qml/Donut.qml"/>
            <page name="qmlchartsgallery/qml/LineSeries.qml" href="qtcharts-qmlchartsgallery-qml-lineseries-qml.html" status="active" subtype="file" title="" fulltitle="LineSeries.qml Example File" subtitle="qmlchartsgallery/qml/LineSeries.qml"/>
            <page name="qmlchartsgallery/qml/Main.qml" href="qtcharts-qmlchartsgallery-qml-main-qml.html" status="active" subtype="file" title="" fulltitle="Main.qml Example File" subtitle="qmlchartsgallery/qml/Main.qml"/>
            <page name="qmlchartsgallery/qml/PieChart.qml" href="qtcharts-qmlchartsgallery-qml-piechart-qml.html" status="active" subtype="file" title="" fulltitle="PieChart.qml Example File" subtitle="qmlchartsgallery/qml/PieChart.qml"/>
            <page name="qmlchartsgallery/qml/ScatterSeries.qml" href="qtcharts-qmlchartsgallery-qml-scatterseries-qml.html" status="active" subtype="file" title="" fulltitle="ScatterSeries.qml Example File" subtitle="qmlchartsgallery/qml/ScatterSeries.qml"/>
            <page name="qmlchartsgallery/qml/SplineSeries.qml" href="qtcharts-qmlchartsgallery-qml-splineseries-qml.html" status="active" subtype="file" title="" fulltitle="SplineSeries.qml Example File" subtitle="qmlchartsgallery/qml/SplineSeries.qml"/>
            <page name="qmlchartsgallery/qml/TwoSeries.qml" href="qtcharts-qmlchartsgallery-qml-twoseries-qml.html" status="active" subtype="file" title="" fulltitle="TwoSeries.qml Example File" subtitle="qmlchartsgallery/qml/TwoSeries.qml"/>
            <page name="qmlchartsgallery/qml/TwoSeriesPolar.qml" href="qtcharts-qmlchartsgallery-qml-twoseriespolar-qml.html" status="active" subtype="file" title="" fulltitle="TwoSeriesPolar.qml Example File" subtitle="qmlchartsgallery/qml/TwoSeriesPolar.qml"/>
            <page name="qmlchartsgallery/qml/WheelOfFortune.qml" href="qtcharts-qmlchartsgallery-qml-wheeloffortune-qml.html" status="active" subtype="file" title="" fulltitle="WheelOfFortune.qml Example File" subtitle="qmlchartsgallery/qml/WheelOfFortune.qml"/>
            <page name="qmlchartsgallery/qml/customlegend/AnimatedAreaSeries.qml" href="qtcharts-qmlchartsgallery-qml-customlegend-animatedareaseries-qml.html" status="active" subtype="file" title="" fulltitle="AnimatedAreaSeries.qml Example File" subtitle="qmlchartsgallery/qml/customlegend/AnimatedAreaSeries.qml"/>
            <page name="qmlchartsgallery/qml/customlegend/ChartViewHighlighted.qml" href="qtcharts-qmlchartsgallery-qml-customlegend-chartviewhighlighted-qml.html" status="active" subtype="file" title="" fulltitle="ChartViewHighlighted.qml Example File" subtitle="qmlchartsgallery/qml/customlegend/ChartViewHighlighted.qml"/>
            <page name="qmlchartsgallery/qml/customlegend/ChartViewSelector.qml" href="qtcharts-qmlchartsgallery-qml-customlegend-chartviewselector-qml.html" status="active" subtype="file" title="" fulltitle="ChartViewSelector.qml Example File" subtitle="qmlchartsgallery/qml/customlegend/ChartViewSelector.qml"/>
            <page name="qmlchartsgallery/qml/customlegend/ChartViewStacked.qml" href="qtcharts-qmlchartsgallery-qml-customlegend-chartviewstacked-qml.html" status="active" subtype="file" title="" fulltitle="ChartViewStacked.qml Example File" subtitle="qmlchartsgallery/qml/customlegend/ChartViewStacked.qml"/>
            <page name="qmlchartsgallery/qml/customlegend/CustomLegend.qml" href="qtcharts-qmlchartsgallery-qml-customlegend-customlegend-qml.html" status="active" subtype="file" title="" fulltitle="CustomLegend.qml Example File" subtitle="qmlchartsgallery/qml/customlegend/CustomLegend.qml"/>
            <page name="qmlchartsgallery/qml/customlegend/Main.qml" href="qtcharts-qmlchartsgallery-qml-customlegend-main-qml.html" status="active" subtype="file" title="" fulltitle="Main.qml Example File" subtitle="qmlchartsgallery/qml/customlegend/Main.qml"/>
            <page name="qmlchartsgallery/qml/f1legends/F1Legends.qml" href="qtcharts-qmlchartsgallery-qml-f1legends-f1legends-qml.html" status="active" subtype="file" title="" fulltitle="F1Legends.qml Example File" subtitle="qmlchartsgallery/qml/f1legends/F1Legends.qml"/>
            <page name="qmlchartsgallery/qml/f1legends/SpeedsList.qml" href="qtcharts-qmlchartsgallery-qml-f1legends-speedslist-qml.html" status="active" subtype="file" title="" fulltitle="SpeedsList.qml Example File" subtitle="qmlchartsgallery/qml/f1legends/SpeedsList.qml"/>
            <page name="qmlchartsgallery/main.cpp" href="qtcharts-qmlchartsgallery-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="qmlchartsgallery/main.cpp"/>
            <page name="qmlchartsgallery/CMakeLists.txt" href="qtcharts-qmlchartsgallery-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="qmlchartsgallery/CMakeLists.txt"/>
            <page name="qmlchartsgallery/qmlchartsgallery.pro" href="qtcharts-qmlchartsgallery-qmlchartsgallery-pro.html" status="active" subtype="file" title="" fulltitle="qmlchartsgallery.pro Example File" subtitle="qmlchartsgallery/qmlchartsgallery.pro"/>
            <page name="qmlchartsgallery/qmlchartsgallery.qrc" href="qtcharts-qmlchartsgallery-qmlchartsgallery-qrc.html" status="active" subtype="file" title="" fulltitle="qmlchartsgallery.qrc Example File" subtitle="qmlchartsgallery/qmlchartsgallery.qrc"/>
        </page>
        <page name="chartsgallery" href="qtcharts-chartsgallery-example.html" status="active" location="gallery.qdoc" documented="true" groups="category Data Visualization,qtcharts_examples" subtype="example" title="Charts with Widgets Gallery" fulltitle="Charts with Widgets Gallery" subtitle="" brief="An application that demonstrates the Qt Charts Widgets API">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page name="chartsgallery/areawidget.cpp" href="qtcharts-chartsgallery-areawidget-cpp.html" status="active" subtype="file" title="" fulltitle="areawidget.cpp Example File" subtitle="chartsgallery/areawidget.cpp"/>
            <page name="chartsgallery/areawidget.h" href="qtcharts-chartsgallery-areawidget-h.html" status="active" subtype="file" title="" fulltitle="areawidget.h Example File" subtitle="chartsgallery/areawidget.h"/>
            <page name="chartsgallery/barmodelmappermodel.cpp" href="qtcharts-chartsgallery-barmodelmappermodel-cpp.html" status="active" subtype="file" title="" fulltitle="barmodelmappermodel.cpp Example File" subtitle="chartsgallery/barmodelmappermodel.cpp"/>
            <page name="chartsgallery/barmodelmappermodel.h" href="qtcharts-chartsgallery-barmodelmappermodel-h.html" status="active" subtype="file" title="" fulltitle="barmodelmappermodel.h Example File" subtitle="chartsgallery/barmodelmappermodel.h"/>
            <page name="chartsgallery/barmodelmapperwidget.cpp" href="qtcharts-chartsgallery-barmodelmapperwidget-cpp.html" status="active" subtype="file" title="" fulltitle="barmodelmapperwidget.cpp Example File" subtitle="chartsgallery/barmodelmapperwidget.cpp"/>
            <page name="chartsgallery/barmodelmapperwidget.h" href="qtcharts-chartsgallery-barmodelmapperwidget-h.html" status="active" subtype="file" title="" fulltitle="barmodelmapperwidget.h Example File" subtitle="chartsgallery/barmodelmapperwidget.h"/>
            <page name="chartsgallery/barpercentwidget.cpp" href="qtcharts-chartsgallery-barpercentwidget-cpp.html" status="active" subtype="file" title="" fulltitle="barpercentwidget.cpp Example File" subtitle="chartsgallery/barpercentwidget.cpp"/>
            <page name="chartsgallery/barpercentwidget.h" href="qtcharts-chartsgallery-barpercentwidget-h.html" status="active" subtype="file" title="" fulltitle="barpercentwidget.h Example File" subtitle="chartsgallery/barpercentwidget.h"/>
            <page name="chartsgallery/barstackedwidget.cpp" href="qtcharts-chartsgallery-barstackedwidget-cpp.html" status="active" subtype="file" title="" fulltitle="barstackedwidget.cpp Example File" subtitle="chartsgallery/barstackedwidget.cpp"/>
            <page name="chartsgallery/barstackedwidget.h" href="qtcharts-chartsgallery-barstackedwidget-h.html" status="active" subtype="file" title="" fulltitle="barstackedwidget.h Example File" subtitle="chartsgallery/barstackedwidget.h"/>
            <page name="chartsgallery/barwidget.cpp" href="qtcharts-chartsgallery-barwidget-cpp.html" status="active" subtype="file" title="" fulltitle="barwidget.cpp Example File" subtitle="chartsgallery/barwidget.cpp"/>
            <page name="chartsgallery/barwidget.h" href="qtcharts-chartsgallery-barwidget-h.html" status="active" subtype="file" title="" fulltitle="barwidget.h Example File" subtitle="chartsgallery/barwidget.h"/>
            <page name="chartsgallery/boxplotdatareader.cpp" href="qtcharts-chartsgallery-boxplotdatareader-cpp.html" status="active" subtype="file" title="" fulltitle="boxplotdatareader.cpp Example File" subtitle="chartsgallery/boxplotdatareader.cpp"/>
            <page name="chartsgallery/boxplotdatareader.h" href="qtcharts-chartsgallery-boxplotdatareader-h.html" status="active" subtype="file" title="" fulltitle="boxplotdatareader.h Example File" subtitle="chartsgallery/boxplotdatareader.h"/>
            <page name="chartsgallery/boxplotwidget.cpp" href="qtcharts-chartsgallery-boxplotwidget-cpp.html" status="active" subtype="file" title="" fulltitle="boxplotwidget.cpp Example File" subtitle="chartsgallery/boxplotwidget.cpp"/>
            <page name="chartsgallery/boxplotwidget.h" href="qtcharts-chartsgallery-boxplotwidget-h.html" status="active" subtype="file" title="" fulltitle="boxplotwidget.h Example File" subtitle="chartsgallery/boxplotwidget.h"/>
            <page name="chartsgallery/callout.cpp" href="qtcharts-chartsgallery-callout-cpp.html" status="active" subtype="file" title="" fulltitle="callout.cpp Example File" subtitle="chartsgallery/callout.cpp"/>
            <page name="chartsgallery/callout.h" href="qtcharts-chartsgallery-callout-h.html" status="active" subtype="file" title="" fulltitle="callout.h Example File" subtitle="chartsgallery/callout.h"/>
            <page name="chartsgallery/calloutview.cpp" href="qtcharts-chartsgallery-calloutview-cpp.html" status="active" subtype="file" title="" fulltitle="calloutview.cpp Example File" subtitle="chartsgallery/calloutview.cpp"/>
            <page name="chartsgallery/calloutview.h" href="qtcharts-chartsgallery-calloutview-h.html" status="active" subtype="file" title="" fulltitle="calloutview.h Example File" subtitle="chartsgallery/calloutview.h"/>
            <page name="chartsgallery/calloutwidget.cpp" href="qtcharts-chartsgallery-calloutwidget-cpp.html" status="active" subtype="file" title="" fulltitle="calloutwidget.cpp Example File" subtitle="chartsgallery/calloutwidget.cpp"/>
            <page name="chartsgallery/calloutwidget.h" href="qtcharts-chartsgallery-calloutwidget-h.html" status="active" subtype="file" title="" fulltitle="calloutwidget.h Example File" subtitle="chartsgallery/calloutwidget.h"/>
            <page name="chartsgallery/candlestickdatareader.cpp" href="qtcharts-chartsgallery-candlestickdatareader-cpp.html" status="active" subtype="file" title="" fulltitle="candlestickdatareader.cpp Example File" subtitle="chartsgallery/candlestickdatareader.cpp"/>
            <page name="chartsgallery/candlestickdatareader.h" href="qtcharts-chartsgallery-candlestickdatareader-h.html" status="active" subtype="file" title="" fulltitle="candlestickdatareader.h Example File" subtitle="chartsgallery/candlestickdatareader.h"/>
            <page name="chartsgallery/candlestickwidget.cpp" href="qtcharts-chartsgallery-candlestickwidget-cpp.html" status="active" subtype="file" title="" fulltitle="candlestickwidget.cpp Example File" subtitle="chartsgallery/candlestickwidget.cpp"/>
            <page name="chartsgallery/candlestickwidget.h" href="qtcharts-chartsgallery-candlestickwidget-h.html" status="active" subtype="file" title="" fulltitle="candlestickwidget.h Example File" subtitle="chartsgallery/candlestickwidget.h"/>
            <page name="chartsgallery/contentwidget.cpp" href="qtcharts-chartsgallery-contentwidget-cpp.html" status="active" subtype="file" title="" fulltitle="contentwidget.cpp Example File" subtitle="chartsgallery/contentwidget.cpp"/>
            <page name="chartsgallery/contentwidget.h" href="qtcharts-chartsgallery-contentwidget-h.html" status="active" subtype="file" title="" fulltitle="contentwidget.h Example File" subtitle="chartsgallery/contentwidget.h"/>
            <page name="chartsgallery/customchartwidget.cpp" href="qtcharts-chartsgallery-customchartwidget-cpp.html" status="active" subtype="file" title="" fulltitle="customchartwidget.cpp Example File" subtitle="chartsgallery/customchartwidget.cpp"/>
            <page name="chartsgallery/customchartwidget.h" href="qtcharts-chartsgallery-customchartwidget-h.html" status="active" subtype="file" title="" fulltitle="customchartwidget.h Example File" subtitle="chartsgallery/customchartwidget.h"/>
            <page name="chartsgallery/datetimeaxiswidget.cpp" href="qtcharts-chartsgallery-datetimeaxiswidget-cpp.html" status="active" subtype="file" title="" fulltitle="datetimeaxiswidget.cpp Example File" subtitle="chartsgallery/datetimeaxiswidget.cpp"/>
            <page name="chartsgallery/datetimeaxiswidget.h" href="qtcharts-chartsgallery-datetimeaxiswidget-h.html" status="active" subtype="file" title="" fulltitle="datetimeaxiswidget.h Example File" subtitle="chartsgallery/datetimeaxiswidget.h"/>
            <page name="chartsgallery/donutbreakdownchart.cpp" href="qtcharts-chartsgallery-donutbreakdownchart-cpp.html" status="active" subtype="file" title="" fulltitle="donutbreakdownchart.cpp Example File" subtitle="chartsgallery/donutbreakdownchart.cpp"/>
            <page name="chartsgallery/donutbreakdownchart.h" href="qtcharts-chartsgallery-donutbreakdownchart-h.html" status="active" subtype="file" title="" fulltitle="donutbreakdownchart.h Example File" subtitle="chartsgallery/donutbreakdownchart.h"/>
            <page name="chartsgallery/donutbreakdownmainslice.cpp" href="qtcharts-chartsgallery-donutbreakdownmainslice-cpp.html" status="active" subtype="file" title="" fulltitle="donutbreakdownmainslice.cpp Example File" subtitle="chartsgallery/donutbreakdownmainslice.cpp"/>
            <page name="chartsgallery/donutbreakdownmainslice.h" href="qtcharts-chartsgallery-donutbreakdownmainslice-h.html" status="active" subtype="file" title="" fulltitle="donutbreakdownmainslice.h Example File" subtitle="chartsgallery/donutbreakdownmainslice.h"/>
            <page name="chartsgallery/donutbreakdownwidget.cpp" href="qtcharts-chartsgallery-donutbreakdownwidget-cpp.html" status="active" subtype="file" title="" fulltitle="donutbreakdownwidget.cpp Example File" subtitle="chartsgallery/donutbreakdownwidget.cpp"/>
            <page name="chartsgallery/donutbreakdownwidget.h" href="qtcharts-chartsgallery-donutbreakdownwidget-h.html" status="active" subtype="file" title="" fulltitle="donutbreakdownwidget.h Example File" subtitle="chartsgallery/donutbreakdownwidget.h"/>
            <page name="chartsgallery/donutwidget.cpp" href="qtcharts-chartsgallery-donutwidget-cpp.html" status="active" subtype="file" title="" fulltitle="donutwidget.cpp Example File" subtitle="chartsgallery/donutwidget.cpp"/>
            <page name="chartsgallery/donutwidget.h" href="qtcharts-chartsgallery-donutwidget-h.html" status="active" subtype="file" title="" fulltitle="donutwidget.h Example File" subtitle="chartsgallery/donutwidget.h"/>
            <page name="chartsgallery/dynamicsplinewidget.cpp" href="qtcharts-chartsgallery-dynamicsplinewidget-cpp.html" status="active" subtype="file" title="" fulltitle="dynamicsplinewidget.cpp Example File" subtitle="chartsgallery/dynamicsplinewidget.cpp"/>
            <page name="chartsgallery/dynamicsplinewidget.h" href="qtcharts-chartsgallery-dynamicsplinewidget-h.html" status="active" subtype="file" title="" fulltitle="dynamicsplinewidget.h Example File" subtitle="chartsgallery/dynamicsplinewidget.h"/>
            <page name="chartsgallery/horizontalbarwidget.cpp" href="qtcharts-chartsgallery-horizontalbarwidget-cpp.html" status="active" subtype="file" title="" fulltitle="horizontalbarwidget.cpp Example File" subtitle="chartsgallery/horizontalbarwidget.cpp"/>
            <page name="chartsgallery/horizontalbarwidget.h" href="qtcharts-chartsgallery-horizontalbarwidget-h.html" status="active" subtype="file" title="" fulltitle="horizontalbarwidget.h Example File" subtitle="chartsgallery/horizontalbarwidget.h"/>
            <page name="chartsgallery/horizontalpercentbarwidget.cpp" href="qtcharts-chartsgallery-horizontalpercentbarwidget-cpp.html" status="active" subtype="file" title="" fulltitle="horizontalpercentbarwidget.cpp Example File" subtitle="chartsgallery/horizontalpercentbarwidget.cpp"/>
            <page name="chartsgallery/horizontalpercentbarwidget.h" href="qtcharts-chartsgallery-horizontalpercentbarwidget-h.html" status="active" subtype="file" title="" fulltitle="horizontalpercentbarwidget.h Example File" subtitle="chartsgallery/horizontalpercentbarwidget.h"/>
            <page name="chartsgallery/horizontalstackedbarwidget.cpp" href="qtcharts-chartsgallery-horizontalstackedbarwidget-cpp.html" status="active" subtype="file" title="" fulltitle="horizontalstackedbarwidget.cpp Example File" subtitle="chartsgallery/horizontalstackedbarwidget.cpp"/>
            <page name="chartsgallery/horizontalstackedbarwidget.h" href="qtcharts-chartsgallery-horizontalstackedbarwidget-h.html" status="active" subtype="file" title="" fulltitle="horizontalstackedbarwidget.h Example File" subtitle="chartsgallery/horizontalstackedbarwidget.h"/>
            <page name="chartsgallery/interactionschart.cpp" href="qtcharts-chartsgallery-interactionschart-cpp.html" status="active" subtype="file" title="" fulltitle="interactionschart.cpp Example File" subtitle="chartsgallery/interactionschart.cpp"/>
            <page name="chartsgallery/interactionschart.h" href="qtcharts-chartsgallery-interactionschart-h.html" status="active" subtype="file" title="" fulltitle="interactionschart.h Example File" subtitle="chartsgallery/interactionschart.h"/>
            <page name="chartsgallery/interactionsview.cpp" href="qtcharts-chartsgallery-interactionsview-cpp.html" status="active" subtype="file" title="" fulltitle="interactionsview.cpp Example File" subtitle="chartsgallery/interactionsview.cpp"/>
            <page name="chartsgallery/interactionsview.h" href="qtcharts-chartsgallery-interactionsview-h.html" status="active" subtype="file" title="" fulltitle="interactionsview.h Example File" subtitle="chartsgallery/interactionsview.h"/>
            <page name="chartsgallery/interactionswidget.cpp" href="qtcharts-chartsgallery-interactionswidget-cpp.html" status="active" subtype="file" title="" fulltitle="interactionswidget.cpp Example File" subtitle="chartsgallery/interactionswidget.cpp"/>
            <page name="chartsgallery/interactionswidget.h" href="qtcharts-chartsgallery-interactionswidget-h.html" status="active" subtype="file" title="" fulltitle="interactionswidget.h Example File" subtitle="chartsgallery/interactionswidget.h"/>
            <page name="chartsgallery/legendmarkerswidget.cpp" href="qtcharts-chartsgallery-legendmarkerswidget-cpp.html" status="active" subtype="file" title="" fulltitle="legendmarkerswidget.cpp Example File" subtitle="chartsgallery/legendmarkerswidget.cpp"/>
            <page name="chartsgallery/legendmarkerswidget.h" href="qtcharts-chartsgallery-legendmarkerswidget-h.html" status="active" subtype="file" title="" fulltitle="legendmarkerswidget.h Example File" subtitle="chartsgallery/legendmarkerswidget.h"/>
            <page name="chartsgallery/legendwidget.cpp" href="qtcharts-chartsgallery-legendwidget-cpp.html" status="active" subtype="file" title="" fulltitle="legendwidget.cpp Example File" subtitle="chartsgallery/legendwidget.cpp"/>
            <page name="chartsgallery/legendwidget.h" href="qtcharts-chartsgallery-legendwidget-h.html" status="active" subtype="file" title="" fulltitle="legendwidget.h Example File" subtitle="chartsgallery/legendwidget.h"/>
            <page name="chartsgallery/lightmarkerswidget.cpp" href="qtcharts-chartsgallery-lightmarkerswidget-cpp.html" status="active" subtype="file" title="" fulltitle="lightmarkerswidget.cpp Example File" subtitle="chartsgallery/lightmarkerswidget.cpp"/>
            <page name="chartsgallery/lightmarkerswidget.h" href="qtcharts-chartsgallery-lightmarkerswidget-h.html" status="active" subtype="file" title="" fulltitle="lightmarkerswidget.h Example File" subtitle="chartsgallery/lightmarkerswidget.h"/>
            <page name="chartsgallery/lineandbarwidget.cpp" href="qtcharts-chartsgallery-lineandbarwidget-cpp.html" status="active" subtype="file" title="" fulltitle="lineandbarwidget.cpp Example File" subtitle="chartsgallery/lineandbarwidget.cpp"/>
            <page name="chartsgallery/lineandbarwidget.h" href="qtcharts-chartsgallery-lineandbarwidget-h.html" status="active" subtype="file" title="" fulltitle="lineandbarwidget.h Example File" subtitle="chartsgallery/lineandbarwidget.h"/>
            <page name="chartsgallery/linewidget.cpp" href="qtcharts-chartsgallery-linewidget-cpp.html" status="active" subtype="file" title="" fulltitle="linewidget.cpp Example File" subtitle="chartsgallery/linewidget.cpp"/>
            <page name="chartsgallery/linewidget.h" href="qtcharts-chartsgallery-linewidget-h.html" status="active" subtype="file" title="" fulltitle="linewidget.h Example File" subtitle="chartsgallery/linewidget.h"/>
            <page name="chartsgallery/logaxiswidget.cpp" href="qtcharts-chartsgallery-logaxiswidget-cpp.html" status="active" subtype="file" title="" fulltitle="logaxiswidget.cpp Example File" subtitle="chartsgallery/logaxiswidget.cpp"/>
            <page name="chartsgallery/logaxiswidget.h" href="qtcharts-chartsgallery-logaxiswidget-h.html" status="active" subtype="file" title="" fulltitle="logaxiswidget.h Example File" subtitle="chartsgallery/logaxiswidget.h"/>
            <page name="chartsgallery/mainwidget.cpp" href="qtcharts-chartsgallery-mainwidget-cpp.html" status="active" subtype="file" title="" fulltitle="mainwidget.cpp Example File" subtitle="chartsgallery/mainwidget.cpp"/>
            <page name="chartsgallery/mainwidget.h" href="qtcharts-chartsgallery-mainwidget-h.html" status="active" subtype="file" title="" fulltitle="mainwidget.h Example File" subtitle="chartsgallery/mainwidget.h"/>
            <page name="chartsgallery/modeldatamodel.cpp" href="qtcharts-chartsgallery-modeldatamodel-cpp.html" status="active" subtype="file" title="" fulltitle="modeldatamodel.cpp Example File" subtitle="chartsgallery/modeldatamodel.cpp"/>
            <page name="chartsgallery/modeldatamodel.h" href="qtcharts-chartsgallery-modeldatamodel-h.html" status="active" subtype="file" title="" fulltitle="modeldatamodel.h Example File" subtitle="chartsgallery/modeldatamodel.h"/>
            <page name="chartsgallery/modeldatawidget.cpp" href="qtcharts-chartsgallery-modeldatawidget-cpp.html" status="active" subtype="file" title="" fulltitle="modeldatawidget.cpp Example File" subtitle="chartsgallery/modeldatawidget.cpp"/>
            <page name="chartsgallery/modeldatawidget.h" href="qtcharts-chartsgallery-modeldatawidget-h.html" status="active" subtype="file" title="" fulltitle="modeldatawidget.h Example File" subtitle="chartsgallery/modeldatawidget.h"/>
            <page name="chartsgallery/multiaxiswidget.cpp" href="qtcharts-chartsgallery-multiaxiswidget-cpp.html" status="active" subtype="file" title="" fulltitle="multiaxiswidget.cpp Example File" subtitle="chartsgallery/multiaxiswidget.cpp"/>
            <page name="chartsgallery/multiaxiswidget.h" href="qtcharts-chartsgallery-multiaxiswidget-h.html" status="active" subtype="file" title="" fulltitle="multiaxiswidget.h Example File" subtitle="chartsgallery/multiaxiswidget.h"/>
            <page name="chartsgallery/nesteddonutswidget.cpp" href="qtcharts-chartsgallery-nesteddonutswidget-cpp.html" status="active" subtype="file" title="" fulltitle="nesteddonutswidget.cpp Example File" subtitle="chartsgallery/nesteddonutswidget.cpp"/>
            <page name="chartsgallery/nesteddonutswidget.h" href="qtcharts-chartsgallery-nesteddonutswidget-h.html" status="active" subtype="file" title="" fulltitle="nesteddonutswidget.h Example File" subtitle="chartsgallery/nesteddonutswidget.h"/>
            <page name="chartsgallery/pccbrushtool.cpp" href="qtcharts-chartsgallery-pccbrushtool-cpp.html" status="active" subtype="file" title="" fulltitle="pccbrushtool.cpp Example File" subtitle="chartsgallery/pccbrushtool.cpp"/>
            <page name="chartsgallery/pccbrushtool.h" href="qtcharts-chartsgallery-pccbrushtool-h.html" status="active" subtype="file" title="" fulltitle="pccbrushtool.h Example File" subtitle="chartsgallery/pccbrushtool.h"/>
            <page name="chartsgallery/pcccustomslice.cpp" href="qtcharts-chartsgallery-pcccustomslice-cpp.html" status="active" subtype="file" title="" fulltitle="pcccustomslice.cpp Example File" subtitle="chartsgallery/pcccustomslice.cpp"/>
            <page name="chartsgallery/pcccustomslice.h" href="qtcharts-chartsgallery-pcccustomslice-h.html" status="active" subtype="file" title="" fulltitle="pcccustomslice.h Example File" subtitle="chartsgallery/pcccustomslice.h"/>
            <page name="chartsgallery/pccpentool.cpp" href="qtcharts-chartsgallery-pccpentool-cpp.html" status="active" subtype="file" title="" fulltitle="pccpentool.cpp Example File" subtitle="chartsgallery/pccpentool.cpp"/>
            <page name="chartsgallery/pccpentool.h" href="qtcharts-chartsgallery-pccpentool-h.html" status="active" subtype="file" title="" fulltitle="pccpentool.h Example File" subtitle="chartsgallery/pccpentool.h"/>
            <page name="chartsgallery/pccwidget.cpp" href="qtcharts-chartsgallery-pccwidget-cpp.html" status="active" subtype="file" title="" fulltitle="pccwidget.cpp Example File" subtitle="chartsgallery/pccwidget.cpp"/>
            <page name="chartsgallery/pccwidget.h" href="qtcharts-chartsgallery-pccwidget-h.html" status="active" subtype="file" title="" fulltitle="pccwidget.h Example File" subtitle="chartsgallery/pccwidget.h"/>
            <page name="chartsgallery/piedrilldownchart.cpp" href="qtcharts-chartsgallery-piedrilldownchart-cpp.html" status="active" subtype="file" title="" fulltitle="piedrilldownchart.cpp Example File" subtitle="chartsgallery/piedrilldownchart.cpp"/>
            <page name="chartsgallery/piedrilldownchart.h" href="qtcharts-chartsgallery-piedrilldownchart-h.html" status="active" subtype="file" title="" fulltitle="piedrilldownchart.h Example File" subtitle="chartsgallery/piedrilldownchart.h"/>
            <page name="chartsgallery/piedrilldownslice.cpp" href="qtcharts-chartsgallery-piedrilldownslice-cpp.html" status="active" subtype="file" title="" fulltitle="piedrilldownslice.cpp Example File" subtitle="chartsgallery/piedrilldownslice.cpp"/>
            <page name="chartsgallery/piedrilldownslice.h" href="qtcharts-chartsgallery-piedrilldownslice-h.html" status="active" subtype="file" title="" fulltitle="piedrilldownslice.h Example File" subtitle="chartsgallery/piedrilldownslice.h"/>
            <page name="chartsgallery/piedrilldownwidget.cpp" href="qtcharts-chartsgallery-piedrilldownwidget-cpp.html" status="active" subtype="file" title="" fulltitle="piedrilldownwidget.cpp Example File" subtitle="chartsgallery/piedrilldownwidget.cpp"/>
            <page name="chartsgallery/piedrilldownwidget.h" href="qtcharts-chartsgallery-piedrilldownwidget-h.html" status="active" subtype="file" title="" fulltitle="piedrilldownwidget.h Example File" subtitle="chartsgallery/piedrilldownwidget.h"/>
            <page name="chartsgallery/piewidget.cpp" href="qtcharts-chartsgallery-piewidget-cpp.html" status="active" subtype="file" title="" fulltitle="piewidget.cpp Example File" subtitle="chartsgallery/piewidget.cpp"/>
            <page name="chartsgallery/piewidget.h" href="qtcharts-chartsgallery-piewidget-h.html" status="active" subtype="file" title="" fulltitle="piewidget.h Example File" subtitle="chartsgallery/piewidget.h"/>
            <page name="chartsgallery/pointconfigurationwidget.cpp" href="qtcharts-chartsgallery-pointconfigurationwidget-cpp.html" status="active" subtype="file" title="" fulltitle="pointconfigurationwidget.cpp Example File" subtitle="chartsgallery/pointconfigurationwidget.cpp"/>
            <page name="chartsgallery/pointconfigurationwidget.h" href="qtcharts-chartsgallery-pointconfigurationwidget-h.html" status="active" subtype="file" title="" fulltitle="pointconfigurationwidget.h Example File" subtitle="chartsgallery/pointconfigurationwidget.h"/>
            <page name="chartsgallery/polarchartview.cpp" href="qtcharts-chartsgallery-polarchartview-cpp.html" status="active" subtype="file" title="" fulltitle="polarchartview.cpp Example File" subtitle="chartsgallery/polarchartview.cpp"/>
            <page name="chartsgallery/polarchartview.h" href="qtcharts-chartsgallery-polarchartview-h.html" status="active" subtype="file" title="" fulltitle="polarchartview.h Example File" subtitle="chartsgallery/polarchartview.h"/>
            <page name="chartsgallery/polarchartwidget.cpp" href="qtcharts-chartsgallery-polarchartwidget-cpp.html" status="active" subtype="file" title="" fulltitle="polarchartwidget.cpp Example File" subtitle="chartsgallery/polarchartwidget.cpp"/>
            <page name="chartsgallery/polarchartwidget.h" href="qtcharts-chartsgallery-polarchartwidget-h.html" status="active" subtype="file" title="" fulltitle="polarchartwidget.h Example File" subtitle="chartsgallery/polarchartwidget.h"/>
            <page name="chartsgallery/scatterinteractionswidget.cpp" href="qtcharts-chartsgallery-scatterinteractionswidget-cpp.html" status="active" subtype="file" title="" fulltitle="scatterinteractionswidget.cpp Example File" subtitle="chartsgallery/scatterinteractionswidget.cpp"/>
            <page name="chartsgallery/scatterinteractionswidget.h" href="qtcharts-chartsgallery-scatterinteractionswidget-h.html" status="active" subtype="file" title="" fulltitle="scatterinteractionswidget.h Example File" subtitle="chartsgallery/scatterinteractionswidget.h"/>
            <page name="chartsgallery/scatterwidget.cpp" href="qtcharts-chartsgallery-scatterwidget-cpp.html" status="active" subtype="file" title="" fulltitle="scatterwidget.cpp Example File" subtitle="chartsgallery/scatterwidget.cpp"/>
            <page name="chartsgallery/scatterwidget.h" href="qtcharts-chartsgallery-scatterwidget-h.html" status="active" subtype="file" title="" fulltitle="scatterwidget.h Example File" subtitle="chartsgallery/scatterwidget.h"/>
            <page name="chartsgallery/selectedbarwidget.cpp" href="qtcharts-chartsgallery-selectedbarwidget-cpp.html" status="active" subtype="file" title="" fulltitle="selectedbarwidget.cpp Example File" subtitle="chartsgallery/selectedbarwidget.cpp"/>
            <page name="chartsgallery/selectedbarwidget.h" href="qtcharts-chartsgallery-selectedbarwidget-h.html" status="active" subtype="file" title="" fulltitle="selectedbarwidget.h Example File" subtitle="chartsgallery/selectedbarwidget.h"/>
            <page name="chartsgallery/splinewidget.cpp" href="qtcharts-chartsgallery-splinewidget-cpp.html" status="active" subtype="file" title="" fulltitle="splinewidget.cpp Example File" subtitle="chartsgallery/splinewidget.cpp"/>
            <page name="chartsgallery/splinewidget.h" href="qtcharts-chartsgallery-splinewidget-h.html" status="active" subtype="file" title="" fulltitle="splinewidget.h Example File" subtitle="chartsgallery/splinewidget.h"/>
            <page name="chartsgallery/stackeddrilldownchart.cpp" href="qtcharts-chartsgallery-stackeddrilldownchart-cpp.html" status="active" subtype="file" title="" fulltitle="stackeddrilldownchart.cpp Example File" subtitle="chartsgallery/stackeddrilldownchart.cpp"/>
            <page name="chartsgallery/stackeddrilldownchart.h" href="qtcharts-chartsgallery-stackeddrilldownchart-h.html" status="active" subtype="file" title="" fulltitle="stackeddrilldownchart.h Example File" subtitle="chartsgallery/stackeddrilldownchart.h"/>
            <page name="chartsgallery/stackeddrilldownseries.cpp" href="qtcharts-chartsgallery-stackeddrilldownseries-cpp.html" status="active" subtype="file" title="" fulltitle="stackeddrilldownseries.cpp Example File" subtitle="chartsgallery/stackeddrilldownseries.cpp"/>
            <page name="chartsgallery/stackeddrilldownseries.h" href="qtcharts-chartsgallery-stackeddrilldownseries-h.html" status="active" subtype="file" title="" fulltitle="stackeddrilldownseries.h Example File" subtitle="chartsgallery/stackeddrilldownseries.h"/>
            <page name="chartsgallery/stackeddrilldownwidget.cpp" href="qtcharts-chartsgallery-stackeddrilldownwidget-cpp.html" status="active" subtype="file" title="" fulltitle="stackeddrilldownwidget.cpp Example File" subtitle="chartsgallery/stackeddrilldownwidget.cpp"/>
            <page name="chartsgallery/stackeddrilldownwidget.h" href="qtcharts-chartsgallery-stackeddrilldownwidget-h.html" status="active" subtype="file" title="" fulltitle="stackeddrilldownwidget.h Example File" subtitle="chartsgallery/stackeddrilldownwidget.h"/>
            <page name="chartsgallery/temperaturerecordswidget.cpp" href="qtcharts-chartsgallery-temperaturerecordswidget-cpp.html" status="active" subtype="file" title="" fulltitle="temperaturerecordswidget.cpp Example File" subtitle="chartsgallery/temperaturerecordswidget.cpp"/>
            <page name="chartsgallery/temperaturerecordswidget.h" href="qtcharts-chartsgallery-temperaturerecordswidget-h.html" status="active" subtype="file" title="" fulltitle="temperaturerecordswidget.h Example File" subtitle="chartsgallery/temperaturerecordswidget.h"/>
            <page name="chartsgallery/themewidget.cpp" href="qtcharts-chartsgallery-themewidget-cpp.html" status="active" subtype="file" title="" fulltitle="themewidget.cpp Example File" subtitle="chartsgallery/themewidget.cpp"/>
            <page name="chartsgallery/themewidget.h" href="qtcharts-chartsgallery-themewidget-h.html" status="active" subtype="file" title="" fulltitle="themewidget.h Example File" subtitle="chartsgallery/themewidget.h"/>
            <page name="chartsgallery/themewidget.ui" href="qtcharts-chartsgallery-themewidget-ui.html" status="active" subtype="file" title="" fulltitle="themewidget.ui Example File" subtitle="chartsgallery/themewidget.ui"/>
            <page name="chartsgallery/main.cpp" href="qtcharts-chartsgallery-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="chartsgallery/main.cpp"/>
            <page name="chartsgallery/CMakeLists.txt" href="qtcharts-chartsgallery-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="chartsgallery/CMakeLists.txt"/>
            <page name="chartsgallery/chartsgallery.pro" href="qtcharts-chartsgallery-chartsgallery-pro.html" status="active" subtype="file" title="" fulltitle="chartsgallery.pro Example File" subtitle="chartsgallery/chartsgallery.pro"/>
            <page name="chartsgallery/chartsgallery.qrc" href="qtcharts-chartsgallery-chartsgallery-qrc.html" status="active" subtype="file" title="" fulltitle="chartsgallery.qrc Example File" subtitle="chartsgallery/chartsgallery.qrc"/>
            <page name="chartsgallery/data/blue_triangle.png" href="qtcharts-chartsgallery-data-blue-triangle-png.html" status="active" subtype="image" title="" fulltitle="blue_triangle.png Image File" subtitle="chartsgallery/data/blue_triangle.png"/>
            <page name="chartsgallery/data/green_triangle.png" href="qtcharts-chartsgallery-data-green-triangle-png.html" status="active" subtype="image" title="" fulltitle="green_triangle.png Image File" subtitle="chartsgallery/data/green_triangle.png"/>
        </page>
        <page name="qtcharts-lineandbar-example.html" href="qtcharts-lineandbar-example.html" status="active" location="examples-lineandbarchart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Combining Line and BarChart" fulltitle="Combining Line and BarChart" subtitle="" brief="Shows how to combine different charts and set the axes"/>
        <page name="qtcharts-areachart-example.html" href="qtcharts-areachart-example.html" status="active" location="examples-areachart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Area Charts" fulltitle="Creating Area Charts" subtitle="" brief="Shows how to create a simple area chart"/>
        <page name="qtcharts-barchart-example.html" href="qtcharts-barchart-example.html" status="active" location="examples-barchart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Bar Charts" fulltitle="Creating Bar Charts" subtitle="" brief="BarChart shows the data in sets as separate bars within categories"/>
        <page name="qtcharts-boxplotchart-example.html" href="qtcharts-boxplotchart-example.html" status="active" location="examples-boxplotchart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Box-and-Whiskers Charts" fulltitle="Creating Box-and-Whiskers Charts" subtitle="" brief="Shows how to create a box-and-whiskers chart"/>
        <page name="qtcharts-candlestickchart-example.html" href="qtcharts-candlestickchart-example.html" status="active" location="examples-candlestickchart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Candlestick Charts" fulltitle="Creating Candlestick Charts" subtitle="" brief="Shows how to create a candlestick chart"/>
        <page name="qtcharts-chartthemes-example.html" href="qtcharts-chartthemes-example.html" status="active" location="examples-chartthemes.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Charts With Themes" fulltitle="Creating Charts With Themes" subtitle="" brief="Shows the look and feel of the different built-in themes">
            <contents name="creating-charts" title="Creating Charts" level="1"/>
            <contents name="changing-theme" title="Changing Theme" level="1"/>
            <contents name="changing-animation-legend-and-anti-aliasing" title="Changing Animation, Legend and Anti-Aliasing" level="1"/>
        </page>
        <page name="qtcharts-horizontalbarchart-example.html" href="qtcharts-horizontalbarchart-example.html" status="active" location="examples-horizontalbarchart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Horizontal Bar Charts" fulltitle="Creating Horizontal Bar Charts" subtitle="" brief="Shows how to create a horizontal bar chart"/>
        <page name="qtcharts-horizontalpercentbarchart-example.html" href="qtcharts-horizontalpercentbarchart-example.html" status="active" location="examples-horizontalpercentbarchart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Horizontal Percent Bar Charts" fulltitle="Creating Horizontal Percent Bar Charts" subtitle="" brief="Shows how to create a simple horizontal percent bar chart"/>
        <page name="qtcharts-horizontalstackedbarchart-example.html" href="qtcharts-horizontalstackedbarchart-example.html" status="active" location="examples-horizontalstackedbarchart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Horizontal Stacked Bar Charts" fulltitle="Creating Horizontal Stacked Bar Charts" subtitle="" brief="Shows how to create a simple stacked horizontal bar chart"/>
        <page name="qtcharts-linechart-example.html" href="qtcharts-linechart-example.html" status="active" location="examples-linechart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Line Charts" fulltitle="Creating Line Charts" subtitle="" brief="Shows how to create a simple line chart"/>
        <page name="qtcharts-nesteddonuts-example.html" href="qtcharts-nesteddonuts-example.html" status="active" location="examples-nesteddonuts.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Nested Donut Charts" fulltitle="Creating Nested Donut Charts" subtitle="" brief="Shows how to create a nested donut chart using the QPieSeries API"/>
        <page name="qtcharts-percentbarchart-example.html" href="qtcharts-percentbarchart-example.html" status="active" location="examples-percentbarchart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Percent Bar Charts" fulltitle="Creating Percent Bar Charts" subtitle="" brief="Shows how to create a simple percent bar chart"/>
        <page name="qtcharts-polarchart-example.html" href="qtcharts-polarchart-example.html" status="active" location="examples-polarchart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Polar Charts" fulltitle="Creating Polar Charts" subtitle="" brief="Shows how to create a simple polar chart with multiple different series"/>
        <page name="qtcharts-scatterchart-example.html" href="qtcharts-scatterchart-example.html" status="active" location="examples-scatterchart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Scatter Charts" fulltitle="Creating Scatter Charts" subtitle="" brief="Example shows how to create a simple scatter chart"/>
        <page name="qtcharts-splinechart-example.html" href="qtcharts-splinechart-example.html" status="active" location="examples-splinechart.qdoc" documented="true" subtype="page" title="Creating Spline Charts" fulltitle="Creating Spline Charts" subtitle="" brief="Shows how to create a simple spline chart"/>
        <page name="qtcharts-stackedbarchart-example.html" href="qtcharts-stackedbarchart-example.html" status="active" location="examples-stackedbarchart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating Stacked Bar Charts" fulltitle="Creating Stacked Bar Charts" subtitle="" brief="Shows how to create a simple stacked bar chart"/>
        <page name="qtcharts-donutbreakdown-example.html" href="qtcharts-donutbreakdown-example.html" status="active" location="examples-donutbreakdown.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Creating a Donut Breakdown Chart" fulltitle="Creating a Donut Breakdown Chart" subtitle="" brief="Shows how to create a donut breakdown chart">
            <contents name="creating-donut-breakdown-charts" title="Creating Donut Breakdown Charts" level="1"/>
        </page>
        <page name="qtcharts-qmlcustomizations-example.html" href="qtcharts-qmlcustomizations-example.html" status="active" location="examples-qmlcustomizations.qdoc" documented="true" groups="charts_qml_gallery_example" subtype="page" title="Customizing Chart Views with QML" fulltitle="Customizing Chart Views with QML" subtitle="" brief="Shows you how to customize different visual properties of a ChartView and a series"/>
        <page name="qtcharts-customchart-example.html" href="qtcharts-customchart-example.html" status="active" location="examples-customchart.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Customizing Charts" fulltitle="Customizing Charts" subtitle="" brief="Shows how to customize the appearance of chart elements"/>
        <page name="qtcharts-qmlcustomlegend-example.html" href="qtcharts-qmlcustomlegend-example.html" status="active" location="examples-qmlcustomlegend.qdoc" documented="true" groups="charts_qml_gallery_example" subtype="page" title="Customizing Legends" fulltitle="Customizing Legends" subtitle="" brief="Shows you how to create your own custom legend"/>
        <page name="qtcharts-legend-example.html" href="qtcharts-legend-example.html" status="active" location="examples-legend.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Detaching and Attaching Legends" fulltitle="Detaching and Attaching Legends" subtitle="" brief="Shows how to detach the legend from the chart and attach it back"/>
        <page name="qtcharts-temperaturerecords-example.html" href="qtcharts-temperaturerecords-example.html" status="active" location="examples-temperaturerecords.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Displaying Temperature Records with Negative Bars" fulltitle="Displaying Temperature Records with Negative Bars" subtitle="" brief="Shows how to create a bar chart with negative bars"/>
        <page name="qtcharts-callout-example.html" href="qtcharts-callout-example.html" status="active" location="examples-callout.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Drawing a Callout on Top of a Chart" fulltitle="Drawing a Callout on Top of a Chart" subtitle="" brief="Shows how to draw an additional element (a callout) on top of a chart"/>
        <page name="stackedbarchartdrilldown" href="stackedbarchartdrilldown.html" status="active" location="examples-stackedbarchartdrilldown.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Implementing Drilldown" fulltitle="Implementing Drilldown" subtitle="" brief="Shows how to implement drilldown using a stacked barchart"/>
        <page name="qtcharts-datetimeaxis-example.html" href="qtcharts-datetimeaxis-example.html" status="active" location="examples-datetimeaxis.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Line Charts with Date and Time Axes" fulltitle="Line Charts with Date and Time Axes" subtitle="" brief="Shows how to use QLineChart with QDateTimeAxis">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="creating-line-charts" title="Creating Line Charts" level="1"/>
        </page>
        <page name="openglseries" href="qtcharts-openglseries-example.html" status="active" location="examples-openglseries.qdoc" documented="true" groups="category Data Visualization,qtcharts_examples" subtype="example" title="OpenGL Accelerated Series Example" fulltitle="OpenGL Accelerated Series Example" subtitle="" brief="Example shows how to enable OpenGL acceleration for QLineSeries and QScatterSeries">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="enabling-opengl-acceleration" title="Enabling OpenGL Acceleration" level="1"/>
            <page name="openglseries/datasource.cpp" href="qtcharts-openglseries-datasource-cpp.html" status="active" subtype="file" title="" fulltitle="datasource.cpp Example File" subtitle="openglseries/datasource.cpp"/>
            <page name="openglseries/datasource.h" href="qtcharts-openglseries-datasource-h.html" status="active" subtype="file" title="" fulltitle="datasource.h Example File" subtitle="openglseries/datasource.h"/>
            <page name="openglseries/main.cpp" href="qtcharts-openglseries-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="openglseries/main.cpp"/>
            <page name="openglseries/CMakeLists.txt" href="qtcharts-openglseries-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="openglseries/CMakeLists.txt"/>
            <page name="openglseries/openglseries.pro" href="qtcharts-openglseries-openglseries-pro.html" status="active" subtype="file" title="" fulltitle="openglseries.pro Example File" subtitle="openglseries/openglseries.pro"/>
        </page>
        <qmlclass name="AbstractAxis" qml-module-name="QtCharts" fullname="QtCharts.AbstractAxis" href="qml-qtcharts-abstractaxis.html" status="active" access="public" documented="true" title="AbstractAxis" fulltitle="AbstractAxis" subtitle="" brief="A base type used for specialized axis types">
            <qmlproperty name="alignment" fullname="QtCharts.AbstractAxis.alignment" href="qml-qtcharts-abstractaxis.html#alignment-prop" status="active" access="public" documented="true" type="alignment" attached="false" writable="false"/>
            <qmlproperty name="color" fullname="QtCharts.AbstractAxis.color" href="qml-qtcharts-abstractaxis.html#color-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="gridLineColor" fullname="QtCharts.AbstractAxis.gridLineColor" href="qml-qtcharts-abstractaxis.html#gridLineColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="gridVisible" fullname="QtCharts.AbstractAxis.gridVisible" href="qml-qtcharts-abstractaxis.html#gridVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="labelsAngle" fullname="QtCharts.AbstractAxis.labelsAngle" href="qml-qtcharts-abstractaxis.html#labelsAngle-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="labelsColor" fullname="QtCharts.AbstractAxis.labelsColor" href="qml-qtcharts-abstractaxis.html#labelsColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="labelsFont" fullname="QtCharts.AbstractAxis.labelsFont" href="qml-qtcharts-abstractaxis.html#labelsFont-prop" status="active" access="public" documented="true" type="font" attached="false" writable="true"/>
            <qmlproperty name="labelsTruncated" fullname="QtCharts.AbstractAxis.labelsTruncated" href="qml-qtcharts-abstractaxis.html#labelsTruncated-prop" status="active" access="public" documented="true" type="int" attached="false" writable="false"/>
            <qmlproperty name="labelsVisible" fullname="QtCharts.AbstractAxis.labelsVisible" href="qml-qtcharts-abstractaxis.html#labelsVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="lineVisible" fullname="QtCharts.AbstractAxis.lineVisible" href="qml-qtcharts-abstractaxis.html#lineVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="minorGridLineColor" fullname="QtCharts.AbstractAxis.minorGridLineColor" href="qml-qtcharts-abstractaxis.html#minorGridLineColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="minorGridVisible" fullname="QtCharts.AbstractAxis.minorGridVisible" href="qml-qtcharts-abstractaxis.html#minorGridVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="orientation" fullname="QtCharts.AbstractAxis.orientation" href="qml-qtcharts-abstractaxis.html#orientation-prop" status="active" access="public" documented="true" type="Qt.Orientation" attached="false" writable="false"/>
            <qmlproperty name="reverse" fullname="QtCharts.AbstractAxis.reverse" href="qml-qtcharts-abstractaxis.html#reverse-prop" status="active" access="public" documented="true" type="alignment" attached="false" writable="true"/>
            <qmlproperty name="shadesBorderColor" fullname="QtCharts.AbstractAxis.shadesBorderColor" href="qml-qtcharts-abstractaxis.html#shadesBorderColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="shadesColor" fullname="QtCharts.AbstractAxis.shadesColor" href="qml-qtcharts-abstractaxis.html#shadesColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="shadesVisible" fullname="QtCharts.AbstractAxis.shadesVisible" href="qml-qtcharts-abstractaxis.html#shadesVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="titleFont" fullname="QtCharts.AbstractAxis.titleFont" href="qml-qtcharts-abstractaxis.html#titleFont-prop" status="active" access="public" documented="true" type="font" attached="false" writable="true"/>
            <qmlproperty name="titleText" fullname="QtCharts.AbstractAxis.titleText" href="qml-qtcharts-abstractaxis.html#titleText-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="titleVisible" fullname="QtCharts.AbstractAxis.titleVisible" href="qml-qtcharts-abstractaxis.html#titleVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="truncateLabels" fullname="QtCharts.AbstractAxis.truncateLabels" href="qml-qtcharts-abstractaxis.html#truncateLabels-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="visible" fullname="QtCharts.AbstractAxis.visible" href="qml-qtcharts-abstractaxis.html#visible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="AbstractBarSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractSeries" fullname="QtCharts.AbstractBarSeries" href="qml-qtcharts-abstractbarseries.html" status="active" access="public" documented="true" title="AbstractBarSeries" fulltitle="AbstractBarSeries" subtitle="" brief="An abstract parent type for all bar series types">
            <function name="append" fullname="QtCharts.AbstractBarSeries.append" href="qml-qtcharts-abstractbarseries.html#append-method" status="active" access="public" documented="true" meta="qmlmethod" type="BarSet">
                <parameter type="string" name="label" default=""/>
                <parameter type="VariantList" name="values" default=""/>
            </function>
            <function name="at" fullname="QtCharts.AbstractBarSeries.at" href="qml-qtcharts-abstractbarseries.html#at-method" status="active" access="public" documented="true" meta="qmlmethod" type="BarSet">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="barsetsAdded" fullname="QtCharts.AbstractBarSeries.barsetsAdded" href="qml-qtcharts-abstractbarseries.html#barsetsAdded-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="barsetsRemoved" fullname="QtCharts.AbstractBarSeries.barsetsRemoved" href="qml-qtcharts-abstractbarseries.html#barsetsRemoved-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="clear" fullname="QtCharts.AbstractBarSeries.clear" href="qml-qtcharts-abstractbarseries.html#clear-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="clicked" fullname="QtCharts.AbstractBarSeries.clicked" href="qml-qtcharts-abstractbarseries.html#clicked-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="index" default=""/>
                <parameter type="BarSet" name="barset" default=""/>
            </function>
            <function name="doubleClicked" fullname="QtCharts.AbstractBarSeries.doubleClicked" href="qml-qtcharts-abstractbarseries.html#doubleClicked-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="index" default=""/>
                <parameter type="BarSet" name="barset" default=""/>
            </function>
            <function name="hovered" fullname="QtCharts.AbstractBarSeries.hovered" href="qml-qtcharts-abstractbarseries.html#hovered-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="bool" name="status" default=""/>
                <parameter type="int" name="index" default=""/>
                <parameter type="BarSet" name="barset" default=""/>
            </function>
            <function name="insert" fullname="QtCharts.AbstractBarSeries.insert" href="qml-qtcharts-abstractbarseries.html#insert-method" status="active" access="public" documented="true" meta="qmlmethod" type="BarSet">
                <parameter type="int" name="index" default=""/>
                <parameter type="string" name="label" default=""/>
                <parameter type="VariantList" name="values" default=""/>
            </function>
            <function name="pressed" fullname="QtCharts.AbstractBarSeries.pressed" href="qml-qtcharts-abstractbarseries.html#pressed-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="index" default=""/>
                <parameter type="BarSet" name="barset" default=""/>
            </function>
            <function name="released" fullname="QtCharts.AbstractBarSeries.released" href="qml-qtcharts-abstractbarseries.html#released-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="index" default=""/>
                <parameter type="BarSet" name="barset" default=""/>
            </function>
            <function name="remove" fullname="QtCharts.AbstractBarSeries.remove" href="qml-qtcharts-abstractbarseries.html#remove-method" status="active" access="public" documented="true" meta="qmlmethod" type="bool">
                <parameter type="BarSet" name="barset" default=""/>
            </function>
            <qmlproperty name="axisX" fullname="QtCharts.AbstractBarSeries.axisX" href="qml-qtcharts-abstractbarseries.html#axisX-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisXTop" fullname="QtCharts.AbstractBarSeries.axisXTop" href="qml-qtcharts-abstractbarseries.html#axisXTop-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisY" fullname="QtCharts.AbstractBarSeries.axisY" href="qml-qtcharts-abstractbarseries.html#axisY-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisYRight" fullname="QtCharts.AbstractBarSeries.axisYRight" href="qml-qtcharts-abstractbarseries.html#axisYRight-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="barWidth" fullname="QtCharts.AbstractBarSeries.barWidth" href="qml-qtcharts-abstractbarseries.html#barWidth-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="count" fullname="QtCharts.AbstractBarSeries.count" href="qml-qtcharts-abstractbarseries.html#count-prop" status="active" access="public" documented="true" type="int" attached="false" writable="false"/>
            <qmlproperty name="labelsAngle" fullname="QtCharts.AbstractBarSeries.labelsAngle" href="qml-qtcharts-abstractbarseries.html#labelsAngle-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="labelsFormat" fullname="QtCharts.AbstractBarSeries.labelsFormat" href="qml-qtcharts-abstractbarseries.html#labelsFormat-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="labelsPosition" fullname="QtCharts.AbstractBarSeries.labelsPosition" href="qml-qtcharts-abstractbarseries.html#labelsPosition-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="labelsPrecision" fullname="QtCharts.AbstractBarSeries.labelsPrecision" href="qml-qtcharts-abstractbarseries.html#labelsPrecision-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="labelsVisible" fullname="QtCharts.AbstractBarSeries.labelsVisible" href="qml-qtcharts-abstractbarseries.html#labelsVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="AbstractSeries" qml-module-name="QtCharts" fullname="QtCharts.AbstractSeries" href="qml-qtcharts-abstractseries.html" status="active" access="public" documented="true" title="AbstractSeries" fulltitle="AbstractSeries" subtitle="" brief="Base type for all Qt Chart series types">
            <qmlproperty name="name" fullname="QtCharts.AbstractSeries.name" href="qml-qtcharts-abstractseries.html#name-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="opacity" fullname="QtCharts.AbstractSeries.opacity" href="qml-qtcharts-abstractseries.html#opacity-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="type" fullname="QtCharts.AbstractSeries.type" href="qml-qtcharts-abstractseries.html#type-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="false"/>
            <qmlproperty name="useOpenGL" fullname="QtCharts.AbstractSeries.useOpenGL" href="qml-qtcharts-abstractseries.html#useOpenGL-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="visible" fullname="QtCharts.AbstractSeries.visible" href="qml-qtcharts-abstractseries.html#visible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="AreaSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractSeries" fullname="QtCharts.AreaSeries" href="qml-qtcharts-areaseries.html" status="active" access="public" documented="true" title="AreaSeries" fulltitle="AreaSeries" subtitle="" brief="Presents data in area charts">
            <function name="clicked" fullname="QtCharts.AreaSeries.clicked" href="qml-qtcharts-areaseries.html#clicked-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="point" name="point" default=""/>
            </function>
            <function name="doubleClicked" fullname="QtCharts.AreaSeries.doubleClicked" href="qml-qtcharts-areaseries.html#doubleClicked-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="point" name="point" default=""/>
            </function>
            <function name="hovered" fullname="QtCharts.AreaSeries.hovered" href="qml-qtcharts-areaseries.html#hovered-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="point" name="point" default=""/>
                <parameter type="bool" name="state" default=""/>
            </function>
            <function name="pressed" fullname="QtCharts.AreaSeries.pressed" href="qml-qtcharts-areaseries.html#pressed-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="point" name="point" default=""/>
            </function>
            <function name="released" fullname="QtCharts.AreaSeries.released" href="qml-qtcharts-areaseries.html#released-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="point" name="point" default=""/>
            </function>
            <qmlproperty name="axisAngular" fullname="QtCharts.AreaSeries.axisAngular" href="qml-qtcharts-areaseries.html#axisAngular-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisRadial" fullname="QtCharts.AreaSeries.axisRadial" href="qml-qtcharts-areaseries.html#axisRadial-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisX" fullname="QtCharts.AreaSeries.axisX" href="qml-qtcharts-areaseries.html#axisX-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisXTop" fullname="QtCharts.AreaSeries.axisXTop" href="qml-qtcharts-areaseries.html#axisXTop-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisY" fullname="QtCharts.AreaSeries.axisY" href="qml-qtcharts-areaseries.html#axisY-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisYRight" fullname="QtCharts.AreaSeries.axisYRight" href="qml-qtcharts-areaseries.html#axisYRight-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="borderColor" fullname="QtCharts.AreaSeries.borderColor" href="qml-qtcharts-areaseries.html#borderColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="borderWidth" fullname="QtCharts.AreaSeries.borderWidth" href="qml-qtcharts-areaseries.html#borderWidth-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="brush" fullname="QtCharts.AreaSeries.brush" href="qml-qtcharts-areaseries.html#brush-prop" status="active" access="public" documented="true" type="brush" attached="false" writable="true"/>
            <qmlproperty name="brushFilename" fullname="QtCharts.AreaSeries.brushFilename" href="qml-qtcharts-areaseries.html#brushFilename-prop" status="active" access="public" documented="true" type="QString" attached="false" writable="true"/>
            <qmlproperty name="color" fullname="QtCharts.AreaSeries.color" href="qml-qtcharts-areaseries.html#color-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="lowerSeries" fullname="QtCharts.AreaSeries.lowerSeries" href="qml-qtcharts-areaseries.html#lowerSeries-prop" status="active" access="public" documented="true" type="LineSeries" attached="false" writable="false"/>
            <qmlproperty name="pointLabelsClipping" fullname="QtCharts.AreaSeries.pointLabelsClipping" href="qml-qtcharts-areaseries.html#pointLabelsClipping-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="pointLabelsColor" fullname="QtCharts.AreaSeries.pointLabelsColor" href="qml-qtcharts-areaseries.html#pointLabelsColor-prop" status="active" access="public" documented="true" type="font" attached="false" writable="true"/>
            <qmlproperty name="pointLabelsFont" fullname="QtCharts.AreaSeries.pointLabelsFont" href="qml-qtcharts-areaseries.html#pointLabelsFont-prop" status="active" access="public" documented="true" type="font" attached="false" writable="true"/>
            <qmlproperty name="pointLabelsFormat" fullname="QtCharts.AreaSeries.pointLabelsFormat" href="qml-qtcharts-areaseries.html#pointLabelsFormat-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="pointLabelsVisible" fullname="QtCharts.AreaSeries.pointLabelsVisible" href="qml-qtcharts-areaseries.html#pointLabelsVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="upperSeries" fullname="QtCharts.AreaSeries.upperSeries" href="qml-qtcharts-areaseries.html#upperSeries-prop" status="active" access="public" documented="true" type="LineSeries" attached="false" writable="false"/>
        </qmlclass>
        <qmlclass name="BarCategoryAxis" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractAxis" fullname="QtCharts.BarCategoryAxis" href="qml-qtcharts-barcategoryaxis.html" status="active" access="public" documented="true" title="BarCategoryAxis" fulltitle="BarCategoryAxis" subtitle="" brief="Adds categories to a chart's axes">
            <function name="clear" fullname="QtCharts.BarCategoryAxis.clear" href="qml-qtcharts-barcategoryaxis.html#clear-method" status="active" access="public" documented="true" meta="qmlmethod" type="void"/>
            <function name="rangeChanged" fullname="QtCharts.BarCategoryAxis.rangeChanged" href="qml-qtcharts-barcategoryaxis.html#rangeChanged-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="string" name="min" default=""/>
                <parameter type="string" name="max" default=""/>
            </function>
            <qmlproperty name="categories" fullname="QtCharts.BarCategoryAxis.categories" href="qml-qtcharts-barcategoryaxis.html#categories-prop" status="active" access="public" documented="true" type="QStringList" attached="false" writable="true"/>
            <qmlproperty name="count" fullname="QtCharts.BarCategoryAxis.count" href="qml-qtcharts-barcategoryaxis.html#count-prop" status="active" access="public" documented="true" type="int" attached="false" writable="false"/>
            <qmlproperty name="max" fullname="QtCharts.BarCategoryAxis.max" href="qml-qtcharts-barcategoryaxis.html#max-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="min" fullname="QtCharts.BarCategoryAxis.min" href="qml-qtcharts-barcategoryaxis.html#min-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="BarSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractBarSeries" fullname="QtCharts.BarSeries" href="qml-qtcharts-barseries.html" status="active" access="public" documented="true" title="BarSeries" fulltitle="BarSeries" subtitle="" brief="Presents a series of data as vertical bars grouped by category"/>
        <qmlclass name="BarSet" qml-module-name="QtCharts" fullname="QtCharts.BarSet" href="qml-qtcharts-barset.html" status="active" access="public" documented="true" title="BarSet" fulltitle="BarSet" subtitle="" brief="Represents one set of bars in a bar chart">
            <function name="append" fullname="QtCharts.BarSet.append" href="qml-qtcharts-barset.html#append-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="real" name="value" default=""/>
            </function>
            <function name="at" fullname="QtCharts.BarSet.at" href="qml-qtcharts-barset.html#at-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="clicked" fullname="QtCharts.BarSet.clicked" href="qml-qtcharts-barset.html#clicked-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="doubleClicked" fullname="QtCharts.BarSet.doubleClicked" href="qml-qtcharts-barset.html#doubleClicked-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="pressed" fullname="QtCharts.BarSet.pressed" href="qml-qtcharts-barset.html#pressed-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="released" fullname="QtCharts.BarSet.released" href="qml-qtcharts-barset.html#released-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="remove" fullname="QtCharts.BarSet.remove" href="qml-qtcharts-barset.html#remove-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="replace" fullname="QtCharts.BarSet.replace" href="qml-qtcharts-barset.html#replace-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
                <parameter type="real" name="value" default=""/>
            </function>
            <function name="valueChanged" fullname="QtCharts.BarSet.valueChanged" href="qml-qtcharts-barset.html#valueChanged-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="valuesAdded" fullname="QtCharts.BarSet.valuesAdded" href="qml-qtcharts-barset.html#valuesAdded-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="index" default=""/>
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="valuesRemoved" fullname="QtCharts.BarSet.valuesRemoved" href="qml-qtcharts-barset.html#valuesRemoved-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="index" default=""/>
                <parameter type="int" name="count" default=""/>
            </function>
            <qmlproperty name="borderColor" fullname="QtCharts.BarSet.borderColor" href="qml-qtcharts-barset.html#borderColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="borderWidth" fullname="QtCharts.BarSet.borderWidth" href="qml-qtcharts-barset.html#borderWidth-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="brushFilename" fullname="QtCharts.BarSet.brushFilename" href="qml-qtcharts-barset.html#brushFilename-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="color" fullname="QtCharts.BarSet.color" href="qml-qtcharts-barset.html#color-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="count" fullname="QtCharts.BarSet.count" href="qml-qtcharts-barset.html#count-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="label" fullname="QtCharts.BarSet.label" href="qml-qtcharts-barset.html#label-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="labelColor" fullname="QtCharts.BarSet.labelColor" href="qml-qtcharts-barset.html#labelColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="labelFont" fullname="QtCharts.BarSet.labelFont" href="qml-qtcharts-barset.html#labelFont-prop" status="active" access="public" documented="true" type="font" attached="false" writable="true"/>
            <qmlproperty name="values" fullname="QtCharts.BarSet.values" href="qml-qtcharts-barset.html#values-prop" status="active" access="public" documented="true" type="QVariantList" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="BoxPlotSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractSeries" fullname="QtCharts.BoxPlotSeries" href="qml-qtcharts-boxplotseries.html" status="active" access="public" documented="true" title="BoxPlotSeries" fulltitle="BoxPlotSeries" subtitle="" brief="Presents data in box-and-whiskers charts">
            <function name="append" fullname="QtCharts.BoxPlotSeries.append" href="qml-qtcharts-boxplotseries.html#append-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="string" name="label" default=""/>
                <parameter type="VariantList" name="values" default=""/>
            </function>
            <function name="append" fullname="QtCharts.BoxPlotSeries.append" href="qml-qtcharts-boxplotseries.html#append-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="BoxSet" name="box" default=""/>
            </function>
            <function name="at" fullname="QtCharts.BoxPlotSeries.at" href="qml-qtcharts-boxplotseries.html#at-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="boxsetsAdded" fullname="QtCharts.BoxPlotSeries.boxsetsAdded" href="qml-qtcharts-boxplotseries.html#boxsetsAdded-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="list" name="sets" default=""/>
            </function>
            <function name="boxsetsRemoved" fullname="QtCharts.BoxPlotSeries.boxsetsRemoved" href="qml-qtcharts-boxplotseries.html#boxsetsRemoved-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="list" name="sets" default=""/>
            </function>
            <function name="clear" fullname="QtCharts.BoxPlotSeries.clear" href="qml-qtcharts-boxplotseries.html#clear-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="clicked" fullname="QtCharts.BoxPlotSeries.clicked" href="qml-qtcharts-boxplotseries.html#clicked-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="BoxSet" name="boxset" default=""/>
            </function>
            <function name="doubleClicked" fullname="QtCharts.BoxPlotSeries.doubleClicked" href="qml-qtcharts-boxplotseries.html#doubleClicked-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="BoxSet" name="boxset" default=""/>
            </function>
            <function name="hovered" fullname="QtCharts.BoxPlotSeries.hovered" href="qml-qtcharts-boxplotseries.html#hovered-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="bool" name="status" default=""/>
                <parameter type="BoxSet" name="boxset" default=""/>
            </function>
            <function name="insert" fullname="QtCharts.BoxPlotSeries.insert" href="qml-qtcharts-boxplotseries.html#insert-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
                <parameter type="string" name="label" default=""/>
                <parameter type="VariantList" name="values" default=""/>
            </function>
            <function name="pressed" fullname="QtCharts.BoxPlotSeries.pressed" href="qml-qtcharts-boxplotseries.html#pressed-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="BoxSet" name="boxset" default=""/>
            </function>
            <function name="released" fullname="QtCharts.BoxPlotSeries.released" href="qml-qtcharts-boxplotseries.html#released-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="BoxSet" name="boxset" default=""/>
            </function>
            <function name="remove" fullname="QtCharts.BoxPlotSeries.remove" href="qml-qtcharts-boxplotseries.html#remove-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="QBoxSet" name="boxset" default=""/>
            </function>
            <qmlproperty name="axisX" fullname="QtCharts.BoxPlotSeries.axisX" href="qml-qtcharts-boxplotseries.html#axisX-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisXTop" fullname="QtCharts.BoxPlotSeries.axisXTop" href="qml-qtcharts-boxplotseries.html#axisXTop-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisY" fullname="QtCharts.BoxPlotSeries.axisY" href="qml-qtcharts-boxplotseries.html#axisY-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisYRight" fullname="QtCharts.BoxPlotSeries.axisYRight" href="qml-qtcharts-boxplotseries.html#axisYRight-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="boxOutlineVisible" fullname="QtCharts.BoxPlotSeries.boxOutlineVisible" href="qml-qtcharts-boxplotseries.html#boxOutlineVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="boxWidth" fullname="QtCharts.BoxPlotSeries.boxWidth" href="qml-qtcharts-boxplotseries.html#boxWidth-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true" brief="Width of the box-and-whiskers item. The value indicates the relative width of the item within its category. The value can be between 0.0 and 1.0. Negative values are replaced with 0.0 and values greater than 1.0 are replaced with 1.0"/>
            <qmlproperty name="brushFilename" fullname="QtCharts.BoxPlotSeries.brushFilename" href="qml-qtcharts-boxplotseries.html#brushFilename-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="count" fullname="QtCharts.BoxPlotSeries.count" href="qml-qtcharts-boxplotseries.html#count-prop" status="active" access="public" documented="true" type="int" attached="false" writable="false"/>
        </qmlclass>
        <qmlclass name="BoxSet" qml-module-name="QtCharts" fullname="QtCharts.BoxSet" href="qml-qtcharts-boxset.html" status="active" access="public" documented="true" title="BoxSet" fulltitle="BoxSet" subtitle="" brief="Represents one item in a box-and-whiskers chart">
            <function name="append" fullname="QtCharts.BoxSet.append" href="qml-qtcharts-boxset.html#append-method" status="active" access="public" documented="true" meta="qmlmethod" type="void">
                <parameter type="qreal" name="value" default=""/>
            </function>
            <function name="at" fullname="QtCharts.BoxSet.at" href="qml-qtcharts-boxset.html#at-method" status="active" access="public" documented="true" meta="qmlmethod" type="void">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="clear" fullname="QtCharts.BoxSet.clear" href="qml-qtcharts-boxset.html#clear-method" status="active" access="public" documented="true" meta="qmlmethod" type="void"/>
            <function name="cleared" fullname="QtCharts.BoxSet.cleared" href="qml-qtcharts-boxset.html#cleared-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="clicked" fullname="QtCharts.BoxSet.clicked" href="qml-qtcharts-boxset.html#clicked-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="doubleClicked" fullname="QtCharts.BoxSet.doubleClicked" href="qml-qtcharts-boxset.html#doubleClicked-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="hovered" fullname="QtCharts.BoxSet.hovered" href="qml-qtcharts-boxset.html#hovered-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="bool" name="status" default=""/>
            </function>
            <function name="pressed" fullname="QtCharts.BoxSet.pressed" href="qml-qtcharts-boxset.html#pressed-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="released" fullname="QtCharts.BoxSet.released" href="qml-qtcharts-boxset.html#released-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="setValue" fullname="QtCharts.BoxSet.setValue" href="qml-qtcharts-boxset.html#setValue-method" status="active" access="public" documented="true" meta="qmlmethod" type="void">
                <parameter type="int" name="index" default=""/>
                <parameter type="qreal" name="value" default=""/>
            </function>
            <function name="valueChanged" fullname="QtCharts.BoxSet.valueChanged" href="qml-qtcharts-boxset.html#valueChanged-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="valuesChanged" fullname="QtCharts.BoxSet.valuesChanged" href="qml-qtcharts-boxset.html#valuesChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <qmlproperty name="brushFilename" fullname="QtCharts.BoxSet.brushFilename" href="qml-qtcharts-boxset.html#brushFilename-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="count" fullname="QtCharts.BoxSet.count" href="qml-qtcharts-boxset.html#count-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="label" fullname="QtCharts.BoxSet.label" href="qml-qtcharts-boxset.html#label-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="values" fullname="QtCharts.BoxSet.values" href="qml-qtcharts-boxset.html#values-prop" status="active" access="public" documented="true" type="list" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="CandlestickSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractSeries" fullname="QtCharts.CandlestickSeries" href="qml-qtcharts-candlestickseries.html" status="active" access="public" since="QtCharts 2.2" documented="true" title="CandlestickSeries" fulltitle="CandlestickSeries" subtitle="" brief="Represents a series of data as candlesticks">
            <function name="append" fullname="QtCharts.CandlestickSeries.append" href="qml-qtcharts-candlestickseries.html#append-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="CandlestickSet" name="set" default=""/>
            </function>
            <function name="at" fullname="QtCharts.CandlestickSeries.at" href="qml-qtcharts-candlestickseries.html#at-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="candlestickSetsAdded" fullname="QtCharts.CandlestickSeries.candlestickSetsAdded" href="qml-qtcharts-candlestickseries.html#candlestickSetsAdded-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="list&lt;CandlestickSet&gt;" name="sets" default=""/>
            </function>
            <function name="candlestickSetsRemoved" fullname="QtCharts.CandlestickSeries.candlestickSetsRemoved" href="qml-qtcharts-candlestickseries.html#candlestickSetsRemoved-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="list&lt;CandlestickSet&gt;" name="sets" default=""/>
            </function>
            <function name="clear" fullname="QtCharts.CandlestickSeries.clear" href="qml-qtcharts-candlestickseries.html#clear-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="clicked" fullname="QtCharts.CandlestickSeries.clicked" href="qml-qtcharts-candlestickseries.html#clicked-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="CandlestickSet" name="set" default=""/>
            </function>
            <function name="doubleClicked" fullname="QtCharts.CandlestickSeries.doubleClicked" href="qml-qtcharts-candlestickseries.html#doubleClicked-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="CandlestickSet" name="set" default=""/>
            </function>
            <function name="hovered" fullname="QtCharts.CandlestickSeries.hovered" href="qml-qtcharts-candlestickseries.html#hovered-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="bool" name="status" default=""/>
                <parameter type="CandlestickSet" name="set" default=""/>
            </function>
            <function name="insert" fullname="QtCharts.CandlestickSeries.insert" href="qml-qtcharts-candlestickseries.html#insert-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
                <parameter type="CandlestickSet" name="set" default=""/>
            </function>
            <function name="pressed" fullname="QtCharts.CandlestickSeries.pressed" href="qml-qtcharts-candlestickseries.html#pressed-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="CandlestickSet" name="set" default=""/>
            </function>
            <function name="released" fullname="QtCharts.CandlestickSeries.released" href="qml-qtcharts-candlestickseries.html#released-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="CandlestickSet" name="set" default=""/>
            </function>
            <function name="remove" fullname="QtCharts.CandlestickSeries.remove" href="qml-qtcharts-candlestickseries.html#remove-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="CandlestickSet" name="set" default=""/>
            </function>
            <qmlproperty name="axisX" fullname="QtCharts.CandlestickSeries.axisX" href="qml-qtcharts-candlestickseries.html#axisX-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisXTop" fullname="QtCharts.CandlestickSeries.axisXTop" href="qml-qtcharts-candlestickseries.html#axisXTop-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisY" fullname="QtCharts.CandlestickSeries.axisY" href="qml-qtcharts-candlestickseries.html#axisY-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisYRight" fullname="QtCharts.CandlestickSeries.axisYRight" href="qml-qtcharts-candlestickseries.html#axisYRight-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="bodyOutlineVisible" fullname="QtCharts.CandlestickSeries.bodyOutlineVisible" href="qml-qtcharts-candlestickseries.html#bodyOutlineVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="bodyWidth" fullname="QtCharts.CandlestickSeries.bodyWidth" href="qml-qtcharts-candlestickseries.html#bodyWidth-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="brushFilename" fullname="QtCharts.CandlestickSeries.brushFilename" href="qml-qtcharts-candlestickseries.html#brushFilename-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="capsVisible" fullname="QtCharts.CandlestickSeries.capsVisible" href="qml-qtcharts-candlestickseries.html#capsVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="capsWidth" fullname="QtCharts.CandlestickSeries.capsWidth" href="qml-qtcharts-candlestickseries.html#capsWidth-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="count" fullname="QtCharts.CandlestickSeries.count" href="qml-qtcharts-candlestickseries.html#count-prop" status="active" access="public" documented="true" type="int" attached="false" writable="false"/>
            <qmlproperty name="decreasingColor" fullname="QtCharts.CandlestickSeries.decreasingColor" href="qml-qtcharts-candlestickseries.html#decreasingColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="increasingColor" fullname="QtCharts.CandlestickSeries.increasingColor" href="qml-qtcharts-candlestickseries.html#increasingColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="maximumColumnWidth" fullname="QtCharts.CandlestickSeries.maximumColumnWidth" href="qml-qtcharts-candlestickseries.html#maximumColumnWidth-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="minimumColumnWidth" fullname="QtCharts.CandlestickSeries.minimumColumnWidth" href="qml-qtcharts-candlestickseries.html#minimumColumnWidth-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="CandlestickSet" qml-module-name="QtCharts" fullname="QtCharts.CandlestickSet" href="qml-qtcharts-candlestickset.html" status="active" access="public" since="QtCharts 2.2" documented="true" title="CandlestickSet" fulltitle="CandlestickSet" subtitle="" brief="Represents a single candlestick item in a candlestick chart">
            <function name="clicked" fullname="QtCharts.CandlestickSet.clicked" href="qml-qtcharts-candlestickset.html#clicked-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="doubleClicked" fullname="QtCharts.CandlestickSet.doubleClicked" href="qml-qtcharts-candlestickset.html#doubleClicked-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="hovered" fullname="QtCharts.CandlestickSet.hovered" href="qml-qtcharts-candlestickset.html#hovered-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="bool" name="status" default=""/>
            </function>
            <function name="pressed" fullname="QtCharts.CandlestickSet.pressed" href="qml-qtcharts-candlestickset.html#pressed-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="released" fullname="QtCharts.CandlestickSet.released" href="qml-qtcharts-candlestickset.html#released-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <qmlproperty name="brushFilename" fullname="QtCharts.CandlestickSet.brushFilename" href="qml-qtcharts-candlestickset.html#brushFilename-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="close" fullname="QtCharts.CandlestickSet.close" href="qml-qtcharts-candlestickset.html#close-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="high" fullname="QtCharts.CandlestickSet.high" href="qml-qtcharts-candlestickset.html#high-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="low" fullname="QtCharts.CandlestickSet.low" href="qml-qtcharts-candlestickset.html#low-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="open" fullname="QtCharts.CandlestickSet.open" href="qml-qtcharts-candlestickset.html#open-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="timestamp" fullname="QtCharts.CandlestickSet.timestamp" href="qml-qtcharts-candlestickset.html#timestamp-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="CategoryAxis" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractAxis" fullname="QtCharts.CategoryAxis" href="qml-qtcharts-categoryaxis.html" status="active" access="public" documented="true" title="CategoryAxis" fulltitle="CategoryAxis" subtitle="" brief="Places named ranges on the axis">
            <function name="append" fullname="QtCharts.CategoryAxis.append" href="qml-qtcharts-categoryaxis.html#append-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="string" name="label" default=""/>
                <parameter type="real" name="endValue" default=""/>
            </function>
            <function name="remove" fullname="QtCharts.CategoryAxis.remove" href="qml-qtcharts-categoryaxis.html#remove-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="string" name="label" default=""/>
            </function>
            <function name="replace" fullname="QtCharts.CategoryAxis.replace" href="qml-qtcharts-categoryaxis.html#replace-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="string" name="oldLabel" default=""/>
                <parameter type="string" name="newLabel" default=""/>
            </function>
            <qmlproperty name="categoriesLabels" fullname="QtCharts.CategoryAxis.categoriesLabels" href="qml-qtcharts-categoryaxis.html#categoriesLabels-prop" status="active" access="public" documented="true" type="StringList" attached="false" writable="false"/>
            <qmlproperty name="count" fullname="QtCharts.CategoryAxis.count" href="qml-qtcharts-categoryaxis.html#count-prop" status="active" access="public" documented="true" type="int" attached="false" writable="false"/>
            <qmlproperty name="labelsPosition" fullname="QtCharts.CategoryAxis.labelsPosition" href="qml-qtcharts-categoryaxis.html#labelsPosition-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="startValue" fullname="QtCharts.CategoryAxis.startValue" href="qml-qtcharts-categoryaxis.html#startValue-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="CategoryRange" qml-module-name="QtCharts" fullname="QtCharts.CategoryRange" href="qml-qtcharts-categoryrange.html" status="active" access="public" documented="true" title="CategoryRange" fulltitle="CategoryRange" subtitle="" brief="Defines a range on a category axis">
            <qmlproperty name="endValue" fullname="QtCharts.CategoryRange.endValue" href="qml-qtcharts-categoryrange.html#endValue-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="label" fullname="QtCharts.CategoryRange.label" href="qml-qtcharts-categoryrange.html#label-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="ChartView" qml-module-name="QtCharts" fullname="QtCharts.ChartView" href="qml-qtcharts-chartview.html" status="active" access="public" documented="true" title="ChartView" fulltitle="ChartView" subtitle="" brief="Manages the graphical representation of the chart's series, legends, and axes">
            <function name="axisX" fullname="QtCharts.ChartView.axisX" href="qml-qtcharts-chartview.html#axisX-method" status="active" access="public" documented="true" meta="qmlmethod" type="Axis">
                <parameter type="AbstractSeries" name="series" default=""/>
            </function>
            <function name="axisY" fullname="QtCharts.ChartView.axisY" href="qml-qtcharts-chartview.html#axisY-method" status="active" access="public" documented="true" meta="qmlmethod" type="Axis">
                <parameter type="AbstractSeries" name="series" default=""/>
            </function>
            <function name="createSeries" fullname="QtCharts.ChartView.createSeries" href="qml-qtcharts-chartview.html#createSeries-method" status="active" access="public" documented="true" meta="qmlmethod" type="AbstractSeries">
                <parameter type="enumeration" name="type" default=""/>
                <parameter type="string" name="name" default=""/>
                <parameter type="AbstractAxis" name="axisX" default=""/>
                <parameter type="AbstractAxis" name="axisY" default=""/>
            </function>
            <function name="isZoomed" fullname="QtCharts.ChartView.isZoomed" href="qml-qtcharts-chartview.html#isZoomed-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="mapToPosition" fullname="QtCharts.ChartView.mapToPosition" href="qml-qtcharts-chartview.html#mapToPosition-method" status="active" access="public" documented="true" meta="qmlmethod" type="point">
                <parameter type="point" name="value" default=""/>
                <parameter type="AbstractSeries" name="series" default=""/>
            </function>
            <function name="mapToValue" fullname="QtCharts.ChartView.mapToValue" href="qml-qtcharts-chartview.html#mapToValue-method" status="active" access="public" documented="true" meta="qmlmethod" type="point">
                <parameter type="point" name="position" default=""/>
                <parameter type="AbstractSeries" name="series" default=""/>
            </function>
            <function name="removeAllSeries" fullname="QtCharts.ChartView.removeAllSeries" href="qml-qtcharts-chartview.html#removeAllSeries-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="removeSeries" fullname="QtCharts.ChartView.removeSeries" href="qml-qtcharts-chartview.html#removeSeries-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="AbstractSeries" name="series" default=""/>
            </function>
            <function name="scrollDown" fullname="QtCharts.ChartView.scrollDown" href="qml-qtcharts-chartview.html#scrollDown-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="real" name="pixels" default=""/>
            </function>
            <function name="scrollLeft" fullname="QtCharts.ChartView.scrollLeft" href="qml-qtcharts-chartview.html#scrollLeft-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="real" name="pixels" default=""/>
            </function>
            <function name="scrollRight" fullname="QtCharts.ChartView.scrollRight" href="qml-qtcharts-chartview.html#scrollRight-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="real" name="pixels" default=""/>
            </function>
            <function name="scrollUp" fullname="QtCharts.ChartView.scrollUp" href="qml-qtcharts-chartview.html#scrollUp-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="real" name="pixels" default=""/>
            </function>
            <function name="series" fullname="QtCharts.ChartView.series" href="qml-qtcharts-chartview.html#series-method" status="active" access="public" documented="true" meta="qmlmethod" type="AbstractSeries">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="series" fullname="QtCharts.ChartView.series" href="qml-qtcharts-chartview.html#series-method" status="active" access="public" documented="true" meta="qmlmethod" type="AbstractSeries">
                <parameter type="string" name="name" default=""/>
            </function>
            <function name="seriesAdded" fullname="QtCharts.ChartView.seriesAdded" href="qml-qtcharts-chartview.html#seriesAdded-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="AbstractSeries" name="series" default=""/>
            </function>
            <function name="seriesRemoved" fullname="QtCharts.ChartView.seriesRemoved" href="qml-qtcharts-chartview.html#seriesRemoved-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="AbstractSeries" name="series" default=""/>
            </function>
            <function name="setAxisX" fullname="QtCharts.ChartView.setAxisX" href="qml-qtcharts-chartview.html#setAxisX-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="AbstractAxis" name="axis" default=""/>
                <parameter type="AbstractSeries" name="series" default=""/>
            </function>
            <function name="setAxisY" fullname="QtCharts.ChartView.setAxisY" href="qml-qtcharts-chartview.html#setAxisY-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="AbstractAxis" name="axis" default=""/>
                <parameter type="AbstractSeries" name="series" default=""/>
            </function>
            <function name="zoom" fullname="QtCharts.ChartView.zoom" href="qml-qtcharts-chartview.html#zoom-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="real" name="factor" default=""/>
            </function>
            <function name="zoomIn" fullname="QtCharts.ChartView.zoomIn" href="qml-qtcharts-chartview.html#zoomIn-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="zoomIn" fullname="QtCharts.ChartView.zoomIn" href="qml-qtcharts-chartview.html#zoomIn-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="rect" name="rectangle" default=""/>
            </function>
            <function name="zoomOut" fullname="QtCharts.ChartView.zoomOut" href="qml-qtcharts-chartview.html#zoomOut-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="zoomReset" fullname="QtCharts.ChartView.zoomReset" href="qml-qtcharts-chartview.html#zoomReset-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <qmlproperty name="animationDuration" fullname="QtCharts.ChartView.animationDuration" href="qml-qtcharts-chartview.html#animationDuration-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="animationEasingCurve" fullname="QtCharts.ChartView.animationEasingCurve" href="qml-qtcharts-chartview.html#animationEasingCurve-prop" status="active" access="public" documented="true" type="easing" attached="false" writable="true"/>
            <qmlproperty name="animationOptions" fullname="QtCharts.ChartView.animationOptions" href="qml-qtcharts-chartview.html#animationOptions-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="axes" fullname="QtCharts.ChartView.axes" href="qml-qtcharts-chartview.html#axes-prop" status="active" access="public" documented="true" type="list&lt;AbstractAxis&gt;" attached="false" writable="true"/>
            <qmlproperty name="backgroundColor" fullname="QtCharts.ChartView.backgroundColor" href="qml-qtcharts-chartview.html#backgroundColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="backgroundRoundness" fullname="QtCharts.ChartView.backgroundRoundness" href="qml-qtcharts-chartview.html#backgroundRoundness-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="count" fullname="QtCharts.ChartView.count" href="qml-qtcharts-chartview.html#count-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="dropShadowEnabled" fullname="QtCharts.ChartView.dropShadowEnabled" href="qml-qtcharts-chartview.html#dropShadowEnabled-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="legend" fullname="QtCharts.ChartView.legend" href="qml-qtcharts-chartview.html#legend-prop" status="active" access="public" documented="true" type="Legend" attached="false" writable="true"/>
            <qmlproperty name="locale" fullname="QtCharts.ChartView.locale" href="qml-qtcharts-chartview.html#locale-prop" status="active" access="public" since="QtCharts 2.0" documented="true" type="locale" attached="false" writable="true"/>
            <qmlproperty name="localizeNumbers" fullname="QtCharts.ChartView.localizeNumbers" href="qml-qtcharts-chartview.html#localizeNumbers-prop" status="active" access="public" since="QtCharts 2.0" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="margins" fullname="QtCharts.ChartView.margins" href="qml-qtcharts-chartview.html#margins-prop" status="active" access="public" documented="true" type="Margins" attached="false" writable="true"/>
            <qmlproperty name="plotArea" fullname="QtCharts.ChartView.plotArea" href="qml-qtcharts-chartview.html#plotArea-prop" status="active" access="public" documented="true" type="rect" attached="false" writable="true"/>
            <qmlproperty name="plotAreaColor" fullname="QtCharts.ChartView.plotAreaColor" href="qml-qtcharts-chartview.html#plotAreaColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="theme" fullname="QtCharts.ChartView.theme" href="qml-qtcharts-chartview.html#theme-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="title" fullname="QtCharts.ChartView.title" href="qml-qtcharts-chartview.html#title-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="titleColor" fullname="QtCharts.ChartView.titleColor" href="qml-qtcharts-chartview.html#titleColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="titleFont" fullname="QtCharts.ChartView.titleFont" href="qml-qtcharts-chartview.html#titleFont-prop" status="active" access="public" documented="true" type="font" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="DateTimeAxis" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractAxis" fullname="QtCharts.DateTimeAxis" href="qml-qtcharts-datetimeaxis.html" status="active" access="public" documented="true" title="DateTimeAxis" fulltitle="DateTimeAxis" subtitle="" brief="Adds dates and times to a chart's axis">
            <function name="rangeChanged" fullname="QtCharts.DateTimeAxis.rangeChanged" href="qml-qtcharts-datetimeaxis.html#rangeChanged-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="datetime" name="min" default=""/>
                <parameter type="datetime" name="max" default=""/>
            </function>
            <qmlproperty name="format" fullname="QtCharts.DateTimeAxis.format" href="qml-qtcharts-datetimeaxis.html#format-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="max" fullname="QtCharts.DateTimeAxis.max" href="qml-qtcharts-datetimeaxis.html#max-prop" status="active" access="public" documented="true" type="datetime" attached="false" writable="true"/>
            <qmlproperty name="min" fullname="QtCharts.DateTimeAxis.min" href="qml-qtcharts-datetimeaxis.html#min-prop" status="active" access="public" documented="true" type="datetime" attached="false" writable="true"/>
            <qmlproperty name="tickCount" fullname="QtCharts.DateTimeAxis.tickCount" href="qml-qtcharts-datetimeaxis.html#tickCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="HBarModelMapper" qml-module-name="QtCharts" fullname="QtCharts.HBarModelMapper" href="qml-qtcharts-hbarmodelmapper.html" status="active" access="public" documented="true" title="HBarModelMapper" fulltitle="HBarModelMapper" subtitle="" brief="Horizontal model mapper for bar series">
            <qmlproperty name="columnCount" fullname="QtCharts.HBarModelMapper.columnCount" href="qml-qtcharts-hbarmodelmapper.html#columnCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="firstBarSetRow" fullname="QtCharts.HBarModelMapper.firstBarSetRow" href="qml-qtcharts-hbarmodelmapper.html#firstBarSetRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="firstColumn" fullname="QtCharts.HBarModelMapper.firstColumn" href="qml-qtcharts-hbarmodelmapper.html#firstColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="lastBarSetRow" fullname="QtCharts.HBarModelMapper.lastBarSetRow" href="qml-qtcharts-hbarmodelmapper.html#lastBarSetRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="model" fullname="QtCharts.HBarModelMapper.model" href="qml-qtcharts-hbarmodelmapper.html#model-prop" status="active" access="public" documented="true" type="SomeModel" attached="false" writable="true"/>
            <qmlproperty name="series" fullname="QtCharts.HBarModelMapper.series" href="qml-qtcharts-hbarmodelmapper.html#series-prop" status="active" access="public" documented="true" type="AbstractBarSeries" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="HBoxPlotModelMapper" qml-module-name="QtCharts" fullname="QtCharts.HBoxPlotModelMapper" href="qml-qtcharts-hboxplotmodelmapper.html" status="active" access="public" documented="true" title="HBoxPlotModelMapper" fulltitle="HBoxPlotModelMapper" subtitle="" brief="Horizontal model mapper for box plot series">
            <qmlproperty name="columnCount" fullname="QtCharts.HBoxPlotModelMapper.columnCount" href="qml-qtcharts-hboxplotmodelmapper.html#columnCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="firstBoxSetRow" fullname="QtCharts.HBoxPlotModelMapper.firstBoxSetRow" href="qml-qtcharts-hboxplotmodelmapper.html#firstBoxSetRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="firstColumn" fullname="QtCharts.HBoxPlotModelMapper.firstColumn" href="qml-qtcharts-hboxplotmodelmapper.html#firstColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="lastBoxSetRow" fullname="QtCharts.HBoxPlotModelMapper.lastBoxSetRow" href="qml-qtcharts-hboxplotmodelmapper.html#lastBoxSetRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="model" fullname="QtCharts.HBoxPlotModelMapper.model" href="qml-qtcharts-hboxplotmodelmapper.html#model-prop" status="active" access="public" documented="true" type="SomeModel" attached="false" writable="true"/>
            <qmlproperty name="series" fullname="QtCharts.HBoxPlotModelMapper.series" href="qml-qtcharts-hboxplotmodelmapper.html#series-prop" status="active" access="public" documented="true" type="AbstractBarSeries" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="HCandlestickModelMapper" qml-module-name="QtCharts" fullname="QtCharts.HCandlestickModelMapper" href="qml-qtcharts-hcandlestickmodelmapper.html" status="active" access="public" since="QtCharts 2.2" documented="true" title="HCandlestickModelMapper" fulltitle="HCandlestickModelMapper" subtitle="" brief="Horizontal model mapper for a candlestick series">
            <qmlproperty name="closeColumn" fullname="QtCharts.HCandlestickModelMapper.closeColumn" href="qml-qtcharts-hcandlestickmodelmapper.html#closeColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="firstSetRow" fullname="QtCharts.HCandlestickModelMapper.firstSetRow" href="qml-qtcharts-hcandlestickmodelmapper.html#firstSetRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="highColumn" fullname="QtCharts.HCandlestickModelMapper.highColumn" href="qml-qtcharts-hcandlestickmodelmapper.html#highColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="lastSetRow" fullname="QtCharts.HCandlestickModelMapper.lastSetRow" href="qml-qtcharts-hcandlestickmodelmapper.html#lastSetRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="lowColumn" fullname="QtCharts.HCandlestickModelMapper.lowColumn" href="qml-qtcharts-hcandlestickmodelmapper.html#lowColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="model" fullname="QtCharts.HCandlestickModelMapper.model" href="qml-qtcharts-hcandlestickmodelmapper.html#model-prop" status="active" access="public" documented="true" type="QAbstractItemModel" attached="false" writable="true"/>
            <qmlproperty name="openColumn" fullname="QtCharts.HCandlestickModelMapper.openColumn" href="qml-qtcharts-hcandlestickmodelmapper.html#openColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="series" fullname="QtCharts.HCandlestickModelMapper.series" href="qml-qtcharts-hcandlestickmodelmapper.html#series-prop" status="active" access="public" documented="true" type="CandlestickSeries" attached="false" writable="true"/>
            <qmlproperty name="timestampColumn" fullname="QtCharts.HCandlestickModelMapper.timestampColumn" href="qml-qtcharts-hcandlestickmodelmapper.html#timestampColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="HPieModelMapper" qml-module-name="QtCharts" fullname="QtCharts.HPieModelMapper" href="qml-qtcharts-hpiemodelmapper.html" status="active" access="public" documented="true" title="HPieModelMapper" fulltitle="HPieModelMapper" subtitle="" brief="Horizontal model mapper for pie series">
            <qmlproperty name="columnCount" fullname="QtCharts.HPieModelMapper.columnCount" href="qml-qtcharts-hpiemodelmapper.html#columnCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="firstColumn" fullname="QtCharts.HPieModelMapper.firstColumn" href="qml-qtcharts-hpiemodelmapper.html#firstColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="labelsRow" fullname="QtCharts.HPieModelMapper.labelsRow" href="qml-qtcharts-hpiemodelmapper.html#labelsRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="model" fullname="QtCharts.HPieModelMapper.model" href="qml-qtcharts-hpiemodelmapper.html#model-prop" status="active" access="public" documented="true" type="SomeModel" attached="false" writable="true"/>
            <qmlproperty name="series" fullname="QtCharts.HPieModelMapper.series" href="qml-qtcharts-hpiemodelmapper.html#series-prop" status="active" access="public" documented="true" type="PieSeries" attached="false" writable="true"/>
            <qmlproperty name="valuesRow" fullname="QtCharts.HPieModelMapper.valuesRow" href="qml-qtcharts-hpiemodelmapper.html#valuesRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="HXYModelMapper" qml-module-name="QtCharts" fullname="QtCharts.HXYModelMapper" href="qml-qtcharts-hxymodelmapper.html" status="active" access="public" documented="true" title="HXYModelMapper" fulltitle="HXYModelMapper" subtitle="" brief="A horizontal model mapper for XYSeries">
            <qmlproperty name="columnCount" fullname="QtCharts.HXYModelMapper.columnCount" href="qml-qtcharts-hxymodelmapper.html#columnCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="firstColumn" fullname="QtCharts.HXYModelMapper.firstColumn" href="qml-qtcharts-hxymodelmapper.html#firstColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="model" fullname="QtCharts.HXYModelMapper.model" href="qml-qtcharts-hxymodelmapper.html#model-prop" status="active" access="public" documented="true" type="SomeModel" attached="false" writable="true"/>
            <qmlproperty name="series" fullname="QtCharts.HXYModelMapper.series" href="qml-qtcharts-hxymodelmapper.html#series-prop" status="active" access="public" documented="true" type="XYSeries" attached="false" writable="true"/>
            <qmlproperty name="xRow" fullname="QtCharts.HXYModelMapper.xRow" href="qml-qtcharts-hxymodelmapper.html#xRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="yRow" fullname="QtCharts.HXYModelMapper.yRow" href="qml-qtcharts-hxymodelmapper.html#yRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="HorizontalBarSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractBarSeries" fullname="QtCharts.HorizontalBarSeries" href="qml-qtcharts-horizontalbarseries.html" status="active" access="public" documented="true" title="HorizontalBarSeries" fulltitle="HorizontalBarSeries" subtitle="" brief="Presents a series of data as horizontal bars grouped by category"/>
        <qmlclass name="HorizontalPercentBarSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractBarSeries" fullname="QtCharts.HorizontalPercentBarSeries" href="qml-qtcharts-horizontalpercentbarseries.html" status="active" access="public" documented="true" title="HorizontalPercentBarSeries" fulltitle="HorizontalPercentBarSeries" subtitle="" brief="Presents a series of categorized data as a percentage of each category"/>
        <qmlclass name="HorizontalStackedBarSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractBarSeries" fullname="QtCharts.HorizontalStackedBarSeries" href="qml-qtcharts-horizontalstackedbarseries.html" status="active" access="public" documented="true" title="HorizontalStackedBarSeries" fulltitle="HorizontalStackedBarSeries" subtitle="" brief="Presents a series of data as stacked horizontal bars, with one bar per category"/>
        <qmlclass name="Legend" qml-module-name="QtCharts" fullname="QtCharts.Legend" href="qml-qtcharts-legend.html" status="active" access="public" documented="true" title="Legend" fulltitle="Legend" subtitle="" brief="Displays the legend of a chart">
            <qmlproperty name="alignment" fullname="QtCharts.Legend.alignment" href="qml-qtcharts-legend.html#alignment-prop" status="active" access="public" documented="true" type="alignment" attached="false" writable="true"/>
            <qmlproperty name="backgroundVisible" fullname="QtCharts.Legend.backgroundVisible" href="qml-qtcharts-legend.html#backgroundVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="borderColor" fullname="QtCharts.Legend.borderColor" href="qml-qtcharts-legend.html#borderColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="color" fullname="QtCharts.Legend.color" href="qml-qtcharts-legend.html#color-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="font" fullname="QtCharts.Legend.font" href="qml-qtcharts-legend.html#font-prop" status="active" access="public" documented="true" type="Font" attached="false" writable="true"/>
            <qmlproperty name="labelColor" fullname="QtCharts.Legend.labelColor" href="qml-qtcharts-legend.html#labelColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="markerShape" fullname="QtCharts.Legend.markerShape" href="qml-qtcharts-legend.html#markerShape-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="reverseMarkers" fullname="QtCharts.Legend.reverseMarkers" href="qml-qtcharts-legend.html#reverseMarkers-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="showToolTips" fullname="QtCharts.Legend.showToolTips" href="qml-qtcharts-legend.html#showToolTips-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="visible" fullname="QtCharts.Legend.visible" href="qml-qtcharts-legend.html#visible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="LineSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::XYSeries" fullname="QtCharts.LineSeries" href="qml-qtcharts-lineseries.html" status="active" access="public" documented="true" title="LineSeries" fulltitle="LineSeries" subtitle="" brief="Presents data in line charts">
            <qmlproperty name="capStyle" fullname="QtCharts.LineSeries.capStyle" href="qml-qtcharts-lineseries.html#capStyle-prop" status="active" access="public" documented="true" type="Qt::PenCapStyle" attached="false" writable="true"/>
            <qmlproperty name="count" fullname="QtCharts.LineSeries.count" href="qml-qtcharts-lineseries.html#count-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="style" fullname="QtCharts.LineSeries.style" href="qml-qtcharts-lineseries.html#style-prop" status="active" access="public" documented="true" type="Qt::PenStyle" attached="false" writable="true"/>
            <qmlproperty name="width" fullname="QtCharts.LineSeries.width" href="qml-qtcharts-lineseries.html#width-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="LogValueAxis" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractAxis" fullname="QtCharts.LogValueAxis" href="qml-qtcharts-logvalueaxis.html" status="active" access="public" documented="true" title="LogValueAxis" fulltitle="LogValueAxis" subtitle="" brief="Adds a logarithmic scale to a chart's axis">
            <function name="minorTickCountChanged" fullname="QtCharts.LogValueAxis.minorTickCountChanged" href="qml-qtcharts-logvalueaxis.html#minorTickCountChanged-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="minorTickCount" default=""/>
            </function>
            <function name="tickCountChanged" fullname="QtCharts.LogValueAxis.tickCountChanged" href="qml-qtcharts-logvalueaxis.html#tickCountChanged-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="tickCount" default=""/>
            </function>
            <qmlproperty name="base" fullname="QtCharts.LogValueAxis.base" href="qml-qtcharts-logvalueaxis.html#base-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="labelFormat" fullname="QtCharts.LogValueAxis.labelFormat" href="qml-qtcharts-logvalueaxis.html#labelFormat-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="max" fullname="QtCharts.LogValueAxis.max" href="qml-qtcharts-logvalueaxis.html#max-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="min" fullname="QtCharts.LogValueAxis.min" href="qml-qtcharts-logvalueaxis.html#min-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="minorTickCount" fullname="QtCharts.LogValueAxis.minorTickCount" href="qml-qtcharts-logvalueaxis.html#minorTickCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="tickCount" fullname="QtCharts.LogValueAxis.tickCount" href="qml-qtcharts-logvalueaxis.html#tickCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="false"/>
        </qmlclass>
        <qmlclass name="Margins" qml-module-name="QtCharts" fullname="QtCharts.Margins" href="qml-qtcharts-margins.html" status="active" access="public" documented="true" title="Margins" fulltitle="Margins" subtitle="" brief="Defines margins between the edge of the chart rectangle and the plot area">
            <qmlproperty name="bottom" fullname="QtCharts.Margins.bottom" href="qml-qtcharts-margins.html#bottom-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="left" fullname="QtCharts.Margins.left" href="qml-qtcharts-margins.html#left-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="right" fullname="QtCharts.Margins.right" href="qml-qtcharts-margins.html#right-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="top" fullname="QtCharts.Margins.top" href="qml-qtcharts-margins.html#top-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="PercentBarSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractBarSeries" fullname="QtCharts.PercentBarSeries" href="qml-qtcharts-percentbarseries.html" status="active" access="public" documented="true" title="PercentBarSeries" fulltitle="PercentBarSeries" subtitle="" brief="Presents a series of categorized data as a percentage of each category"/>
        <qmlclass name="PieSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractSeries" fullname="QtCharts.PieSeries" href="qml-qtcharts-pieseries.html" status="active" access="public" documented="true" title="PieSeries" fulltitle="PieSeries" subtitle="" brief="Presents data in pie charts">
            <function name="added" fullname="QtCharts.PieSeries.added" href="qml-qtcharts-pieseries.html#added-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="list&lt;PieSlice&gt;" name="slices" default=""/>
            </function>
            <function name="append" fullname="QtCharts.PieSeries.append" href="qml-qtcharts-pieseries.html#append-method" status="active" access="public" documented="true" meta="qmlmethod" type="PieSlice">
                <parameter type="string" name="label" default=""/>
                <parameter type="real" name="value" default=""/>
            </function>
            <function name="at" fullname="QtCharts.PieSeries.at" href="qml-qtcharts-pieseries.html#at-method" status="active" access="public" documented="true" meta="qmlmethod" type="PieSlice">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="clear" fullname="QtCharts.PieSeries.clear" href="qml-qtcharts-pieseries.html#clear-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="clicked" fullname="QtCharts.PieSeries.clicked" href="qml-qtcharts-pieseries.html#clicked-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="PieSlice" name="slice" default=""/>
            </function>
            <function name="doubleClicked" fullname="QtCharts.PieSeries.doubleClicked" href="qml-qtcharts-pieseries.html#doubleClicked-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="PieSlice" name="slice" default=""/>
            </function>
            <function name="find" fullname="QtCharts.PieSeries.find" href="qml-qtcharts-pieseries.html#find-method" status="active" access="public" documented="true" meta="qmlmethod" type="PieSlice">
                <parameter type="string" name="label" default=""/>
            </function>
            <function name="hovered" fullname="QtCharts.PieSeries.hovered" href="qml-qtcharts-pieseries.html#hovered-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="PieSlice" name="slice" default=""/>
                <parameter type="bool" name="state" default=""/>
            </function>
            <function name="pressed" fullname="QtCharts.PieSeries.pressed" href="qml-qtcharts-pieseries.html#pressed-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="PieSlice" name="slice" default=""/>
            </function>
            <function name="released" fullname="QtCharts.PieSeries.released" href="qml-qtcharts-pieseries.html#released-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="PieSlice" name="slice" default=""/>
            </function>
            <function name="remove" fullname="QtCharts.PieSeries.remove" href="qml-qtcharts-pieseries.html#remove-method" status="active" access="public" documented="true" meta="qmlmethod" type="bool">
                <parameter type="PieSlice" name="slice" default=""/>
            </function>
            <function name="removed" fullname="QtCharts.PieSeries.removed" href="qml-qtcharts-pieseries.html#removed-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="list&lt;PieSlice&gt;" name="slices" default=""/>
            </function>
            <function name="sliceAdded" fullname="QtCharts.PieSeries.sliceAdded" href="qml-qtcharts-pieseries.html#sliceAdded-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="PieSlice" name="slice" default=""/>
            </function>
            <function name="sliceRemoved" fullname="QtCharts.PieSeries.sliceRemoved" href="qml-qtcharts-pieseries.html#sliceRemoved-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="PieSlice" name="slice" default=""/>
            </function>
            <qmlproperty name="count" fullname="QtCharts.PieSeries.count" href="qml-qtcharts-pieseries.html#count-prop" status="active" access="public" documented="true" type="int" attached="false" writable="false"/>
            <qmlproperty name="endAngle" fullname="QtCharts.PieSeries.endAngle" href="qml-qtcharts-pieseries.html#endAngle-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="holeSize" fullname="QtCharts.PieSeries.holeSize" href="qml-qtcharts-pieseries.html#holeSize-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="horizontalPosition" fullname="QtCharts.PieSeries.horizontalPosition" href="qml-qtcharts-pieseries.html#horizontalPosition-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="size" fullname="QtCharts.PieSeries.size" href="qml-qtcharts-pieseries.html#size-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="startAngle" fullname="QtCharts.PieSeries.startAngle" href="qml-qtcharts-pieseries.html#startAngle-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="sum" fullname="QtCharts.PieSeries.sum" href="qml-qtcharts-pieseries.html#sum-prop" status="active" access="public" documented="true" type="real" attached="false" writable="false"/>
            <qmlproperty name="verticalPosition" fullname="QtCharts.PieSeries.verticalPosition" href="qml-qtcharts-pieseries.html#verticalPosition-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="PieSlice" qml-module-name="QtCharts" fullname="QtCharts.PieSlice" href="qml-qtcharts-pieslice.html" status="active" access="public" documented="true" title="PieSlice" fulltitle="PieSlice" subtitle="" brief="Represents a single slice in a pie series">
            <function name="clicked" fullname="QtCharts.PieSlice.clicked" href="qml-qtcharts-pieslice.html#clicked-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="doubleClicked" fullname="QtCharts.PieSlice.doubleClicked" href="qml-qtcharts-pieslice.html#doubleClicked-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="hovered" fullname="QtCharts.PieSlice.hovered" href="qml-qtcharts-pieslice.html#hovered-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="bool" name="state" default=""/>
            </function>
            <function name="pressed" fullname="QtCharts.PieSlice.pressed" href="qml-qtcharts-pieslice.html#pressed-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="released" fullname="QtCharts.PieSlice.released" href="qml-qtcharts-pieslice.html#released-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <qmlproperty name="angleSpan" fullname="QtCharts.PieSlice.angleSpan" href="qml-qtcharts-pieslice.html#angleSpan-prop" status="active" access="public" documented="true" type="real" attached="false" writable="false"/>
            <qmlproperty name="borderColor" fullname="QtCharts.PieSlice.borderColor" href="qml-qtcharts-pieslice.html#borderColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="borderWidth" fullname="QtCharts.PieSlice.borderWidth" href="qml-qtcharts-pieslice.html#borderWidth-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="brushFilename" fullname="QtCharts.PieSlice.brushFilename" href="qml-qtcharts-pieslice.html#brushFilename-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="color" fullname="QtCharts.PieSlice.color" href="qml-qtcharts-pieslice.html#color-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="explodeDistanceFactor" fullname="QtCharts.PieSlice.explodeDistanceFactor" href="qml-qtcharts-pieslice.html#explodeDistanceFactor-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="exploded" fullname="QtCharts.PieSlice.exploded" href="qml-qtcharts-pieslice.html#exploded-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="label" fullname="QtCharts.PieSlice.label" href="qml-qtcharts-pieslice.html#label-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="labelArmLengthFactor" fullname="QtCharts.PieSlice.labelArmLengthFactor" href="qml-qtcharts-pieslice.html#labelArmLengthFactor-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="labelColor" fullname="QtCharts.PieSlice.labelColor" href="qml-qtcharts-pieslice.html#labelColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="labelFont" fullname="QtCharts.PieSlice.labelFont" href="qml-qtcharts-pieslice.html#labelFont-prop" status="active" access="public" documented="true" type="font" attached="false" writable="true"/>
            <qmlproperty name="labelPosition" fullname="QtCharts.PieSlice.labelPosition" href="qml-qtcharts-pieslice.html#labelPosition-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="labelVisible" fullname="QtCharts.PieSlice.labelVisible" href="qml-qtcharts-pieslice.html#labelVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="percentage" fullname="QtCharts.PieSlice.percentage" href="qml-qtcharts-pieslice.html#percentage-prop" status="active" access="public" documented="true" type="real" attached="false" writable="false"/>
            <qmlproperty name="startAngle" fullname="QtCharts.PieSlice.startAngle" href="qml-qtcharts-pieslice.html#startAngle-prop" status="active" access="public" documented="true" type="real" attached="false" writable="false"/>
            <qmlproperty name="value" fullname="QtCharts.PieSlice.value" href="qml-qtcharts-pieslice.html#value-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="PolarChartView" qml-module-name="QtCharts" qml-base-type="QtCharts::ChartView" fullname="QtCharts.PolarChartView" href="qml-qtcharts-polarchartview.html" status="active" access="public" documented="true" title="PolarChartView" fulltitle="PolarChartView" subtitle="" brief="Presents data in polar charts"/>
        <class name="QAbstractAxis" href="qabstractaxis.html" status="active" access="public" location="qabstractaxis.h" documented="true" bases="QObject" module="QtCharts" brief="Base class used for specialized axis classes">
            <function name="alignment" fullname="QAbstractAxis::alignment" href="qabstractaxis.html#alignment-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="alignment" type="Qt::Alignment" signature="Qt::Alignment alignment() const"/>
            <function name="colorChanged" fullname="QAbstractAxis::colorChanged" href="qabstractaxis.html#colorChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="color" type="void" signature="void colorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="gridLineColor" fullname="QAbstractAxis::gridLineColor" href="qabstractaxis.html#gridLineColor-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="gridLineColor" type="QColor" signature="QColor gridLineColor()"/>
            <function name="gridLineColorChanged" fullname="QAbstractAxis::gridLineColorChanged" href="qabstractaxis.html#gridLineColorChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="gridLineColor" type="void" signature="void gridLineColorChanged(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="gridLinePen" fullname="QAbstractAxis::gridLinePen" href="qabstractaxis.html#gridLinePen" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" const="true" associated-property="gridLinePen" type="QPen" signature="QPen gridLinePen() const"/>
            <function name="gridLinePenChanged" fullname="QAbstractAxis::gridLinePenChanged" href="qabstractaxis.html#gridLinePenChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="gridLinePen" type="void" signature="void gridLinePenChanged(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="gridVisibleChanged" fullname="QAbstractAxis::gridVisibleChanged" href="qabstractaxis.html#gridVisibleChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="gridVisible" type="void" signature="void gridVisibleChanged(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="hide" fullname="QAbstractAxis::hide" href="qabstractaxis.html#hide" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" type="void" signature="void hide()"/>
            <function name="isGridLineVisible" fullname="QAbstractAxis::isGridLineVisible" href="qabstractaxis.html#gridVisible-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="gridVisible" type="bool" signature="bool isGridLineVisible() const"/>
            <function name="isLineVisible" fullname="QAbstractAxis::isLineVisible" href="qabstractaxis.html#lineVisible-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="lineVisible" type="bool" signature="bool isLineVisible() const"/>
            <function name="isMinorGridLineVisible" fullname="QAbstractAxis::isMinorGridLineVisible" href="qabstractaxis.html#minorGridVisible-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="minorGridVisible" type="bool" signature="bool isMinorGridLineVisible() const"/>
            <function name="isReverse" fullname="QAbstractAxis::isReverse" href="qabstractaxis.html#reverse-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="reverse" type="bool" signature="bool isReverse() const"/>
            <function name="isTitleVisible" fullname="QAbstractAxis::isTitleVisible" href="qabstractaxis.html#titleVisible-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="titleVisible" type="bool" signature="bool isTitleVisible() const"/>
            <function name="isVisible" fullname="QAbstractAxis::isVisible" href="qabstractaxis.html#visible-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="visible" type="bool" signature="bool isVisible() const"/>
            <function name="labelsAngle" fullname="QAbstractAxis::labelsAngle" href="qabstractaxis.html#labelsAngle-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="labelsAngle" type="int" signature="int labelsAngle() const"/>
            <function name="labelsAngleChanged" fullname="QAbstractAxis::labelsAngleChanged" href="qabstractaxis.html#labelsAngleChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="labelsAngle" type="void" signature="void labelsAngleChanged(int angle)">
                <parameter type="int" name="angle" default=""/>
            </function>
            <function name="labelsBrush" fullname="QAbstractAxis::labelsBrush" href="qabstractaxis.html#labelsBrush" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" const="true" associated-property="labelsBrush" type="QBrush" signature="QBrush labelsBrush() const"/>
            <function name="labelsBrushChanged" fullname="QAbstractAxis::labelsBrushChanged" href="qabstractaxis.html#labelsBrushChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="labelsBrush" type="void" signature="void labelsBrushChanged(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="labelsColor" fullname="QAbstractAxis::labelsColor" href="qabstractaxis.html#labelsColor-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="labelsColor" type="QColor" signature="QColor labelsColor() const"/>
            <function name="labelsColorChanged" fullname="QAbstractAxis::labelsColorChanged" href="qabstractaxis.html#labelsColorChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="labelsColor" type="void" signature="void labelsColorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="labelsEditable" fullname="QAbstractAxis::labelsEditable" href="qabstractaxis.html#labelsEditable" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" const="true" type="bool" signature="bool labelsEditable() const"/>
            <function name="labelsEditableChanged" fullname="QAbstractAxis::labelsEditableChanged" href="qabstractaxis.html#labelsEditableChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" type="void" signature="void labelsEditableChanged(bool editable)">
                <parameter type="bool" name="editable" default=""/>
            </function>
            <function name="labelsFont" fullname="QAbstractAxis::labelsFont" href="qabstractaxis.html#labelsFont" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" const="true" associated-property="labelsFont" type="QFont" signature="QFont labelsFont() const"/>
            <function name="labelsFontChanged" fullname="QAbstractAxis::labelsFontChanged" href="qabstractaxis.html#labelsFontChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="labelsFont" type="void" signature="void labelsFontChanged(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="labelsTruncated" fullname="QAbstractAxis::labelsTruncated" href="qabstractaxis.html#labelsTruncated-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="labelsTruncated" type="bool" signature="bool labelsTruncated() const"/>
            <function name="labelsTruncatedChanged" fullname="QAbstractAxis::labelsTruncatedChanged" href="qabstractaxis.html#labelsTruncatedChanged" status="active" access="public" location="qabstractaxis.h" documented="true" since="6.2" meta="signal" associated-property="labelsTruncated" type="void" signature="void labelsTruncatedChanged(bool labelsTruncated)">
                <parameter type="bool" name="labelsTruncated" default=""/>
            </function>
            <function name="labelsVisible" fullname="QAbstractAxis::labelsVisible" href="qabstractaxis.html#labelsVisible-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="labelsVisible" type="bool" signature="bool labelsVisible() const"/>
            <function name="labelsVisibleChanged" fullname="QAbstractAxis::labelsVisibleChanged" href="qabstractaxis.html#labelsVisibleChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="labelsVisible" type="void" signature="void labelsVisibleChanged(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="linePen" fullname="QAbstractAxis::linePen" href="qabstractaxis.html#linePen" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" const="true" associated-property="linePen" type="QPen" signature="QPen linePen() const"/>
            <function name="linePenChanged" fullname="QAbstractAxis::linePenChanged" href="qabstractaxis.html#linePenChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="linePen" type="void" signature="void linePenChanged(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="linePenColor" fullname="QAbstractAxis::linePenColor" href="qabstractaxis.html#color-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="color" type="QColor" signature="QColor linePenColor() const"/>
            <function name="lineVisibleChanged" fullname="QAbstractAxis::lineVisibleChanged" href="qabstractaxis.html#lineVisibleChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="lineVisible" type="void" signature="void lineVisibleChanged(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="minorGridLineColor" fullname="QAbstractAxis::minorGridLineColor" href="qabstractaxis.html#minorGridLineColor-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="minorGridLineColor" type="QColor" signature="QColor minorGridLineColor()"/>
            <function name="minorGridLineColorChanged" fullname="QAbstractAxis::minorGridLineColorChanged" href="qabstractaxis.html#minorGridLineColorChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="minorGridLineColor" type="void" signature="void minorGridLineColorChanged(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="minorGridLinePen" fullname="QAbstractAxis::minorGridLinePen" href="qabstractaxis.html#minorGridLinePen-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="minorGridLinePen" type="QPen" signature="QPen minorGridLinePen() const"/>
            <function name="minorGridLinePenChanged" fullname="QAbstractAxis::minorGridLinePenChanged" href="qabstractaxis.html#minorGridLinePenChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="minorGridLinePen" type="void" signature="void minorGridLinePenChanged(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="minorGridVisibleChanged" fullname="QAbstractAxis::minorGridVisibleChanged" href="qabstractaxis.html#minorGridVisibleChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="minorGridVisible" type="void" signature="void minorGridVisibleChanged(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="orientation" fullname="QAbstractAxis::orientation" href="qabstractaxis.html#orientation" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" const="true" associated-property="orientation" type="Qt::Orientation" signature="Qt::Orientation orientation() const"/>
            <function name="reverseChanged" fullname="QAbstractAxis::reverseChanged" href="qabstractaxis.html#reverse-prop" status="active" access="public" location="qabstractaxis.h" meta="signal" associated-property="reverse" type="void" signature="void reverseChanged(bool reverse)">
                <parameter type="bool" name="reverse" default=""/>
            </function>
            <function name="setGridLineColor" fullname="QAbstractAxis::setGridLineColor" href="qabstractaxis.html#gridLineColor-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="gridLineColor" type="void" signature="void setGridLineColor(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="setGridLinePen" fullname="QAbstractAxis::setGridLinePen" href="qabstractaxis.html#setGridLinePen" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" associated-property="gridLinePen" type="void" signature="void setGridLinePen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setGridLineVisible" fullname="QAbstractAxis::setGridLineVisible" href="qabstractaxis.html#gridVisible-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="gridVisible" type="void" signature="void setGridLineVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setLabelsAngle" fullname="QAbstractAxis::setLabelsAngle" href="qabstractaxis.html#labelsAngle-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="labelsAngle" type="void" signature="void setLabelsAngle(int angle)">
                <parameter type="int" name="angle" default=""/>
            </function>
            <function name="setLabelsBrush" fullname="QAbstractAxis::setLabelsBrush" href="qabstractaxis.html#setLabelsBrush" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" associated-property="labelsBrush" type="void" signature="void setLabelsBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setLabelsColor" fullname="QAbstractAxis::setLabelsColor" href="qabstractaxis.html#labelsColor-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="labelsColor" type="void" signature="void setLabelsColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setLabelsEditable" fullname="QAbstractAxis::setLabelsEditable" href="qabstractaxis.html#setLabelsEditable" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" type="void" signature="void setLabelsEditable(bool editable)">
                <parameter type="bool" name="editable" default="true"/>
            </function>
            <function name="setLabelsFont" fullname="QAbstractAxis::setLabelsFont" href="qabstractaxis.html#setLabelsFont" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" associated-property="labelsFont" type="void" signature="void setLabelsFont(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="setLabelsVisible" fullname="QAbstractAxis::setLabelsVisible" href="qabstractaxis.html#labelsVisible-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="labelsVisible" type="void" signature="void setLabelsVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setLinePen" fullname="QAbstractAxis::setLinePen" href="qabstractaxis.html#setLinePen" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" associated-property="linePen" type="void" signature="void setLinePen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setLinePenColor" fullname="QAbstractAxis::setLinePenColor" href="qabstractaxis.html#color-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="color" type="void" signature="void setLinePenColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setLineVisible" fullname="QAbstractAxis::setLineVisible" href="qabstractaxis.html#setLineVisible" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" associated-property="lineVisible" type="void" signature="void setLineVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setMax" fullname="QAbstractAxis::setMax" href="qabstractaxis.html#setMax" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" type="void" signature="void setMax(const QVariant &amp;max)">
                <parameter type="const QVariant &amp;" name="max" default=""/>
            </function>
            <function name="setMin" fullname="QAbstractAxis::setMin" href="qabstractaxis.html#setMin" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" type="void" signature="void setMin(const QVariant &amp;min)">
                <parameter type="const QVariant &amp;" name="min" default=""/>
            </function>
            <function name="setMinorGridLineColor" fullname="QAbstractAxis::setMinorGridLineColor" href="qabstractaxis.html#minorGridLineColor-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="minorGridLineColor" type="void" signature="void setMinorGridLineColor(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="setMinorGridLinePen" fullname="QAbstractAxis::setMinorGridLinePen" href="qabstractaxis.html#minorGridLinePen-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="minorGridLinePen" type="void" signature="void setMinorGridLinePen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setMinorGridLineVisible" fullname="QAbstractAxis::setMinorGridLineVisible" href="qabstractaxis.html#minorGridVisible-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="minorGridVisible" type="void" signature="void setMinorGridLineVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setRange" fullname="QAbstractAxis::setRange" href="qabstractaxis.html#setRange" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" type="void" signature="void setRange(const QVariant &amp;min, const QVariant &amp;max)">
                <parameter type="const QVariant &amp;" name="min" default=""/>
                <parameter type="const QVariant &amp;" name="max" default=""/>
            </function>
            <function name="setReverse" fullname="QAbstractAxis::setReverse" href="qabstractaxis.html#reverse-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="reverse" type="void" signature="void setReverse(bool reverse)">
                <parameter type="bool" name="reverse" default="true"/>
            </function>
            <function name="setShadesBorderColor" fullname="QAbstractAxis::setShadesBorderColor" href="qabstractaxis.html#shadesBorderColor-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="shadesBorderColor" type="void" signature="void setShadesBorderColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setShadesBrush" fullname="QAbstractAxis::setShadesBrush" href="qabstractaxis.html#setShadesBrush" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" associated-property="shadesBrush" type="void" signature="void setShadesBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setShadesColor" fullname="QAbstractAxis::setShadesColor" href="qabstractaxis.html#shadesColor-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="shadesColor" type="void" signature="void setShadesColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setShadesPen" fullname="QAbstractAxis::setShadesPen" href="qabstractaxis.html#setShadesPen" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" associated-property="shadesPen" type="void" signature="void setShadesPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setShadesVisible" fullname="QAbstractAxis::setShadesVisible" href="qabstractaxis.html#shadesVisible-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="shadesVisible" type="void" signature="void setShadesVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setTitleBrush" fullname="QAbstractAxis::setTitleBrush" href="qabstractaxis.html#setTitleBrush" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" associated-property="titleBrush" type="void" signature="void setTitleBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setTitleFont" fullname="QAbstractAxis::setTitleFont" href="qabstractaxis.html#setTitleFont" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" associated-property="titleFont" type="void" signature="void setTitleFont(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="setTitleText" fullname="QAbstractAxis::setTitleText" href="qabstractaxis.html#titleText-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="titleText" type="void" signature="void setTitleText(const QString &amp;title)">
                <parameter type="const QString &amp;" name="title" default=""/>
            </function>
            <function name="setTitleVisible" fullname="QAbstractAxis::setTitleVisible" href="qabstractaxis.html#titleVisible-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="titleVisible" type="void" signature="void setTitleVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setTruncateLabels" fullname="QAbstractAxis::setTruncateLabels" href="qabstractaxis.html#truncateLabels-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" associated-property="truncateLabels" type="void" signature="void setTruncateLabels(bool truncateLabels)">
                <parameter type="bool" name="truncateLabels" default="true"/>
            </function>
            <function name="setVisible" fullname="QAbstractAxis::setVisible" href="qabstractaxis.html#setVisible" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" associated-property="visible" type="void" signature="void setVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="shadesBorderColor" fullname="QAbstractAxis::shadesBorderColor" href="qabstractaxis.html#shadesBorderColor-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="shadesBorderColor" type="QColor" signature="QColor shadesBorderColor() const"/>
            <function name="shadesBorderColorChanged" fullname="QAbstractAxis::shadesBorderColorChanged" href="qabstractaxis.html#shadesBorderColorChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="shadesBorderColor" type="void" signature="void shadesBorderColorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="shadesBrush" fullname="QAbstractAxis::shadesBrush" href="qabstractaxis.html#shadesBrush" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" const="true" associated-property="shadesBrush" type="QBrush" signature="QBrush shadesBrush() const"/>
            <function name="shadesBrushChanged" fullname="QAbstractAxis::shadesBrushChanged" href="qabstractaxis.html#shadesBrushChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="shadesBrush" type="void" signature="void shadesBrushChanged(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="shadesColor" fullname="QAbstractAxis::shadesColor" href="qabstractaxis.html#shadesColor-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="shadesColor" type="QColor" signature="QColor shadesColor() const"/>
            <function name="shadesColorChanged" fullname="QAbstractAxis::shadesColorChanged" href="qabstractaxis.html#shadesColorChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="shadesColor" type="void" signature="void shadesColorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="shadesPen" fullname="QAbstractAxis::shadesPen" href="qabstractaxis.html#shadesPen" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" const="true" associated-property="shadesPen" type="QPen" signature="QPen shadesPen() const"/>
            <function name="shadesPenChanged" fullname="QAbstractAxis::shadesPenChanged" href="qabstractaxis.html#shadesPenChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="shadesPen" type="void" signature="void shadesPenChanged(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="shadesVisible" fullname="QAbstractAxis::shadesVisible" href="qabstractaxis.html#shadesVisible-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="shadesVisible" type="bool" signature="bool shadesVisible() const"/>
            <function name="shadesVisibleChanged" fullname="QAbstractAxis::shadesVisibleChanged" href="qabstractaxis.html#shadesVisibleChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="shadesVisible" type="void" signature="void shadesVisibleChanged(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="show" fullname="QAbstractAxis::show" href="qabstractaxis.html#show" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" type="void" signature="void show()"/>
            <function name="titleBrush" fullname="QAbstractAxis::titleBrush" href="qabstractaxis.html#titleBrush" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" const="true" associated-property="titleBrush" type="QBrush" signature="QBrush titleBrush() const"/>
            <function name="titleBrushChanged" fullname="QAbstractAxis::titleBrushChanged" href="qabstractaxis.html#titleBrushChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="titleBrush" type="void" signature="void titleBrushChanged(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="titleFont" fullname="QAbstractAxis::titleFont" href="qabstractaxis.html#titleFont" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" const="true" associated-property="titleFont" type="QFont" signature="QFont titleFont() const"/>
            <function name="titleFontChanged" fullname="QAbstractAxis::titleFontChanged" href="qabstractaxis.html#titleFontChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="titleFont" type="void" signature="void titleFontChanged(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="titleText" fullname="QAbstractAxis::titleText" href="qabstractaxis.html#titleText-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="titleText" type="QString" signature="QString titleText() const"/>
            <function name="titleTextChanged" fullname="QAbstractAxis::titleTextChanged" href="qabstractaxis.html#titleTextChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="titleText" type="void" signature="void titleTextChanged(const QString &amp;text)">
                <parameter type="const QString &amp;" name="text" default=""/>
            </function>
            <function name="titleVisibleChanged" fullname="QAbstractAxis::titleVisibleChanged" href="qabstractaxis.html#titleVisibleChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="titleVisible" type="void" signature="void titleVisibleChanged(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="truncateLabels" fullname="QAbstractAxis::truncateLabels" href="qabstractaxis.html#truncateLabels-prop" status="active" access="public" location="qabstractaxis.h" meta="plain" const="true" associated-property="truncateLabels" type="bool" signature="bool truncateLabels() const"/>
            <function name="truncateLabelsChanged" fullname="QAbstractAxis::truncateLabelsChanged" href="qabstractaxis.html#truncateLabelsChanged" status="active" access="public" location="qabstractaxis.h" documented="true" since="6.2" meta="signal" associated-property="truncateLabels" type="void" signature="void truncateLabelsChanged(bool truncateLabels)">
                <parameter type="bool" name="truncateLabels" default=""/>
            </function>
            <function name="type" fullname="QAbstractAxis::type" href="qabstractaxis.html#type" status="active" access="public" location="qabstractaxis.h" documented="true" meta="plain" virtual="pure" const="true" type="QAbstractAxis::AxisType" signature="QAbstractAxis::AxisType type() const = 0"/>
            <function name="visibleChanged" fullname="QAbstractAxis::visibleChanged" href="qabstractaxis.html#visibleChanged" status="active" access="public" location="qabstractaxis.h" documented="true" meta="signal" associated-property="visible" type="void" signature="void visibleChanged(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="~QAbstractAxis" fullname="QAbstractAxis::~QAbstractAxis" href="qabstractaxis.html#dtor.QAbstractAxis" status="active" access="public" location="qabstractaxis.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QAbstractAxis()"/>
            <enum name="AxisType" fullname="QAbstractAxis::AxisType" href="qabstractaxis.html#AxisType-enum" status="active" access="public" location="qabstractaxis.h" documented="true" typedef="QAbstractAxis::AxisTypes">
                <value name="AxisTypeNoAxis" value="0x0"/>
                <value name="AxisTypeValue" value="0x1"/>
                <value name="AxisTypeBarCategory" value="0x2"/>
                <value name="AxisTypeCategory" value="0x4"/>
                <value name="AxisTypeDateTime" value="0x8"/>
                <value name="AxisTypeLogValue" value="0x10"/>
                <value name="AxisTypeColor" value="0x20"/>
            </enum>
            <typedef name="AxisTypes" fullname="QAbstractAxis::AxisTypes" href="qabstractaxis.html#AxisType-enum" status="active" access="public" location="qabstractaxis.h" enum="QAbstractAxis::AxisType"/>
            <property name="alignment" fullname="QAbstractAxis::alignment" href="qabstractaxis.html#alignment-prop" status="active" access="public" location="qabstractaxis.h" documented="true" writable="false" brief="Of the axis">
                <getter name="alignment"/>
            </property>
            <property name="color" fullname="QAbstractAxis::color" href="qabstractaxis.html#color-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Of the axis and tick marks">
                <getter name="linePenColor"/>
                <setter name="setLinePenColor"/>
                <notifier name="colorChanged"/>
            </property>
            <property name="gridLineColor" fullname="QAbstractAxis::gridLineColor" href="qabstractaxis.html#gridLineColor-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Color of the grid line">
                <getter name="gridLineColor"/>
                <setter name="setGridLineColor"/>
                <notifier name="gridLineColorChanged"/>
            </property>
            <property name="gridLinePen" fullname="QAbstractAxis::gridLinePen" href="qabstractaxis.html#gridLinePen-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Pen used to draw the grid line">
                <getter name="gridLinePen"/>
                <setter name="setGridLinePen"/>
                <notifier name="gridLinePenChanged"/>
            </property>
            <property name="gridVisible" fullname="QAbstractAxis::gridVisible" href="qabstractaxis.html#gridVisible-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Visibility of the grid lines">
                <getter name="isGridLineVisible"/>
                <setter name="setGridLineVisible"/>
                <notifier name="gridVisibleChanged"/>
            </property>
            <property name="labelsAngle" fullname="QAbstractAxis::labelsAngle" href="qabstractaxis.html#labelsAngle-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Angle of the axis labels in degrees">
                <getter name="labelsAngle"/>
                <setter name="setLabelsAngle"/>
                <notifier name="labelsAngleChanged"/>
            </property>
            <property name="labelsBrush" fullname="QAbstractAxis::labelsBrush" href="qabstractaxis.html#labelsBrush-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Brush used to draw the labels">
                <getter name="labelsBrush"/>
                <setter name="setLabelsBrush"/>
                <notifier name="labelsBrushChanged"/>
            </property>
            <property name="labelsColor" fullname="QAbstractAxis::labelsColor" href="qabstractaxis.html#labelsColor-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Color of the axis labels">
                <getter name="labelsColor"/>
                <setter name="setLabelsColor"/>
                <notifier name="labelsColorChanged"/>
            </property>
            <property name="labelsFont" fullname="QAbstractAxis::labelsFont" href="qabstractaxis.html#labelsFont-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Font of the axis labels">
                <getter name="labelsFont"/>
                <setter name="setLabelsFont"/>
                <notifier name="labelsFontChanged"/>
            </property>
            <property name="labelsTruncated" fullname="QAbstractAxis::labelsTruncated" href="qabstractaxis.html#labelsTruncated-prop" status="active" access="public" location="qabstractaxis.h" documented="true" writable="false" brief="Returns true if at least one label on the axis is truncated">
                <getter name="labelsTruncated"/>
                <notifier name="labelsTruncatedChanged"/>
            </property>
            <property name="labelsVisible" fullname="QAbstractAxis::labelsVisible" href="qabstractaxis.html#labelsVisible-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Whether axis labels are visible">
                <getter name="labelsVisible"/>
                <setter name="setLabelsVisible"/>
                <notifier name="labelsVisibleChanged"/>
            </property>
            <property name="linePen" fullname="QAbstractAxis::linePen" href="qabstractaxis.html#linePen-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Pen used to draw the line">
                <getter name="linePen"/>
                <setter name="setLinePen"/>
                <notifier name="linePenChanged"/>
            </property>
            <property name="lineVisible" fullname="QAbstractAxis::lineVisible" href="qabstractaxis.html#lineVisible-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Visibility of the axis line">
                <getter name="isLineVisible"/>
                <setter name="setLineVisible"/>
                <notifier name="lineVisibleChanged"/>
            </property>
            <property name="minorGridLineColor" fullname="QAbstractAxis::minorGridLineColor" href="qabstractaxis.html#minorGridLineColor-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Color of the minor grid line">
                <getter name="minorGridLineColor"/>
                <setter name="setMinorGridLineColor"/>
                <notifier name="minorGridLineColorChanged"/>
            </property>
            <property name="minorGridLinePen" fullname="QAbstractAxis::minorGridLinePen" href="qabstractaxis.html#minorGridLinePen-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Pen used to draw the minor grid line">
                <getter name="minorGridLinePen"/>
                <setter name="setMinorGridLinePen"/>
                <notifier name="minorGridLinePenChanged"/>
            </property>
            <property name="minorGridVisible" fullname="QAbstractAxis::minorGridVisible" href="qabstractaxis.html#minorGridVisible-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Visibility of the minor grid lines">
                <getter name="isMinorGridLineVisible"/>
                <setter name="setMinorGridLineVisible"/>
                <notifier name="minorGridVisibleChanged"/>
            </property>
            <property name="orientation" fullname="QAbstractAxis::orientation" href="qabstractaxis.html#orientation-prop" status="active" access="public" location="qabstractaxis.h" documented="true" writable="false" brief="Of the axis">
                <getter name="orientation"/>
            </property>
            <property name="reverse" fullname="QAbstractAxis::reverse" href="qabstractaxis.html#reverse-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Whether a reverse axis is used">
                <getter name="isReverse"/>
                <setter name="setReverse"/>
                <notifier name="reverseChanged"/>
            </property>
            <property name="shadesBorderColor" fullname="QAbstractAxis::shadesBorderColor" href="qabstractaxis.html#shadesBorderColor-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Border (pen) color of the axis shades">
                <getter name="shadesBorderColor"/>
                <setter name="setShadesBorderColor"/>
                <notifier name="shadesBorderColorChanged"/>
            </property>
            <property name="shadesBrush" fullname="QAbstractAxis::shadesBrush" href="qabstractaxis.html#shadesBrush-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Brush used to draw the axis shades (the area between the grid lines)">
                <getter name="shadesBrush"/>
                <setter name="setShadesBrush"/>
                <notifier name="shadesBrushChanged"/>
            </property>
            <property name="shadesColor" fullname="QAbstractAxis::shadesColor" href="qabstractaxis.html#shadesColor-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Fill (brush) color of the axis shades">
                <getter name="shadesColor"/>
                <setter name="setShadesColor"/>
                <notifier name="shadesColorChanged"/>
            </property>
            <property name="shadesPen" fullname="QAbstractAxis::shadesPen" href="qabstractaxis.html#shadesPen-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Pen used to draw the axis shades (the area between the grid lines)">
                <getter name="shadesPen"/>
                <setter name="setShadesPen"/>
                <notifier name="shadesPenChanged"/>
            </property>
            <property name="shadesVisible" fullname="QAbstractAxis::shadesVisible" href="qabstractaxis.html#shadesVisible-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Visibility of the axis shades">
                <getter name="shadesVisible"/>
                <setter name="setShadesVisible"/>
                <notifier name="shadesVisibleChanged"/>
            </property>
            <property name="titleBrush" fullname="QAbstractAxis::titleBrush" href="qabstractaxis.html#titleBrush-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Brush used to draw the title text">
                <getter name="titleBrush"/>
                <setter name="setTitleBrush"/>
                <notifier name="titleBrushChanged"/>
            </property>
            <property name="titleFont" fullname="QAbstractAxis::titleFont" href="qabstractaxis.html#titleFont-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Font of the title of the axis">
                <getter name="titleFont"/>
                <setter name="setTitleFont"/>
                <notifier name="titleFontChanged"/>
            </property>
            <property name="titleText" fullname="QAbstractAxis::titleText" href="qabstractaxis.html#titleText-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Title of the axis">
                <getter name="titleText"/>
                <setter name="setTitleText"/>
                <notifier name="titleTextChanged"/>
            </property>
            <property name="titleVisible" fullname="QAbstractAxis::titleVisible" href="qabstractaxis.html#titleVisible-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Visibility of the axis title">
                <getter name="isTitleVisible"/>
                <setter name="setTitleVisible"/>
                <notifier name="titleVisibleChanged"/>
            </property>
            <property name="truncateLabels" fullname="QAbstractAxis::truncateLabels" href="qabstractaxis.html#truncateLabels-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Truncation state of labels">
                <getter name="truncateLabels"/>
                <setter name="setTruncateLabels"/>
                <notifier name="truncateLabelsChanged"/>
            </property>
            <property name="visible" fullname="QAbstractAxis::visible" href="qabstractaxis.html#visible-prop" status="active" access="public" location="qabstractaxis.h" documented="true" brief="Visibility of the axis">
                <getter name="isVisible"/>
                <setter name="setVisible"/>
                <notifier name="visibleChanged"/>
            </property>
        </class>
        <class name="QAbstractBarSeries" href="qabstractbarseries.html" status="active" access="public" location="qabstractbarseries.h" documented="true" bases="QAbstractSeries" module="QtCharts" brief="Abstract parent class for all bar series classes">
            <function name="append" fullname="QAbstractBarSeries::append" href="qabstractbarseries.html#append" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="plain" type="bool" signature="bool append(QBarSet *set)">
                <parameter type="QBarSet *" name="set" default=""/>
            </function>
            <function name="append" fullname="QAbstractBarSeries::append" href="qabstractbarseries.html#append-1" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="plain" overload="true" overload-number="1" type="bool" signature="bool append(const QList&lt;QBarSet *&gt; &amp;sets)">
                <parameter type="const QList&lt;QBarSet *&gt; &amp;" name="sets" default=""/>
            </function>
            <function name="barSets" fullname="QAbstractBarSeries::barSets" href="qabstractbarseries.html#barSets" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="plain" const="true" type="QList&lt;QBarSet *&gt;" signature="QList&lt;QBarSet *&gt; barSets() const"/>
            <function name="barWidth" fullname="QAbstractBarSeries::barWidth" href="qabstractbarseries.html#barWidth" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="plain" const="true" associated-property="barWidth" type="qreal" signature="qreal barWidth() const"/>
            <function name="barsetsAdded" fullname="QAbstractBarSeries::barsetsAdded" href="qabstractbarseries.html#barsetsAdded" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" type="void" signature="void barsetsAdded(const QList&lt;QBarSet *&gt; &amp;sets)">
                <parameter type="const QList&lt;QBarSet *&gt; &amp;" name="sets" default=""/>
            </function>
            <function name="barsetsRemoved" fullname="QAbstractBarSeries::barsetsRemoved" href="qabstractbarseries.html#barsetsRemoved" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" type="void" signature="void barsetsRemoved(const QList&lt;QBarSet *&gt; &amp;sets)">
                <parameter type="const QList&lt;QBarSet *&gt; &amp;" name="sets" default=""/>
            </function>
            <function name="clear" fullname="QAbstractBarSeries::clear" href="qabstractbarseries.html#clear" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="plain" type="void" signature="void clear()"/>
            <function name="clicked" fullname="QAbstractBarSeries::clicked" href="qabstractbarseries.html#clicked" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" type="void" signature="void clicked(int index, QBarSet *barset)">
                <parameter type="int" name="index" default=""/>
                <parameter type="QBarSet *" name="barset" default=""/>
            </function>
            <function name="count" fullname="QAbstractBarSeries::count" href="qabstractbarseries.html#count" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="plain" const="true" associated-property="count" type="int" signature="int count() const"/>
            <function name="countChanged" fullname="QAbstractBarSeries::countChanged" href="qabstractbarseries.html#countChanged" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" associated-property="count" type="void" signature="void countChanged()"/>
            <function name="doubleClicked" fullname="QAbstractBarSeries::doubleClicked" href="qabstractbarseries.html#doubleClicked" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" type="void" signature="void doubleClicked(int index, QBarSet *barset)">
                <parameter type="int" name="index" default=""/>
                <parameter type="QBarSet *" name="barset" default=""/>
            </function>
            <function name="hovered" fullname="QAbstractBarSeries::hovered" href="qabstractbarseries.html#hovered" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" type="void" signature="void hovered(bool status, int index, QBarSet *barset)">
                <parameter type="bool" name="status" default=""/>
                <parameter type="int" name="index" default=""/>
                <parameter type="QBarSet *" name="barset" default=""/>
            </function>
            <function name="insert" fullname="QAbstractBarSeries::insert" href="qabstractbarseries.html#insert" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="plain" type="bool" signature="bool insert(int index, QBarSet *set)">
                <parameter type="int" name="index" default=""/>
                <parameter type="QBarSet *" name="set" default=""/>
            </function>
            <function name="isLabelsVisible" fullname="QAbstractBarSeries::isLabelsVisible" href="qabstractbarseries.html#isLabelsVisible" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="plain" const="true" associated-property="labelsVisible" type="bool" signature="bool isLabelsVisible() const"/>
            <function name="labelsAngle" fullname="QAbstractBarSeries::labelsAngle" href="qabstractbarseries.html#labelsAngle-prop" status="active" access="public" location="qabstractbarseries.h" meta="plain" const="true" associated-property="labelsAngle" type="qreal" signature="qreal labelsAngle() const"/>
            <function name="labelsAngleChanged" fullname="QAbstractBarSeries::labelsAngleChanged" href="qabstractbarseries.html#labelsAngleChanged" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" associated-property="labelsAngle" type="void" signature="void labelsAngleChanged(qreal angle)">
                <parameter type="qreal" name="angle" default=""/>
            </function>
            <function name="labelsFormat" fullname="QAbstractBarSeries::labelsFormat" href="qabstractbarseries.html#labelsFormat-prop" status="active" access="public" location="qabstractbarseries.h" meta="plain" const="true" associated-property="labelsFormat" type="QString" signature="QString labelsFormat() const"/>
            <function name="labelsFormatChanged" fullname="QAbstractBarSeries::labelsFormatChanged" href="qabstractbarseries.html#labelsFormatChanged" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" associated-property="labelsFormat" type="void" signature="void labelsFormatChanged(const QString &amp;format)">
                <parameter type="const QString &amp;" name="format" default=""/>
            </function>
            <function name="labelsPosition" fullname="QAbstractBarSeries::labelsPosition" href="qabstractbarseries.html#labelsPosition-prop" status="active" access="public" location="qabstractbarseries.h" meta="plain" const="true" associated-property="labelsPosition" type="QAbstractBarSeries::LabelsPosition" signature="QAbstractBarSeries::LabelsPosition labelsPosition() const"/>
            <function name="labelsPositionChanged" fullname="QAbstractBarSeries::labelsPositionChanged" href="qabstractbarseries.html#labelsPositionChanged" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" associated-property="labelsPosition" type="void" signature="void labelsPositionChanged(QAbstractBarSeries::LabelsPosition position)">
                <parameter type="QAbstractBarSeries::LabelsPosition" name="position" default=""/>
            </function>
            <function name="labelsPrecision" fullname="QAbstractBarSeries::labelsPrecision" href="qabstractbarseries.html#labelsPrecision-prop" status="active" access="public" location="qabstractbarseries.h" meta="plain" const="true" associated-property="labelsPrecision" type="int" signature="int labelsPrecision() const"/>
            <function name="labelsPrecisionChanged" fullname="QAbstractBarSeries::labelsPrecisionChanged" href="qabstractbarseries.html#labelsPrecisionChanged" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" associated-property="labelsPrecision" type="void" signature="void labelsPrecisionChanged(int precision)">
                <parameter type="int" name="precision" default=""/>
            </function>
            <function name="labelsVisibleChanged" fullname="QAbstractBarSeries::labelsVisibleChanged" href="qabstractbarseries.html#labelsVisibleChanged" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" associated-property="labelsVisible" type="void" signature="void labelsVisibleChanged()"/>
            <function name="pressed" fullname="QAbstractBarSeries::pressed" href="qabstractbarseries.html#pressed" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" type="void" signature="void pressed(int index, QBarSet *barset)">
                <parameter type="int" name="index" default=""/>
                <parameter type="QBarSet *" name="barset" default=""/>
            </function>
            <function name="released" fullname="QAbstractBarSeries::released" href="qabstractbarseries.html#released" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="signal" type="void" signature="void released(int index, QBarSet *barset)">
                <parameter type="int" name="index" default=""/>
                <parameter type="QBarSet *" name="barset" default=""/>
            </function>
            <function name="remove" fullname="QAbstractBarSeries::remove" href="qabstractbarseries.html#remove" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="plain" type="bool" signature="bool remove(QBarSet *set)">
                <parameter type="QBarSet *" name="set" default=""/>
            </function>
            <function name="setBarWidth" fullname="QAbstractBarSeries::setBarWidth" href="qabstractbarseries.html#setBarWidth" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="plain" associated-property="barWidth" type="void" signature="void setBarWidth(qreal width)">
                <parameter type="qreal" name="width" default=""/>
            </function>
            <function name="setLabelsAngle" fullname="QAbstractBarSeries::setLabelsAngle" href="qabstractbarseries.html#labelsAngle-prop" status="active" access="public" location="qabstractbarseries.h" meta="plain" associated-property="labelsAngle" type="void" signature="void setLabelsAngle(qreal angle)">
                <parameter type="qreal" name="angle" default=""/>
            </function>
            <function name="setLabelsFormat" fullname="QAbstractBarSeries::setLabelsFormat" href="qabstractbarseries.html#labelsFormat-prop" status="active" access="public" location="qabstractbarseries.h" meta="plain" associated-property="labelsFormat" type="void" signature="void setLabelsFormat(const QString &amp;format)">
                <parameter type="const QString &amp;" name="format" default=""/>
            </function>
            <function name="setLabelsPosition" fullname="QAbstractBarSeries::setLabelsPosition" href="qabstractbarseries.html#labelsPosition-prop" status="active" access="public" location="qabstractbarseries.h" meta="plain" associated-property="labelsPosition" type="void" signature="void setLabelsPosition(QAbstractBarSeries::LabelsPosition position)">
                <parameter type="QAbstractBarSeries::LabelsPosition" name="position" default=""/>
            </function>
            <function name="setLabelsPrecision" fullname="QAbstractBarSeries::setLabelsPrecision" href="qabstractbarseries.html#labelsPrecision-prop" status="active" access="public" location="qabstractbarseries.h" meta="plain" associated-property="labelsPrecision" type="void" signature="void setLabelsPrecision(int precision)">
                <parameter type="int" name="precision" default=""/>
            </function>
            <function name="setLabelsVisible" fullname="QAbstractBarSeries::setLabelsVisible" href="qabstractbarseries.html#setLabelsVisible" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="plain" associated-property="labelsVisible" type="void" signature="void setLabelsVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="take" fullname="QAbstractBarSeries::take" href="qabstractbarseries.html#take" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="plain" type="bool" signature="bool take(QBarSet *set)">
                <parameter type="QBarSet *" name="set" default=""/>
            </function>
            <function name="~QAbstractBarSeries" fullname="QAbstractBarSeries::~QAbstractBarSeries" href="qabstractbarseries.html#dtor.QAbstractBarSeries" status="active" access="public" location="qabstractbarseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QAbstractBarSeries()"/>
            <enum name="LabelsPosition" fullname="QAbstractBarSeries::LabelsPosition" href="qabstractbarseries.html#LabelsPosition-enum" status="active" access="public" location="qabstractbarseries.h" documented="true">
                <value name="LabelsCenter" value="0"/>
                <value name="LabelsInsideEnd" value="1"/>
                <value name="LabelsInsideBase" value="2"/>
                <value name="LabelsOutsideEnd" value="3"/>
            </enum>
            <property name="barWidth" fullname="QAbstractBarSeries::barWidth" href="qabstractbarseries.html#barWidth-prop" status="active" access="public" location="qabstractbarseries.h" documented="true" brief="Width of the bars of the series">
                <getter name="barWidth"/>
                <setter name="setBarWidth"/>
            </property>
            <property name="count" fullname="QAbstractBarSeries::count" href="qabstractbarseries.html#count-prop" status="active" access="public" location="qabstractbarseries.h" documented="true" writable="false" brief="Number of bar sets in a bar series">
                <getter name="count"/>
                <notifier name="countChanged"/>
            </property>
            <property name="labelsAngle" fullname="QAbstractBarSeries::labelsAngle" href="qabstractbarseries.html#labelsAngle-prop" status="active" access="public" location="qabstractbarseries.h" documented="true" brief="Angle of the value labels in degrees">
                <getter name="labelsAngle"/>
                <setter name="setLabelsAngle"/>
                <notifier name="labelsAngleChanged"/>
            </property>
            <property name="labelsFormat" fullname="QAbstractBarSeries::labelsFormat" href="qabstractbarseries.html#labelsFormat-prop" status="active" access="public" location="qabstractbarseries.h" documented="true" brief="Format used for showing labels in a bar series">
                <getter name="labelsFormat"/>
                <setter name="setLabelsFormat"/>
                <notifier name="labelsFormatChanged"/>
            </property>
            <property name="labelsPosition" fullname="QAbstractBarSeries::labelsPosition" href="qabstractbarseries.html#labelsPosition-prop" status="active" access="public" location="qabstractbarseries.h" documented="true" brief="Position of value labels">
                <getter name="labelsPosition"/>
                <setter name="setLabelsPosition"/>
                <notifier name="labelsPositionChanged"/>
            </property>
            <property name="labelsPrecision" fullname="QAbstractBarSeries::labelsPrecision" href="qabstractbarseries.html#labelsPrecision-prop" status="active" access="public" location="qabstractbarseries.h" documented="true" brief="Maximum amount of significant digits shown in value labels">
                <getter name="labelsPrecision"/>
                <setter name="setLabelsPrecision"/>
                <notifier name="labelsPrecisionChanged"/>
            </property>
            <property name="labelsVisible" fullname="QAbstractBarSeries::labelsVisible" href="qabstractbarseries.html#labelsVisible-prop" status="active" access="public" location="qabstractbarseries.h" documented="true" brief="Visibility of the labels in a bar series">
                <getter name="isLabelsVisible"/>
                <setter name="setLabelsVisible"/>
                <notifier name="labelsVisibleChanged"/>
            </property>
        </class>
        <class name="QAbstractSeries" href="qabstractseries.html" status="active" access="public" location="qabstractseries.h" documented="true" bases="QObject" module="QtCharts" brief="Base class for all Qt Chart series">
            <function name="attachAxis" fullname="QAbstractSeries::attachAxis" href="qabstractseries.html#attachAxis" status="active" access="public" location="qabstractseries.h" documented="true" meta="plain" type="bool" signature="bool attachAxis(QAbstractAxis *axis)">
                <parameter type="QAbstractAxis *" name="axis" default=""/>
            </function>
            <function name="attachedAxes" fullname="QAbstractSeries::attachedAxes" href="qabstractseries.html#attachedAxes" status="active" access="public" location="qabstractseries.h" documented="true" meta="plain" type="QList&lt;QAbstractAxis *&gt;" signature="QList&lt;QAbstractAxis *&gt; attachedAxes()"/>
            <function name="chart" fullname="QAbstractSeries::chart" href="qabstractseries.html#chart" status="active" access="public" location="qabstractseries.h" documented="true" meta="plain" const="true" type="QChart *" signature="QChart * chart() const"/>
            <function name="detachAxis" fullname="QAbstractSeries::detachAxis" href="qabstractseries.html#detachAxis" status="active" access="public" location="qabstractseries.h" documented="true" meta="plain" type="bool" signature="bool detachAxis(QAbstractAxis *axis)">
                <parameter type="QAbstractAxis *" name="axis" default=""/>
            </function>
            <function name="hide" fullname="QAbstractSeries::hide" href="qabstractseries.html#hide" status="active" access="public" location="qabstractseries.h" documented="true" meta="plain" type="void" signature="void hide()"/>
            <function name="isVisible" fullname="QAbstractSeries::isVisible" href="qabstractseries.html#visible-prop" status="active" access="public" location="qabstractseries.h" meta="plain" const="true" associated-property="visible" type="bool" signature="bool isVisible() const"/>
            <function name="name" fullname="QAbstractSeries::name" href="qabstractseries.html#name-prop" status="active" access="public" location="qabstractseries.h" meta="plain" const="true" associated-property="name" type="QString" signature="QString name() const"/>
            <function name="nameChanged" fullname="QAbstractSeries::nameChanged" href="qabstractseries.html#nameChanged" status="active" access="public" location="qabstractseries.h" documented="true" meta="signal" associated-property="name" type="void" signature="void nameChanged()"/>
            <function name="opacity" fullname="QAbstractSeries::opacity" href="qabstractseries.html#opacity-prop" status="active" access="public" location="qabstractseries.h" meta="plain" const="true" associated-property="opacity" type="qreal" signature="qreal opacity() const"/>
            <function name="opacityChanged" fullname="QAbstractSeries::opacityChanged" href="qabstractseries.html#opacityChanged" status="active" access="public" location="qabstractseries.h" documented="true" meta="signal" associated-property="opacity" type="void" signature="void opacityChanged()"/>
            <function name="setName" fullname="QAbstractSeries::setName" href="qabstractseries.html#name-prop" status="active" access="public" location="qabstractseries.h" meta="plain" associated-property="name" type="void" signature="void setName(const QString &amp;name)">
                <parameter type="const QString &amp;" name="name" default=""/>
            </function>
            <function name="setOpacity" fullname="QAbstractSeries::setOpacity" href="qabstractseries.html#opacity-prop" status="active" access="public" location="qabstractseries.h" meta="plain" associated-property="opacity" type="void" signature="void setOpacity(qreal opacity)">
                <parameter type="qreal" name="opacity" default=""/>
            </function>
            <function name="setUseOpenGL" fullname="QAbstractSeries::setUseOpenGL" href="qabstractseries.html#useOpenGL-prop" status="active" access="public" location="qabstractseries.h" meta="plain" associated-property="useOpenGL" type="void" signature="void setUseOpenGL(bool enable)">
                <parameter type="bool" name="enable" default="true"/>
            </function>
            <function name="setVisible" fullname="QAbstractSeries::setVisible" href="qabstractseries.html#visible-prop" status="active" access="public" location="qabstractseries.h" meta="plain" associated-property="visible" type="void" signature="void setVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="show" fullname="QAbstractSeries::show" href="qabstractseries.html#show" status="active" access="public" location="qabstractseries.h" documented="true" meta="plain" type="void" signature="void show()"/>
            <function name="type" fullname="QAbstractSeries::type" href="qabstractseries.html#type-prop" status="active" access="public" location="qabstractseries.h" meta="plain" virtual="pure" const="true" associated-property="type" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const = 0"/>
            <function name="useOpenGL" fullname="QAbstractSeries::useOpenGL" href="qabstractseries.html#useOpenGL-prop" status="active" access="public" location="qabstractseries.h" meta="plain" const="true" associated-property="useOpenGL" type="bool" signature="bool useOpenGL() const"/>
            <function name="useOpenGLChanged" fullname="QAbstractSeries::useOpenGLChanged" href="qabstractseries.html#useOpenGLChanged" status="active" access="public" location="qabstractseries.h" documented="true" meta="signal" associated-property="useOpenGL" type="void" signature="void useOpenGLChanged()"/>
            <function name="visibleChanged" fullname="QAbstractSeries::visibleChanged" href="qabstractseries.html#visibleChanged" status="active" access="public" location="qabstractseries.h" documented="true" meta="signal" associated-property="visible" type="void" signature="void visibleChanged()"/>
            <function name="~QAbstractSeries" fullname="QAbstractSeries::~QAbstractSeries" href="qabstractseries.html#dtor.QAbstractSeries" status="active" access="public" location="qabstractseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" brief="Virtual destructor for the chart series" signature="~QAbstractSeries()"/>
            <enum name="SeriesType" fullname="QAbstractSeries::SeriesType" href="qabstractseries.html#SeriesType-enum" status="active" access="public" location="qabstractseries.h" documented="true">
                <value name="SeriesTypeLine" value="0"/>
                <value name="SeriesTypeArea" value="1"/>
                <value name="SeriesTypeBar" value="2"/>
                <value name="SeriesTypeStackedBar" value="3"/>
                <value name="SeriesTypePercentBar" value="4"/>
                <value name="SeriesTypePie" value="5"/>
                <value name="SeriesTypeScatter" value="6"/>
                <value name="SeriesTypeSpline" value="7"/>
                <value name="SeriesTypeHorizontalBar" value="8"/>
                <value name="SeriesTypeHorizontalStackedBar" value="9"/>
                <value name="SeriesTypeHorizontalPercentBar" value="10"/>
                <value name="SeriesTypeBoxPlot" value="11"/>
                <value name="SeriesTypeCandlestick" value="12"/>
            </enum>
            <property name="name" fullname="QAbstractSeries::name" href="qabstractseries.html#name-prop" status="active" access="public" location="qabstractseries.h" documented="true" brief="Of the series">
                <getter name="name"/>
                <setter name="setName"/>
                <notifier name="nameChanged"/>
            </property>
            <property name="opacity" fullname="QAbstractSeries::opacity" href="qabstractseries.html#opacity-prop" status="active" access="public" location="qabstractseries.h" documented="true" brief="Of the series">
                <getter name="opacity"/>
                <setter name="setOpacity"/>
                <notifier name="opacityChanged"/>
            </property>
            <property name="type" fullname="QAbstractSeries::type" href="qabstractseries.html#type-prop" status="active" access="public" location="qabstractseries.h" documented="true" writable="false" brief="Of the series">
                <getter name="type"/>
            </property>
            <property name="useOpenGL" fullname="QAbstractSeries::useOpenGL" href="qabstractseries.html#useOpenGL-prop" status="active" access="public" location="qabstractseries.h" documented="true" brief="Specifies whether or not drawing the series is accelerated by using OpenGL">
                <getter name="useOpenGL"/>
                <setter name="setUseOpenGL"/>
                <notifier name="useOpenGLChanged"/>
            </property>
            <property name="visible" fullname="QAbstractSeries::visible" href="qabstractseries.html#visible-prop" status="active" access="public" location="qabstractseries.h" documented="true" brief="Whether the series is visible or not">
                <getter name="isVisible"/>
                <setter name="setVisible"/>
                <notifier name="visibleChanged"/>
            </property>
        </class>
        <class name="QAreaLegendMarker" href="qarealegendmarker.html" status="active" access="public" location="qarealegendmarker.h" documented="true" bases="QLegendMarker" module="QtCharts" brief="Legend marker for an area series">
            <function name="series" fullname="QAreaLegendMarker::series" href="qarealegendmarker.html#series" status="active" access="public" location="qarealegendmarker.h" documented="true" meta="plain" virtual="virtual" override="true" type="QAreaSeries *" signature="QAreaSeries * series() override"/>
            <function name="type" fullname="QAreaLegendMarker::type" href="qarealegendmarker.html#type" status="active" access="public" location="qarealegendmarker.h" documented="true" meta="plain" virtual="virtual" override="true" type="QLegendMarker::LegendMarkerType" signature="QLegendMarker::LegendMarkerType type() override"/>
            <function name="~QAreaLegendMarker" fullname="QAreaLegendMarker::~QAreaLegendMarker" href="qarealegendmarker.html#dtor.QAreaLegendMarker" status="active" access="public" location="qarealegendmarker.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QAreaLegendMarker()"/>
        </class>
        <class name="QAreaSeries" href="qareaseries.html" status="active" access="public" location="qareaseries.h" documented="true" bases="QAbstractSeries" module="QtCharts" brief="Presents data in area charts">
            <function name="QAreaSeries" fullname="QAreaSeries::QAreaSeries" href="qareaseries.html#QAreaSeries" status="active" access="public" location="qareaseries.h" documented="true" meta="constructor" explicit="true" signature="QAreaSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="QAreaSeries" fullname="QAreaSeries::QAreaSeries" href="qareaseries.html#QAreaSeries-1" status="active" access="public" location="qareaseries.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QAreaSeries(QLineSeries *upperSeries, QLineSeries *lowerSeries)">
                <parameter type="QLineSeries *" name="upperSeries" default=""/>
                <parameter type="QLineSeries *" name="lowerSeries" default="nullptr"/>
            </function>
            <function name="borderColor" fullname="QAreaSeries::borderColor" href="qareaseries.html#borderColor-prop" status="active" access="public" location="qareaseries.h" meta="plain" const="true" associated-property="borderColor" type="QColor" signature="QColor borderColor() const"/>
            <function name="borderColorChanged" fullname="QAreaSeries::borderColorChanged" href="qareaseries.html#borderColorChanged" status="active" access="public" location="qareaseries.h" documented="true" meta="signal" associated-property="borderColor" type="void" brief="This signal is emitted when the line (pen) color changes to color" signature="void borderColorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="brush" fullname="QAreaSeries::brush" href="qareaseries.html#brush" status="active" access="public" location="qareaseries.h" documented="true" meta="plain" const="true" type="QBrush" brief="Returns the brush used to draw the line for this series" signature="QBrush brush() const"/>
            <function name="clicked" fullname="QAreaSeries::clicked" href="qareaseries.html#clicked" status="active" access="public" location="qareaseries.h" documented="true" meta="signal" type="void" brief="This signal is emitted when the user triggers a press on point by clicking it in an area chart" signature="void clicked(const QPointF &amp;point)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="color" fullname="QAreaSeries::color" href="qareaseries.html#color-prop" status="active" access="public" location="qareaseries.h" meta="plain" const="true" associated-property="color" type="QColor" signature="QColor color() const"/>
            <function name="colorChanged" fullname="QAreaSeries::colorChanged" href="qareaseries.html#colorChanged" status="active" access="public" location="qareaseries.h" documented="true" meta="signal" associated-property="color" type="void" brief="This signal is emitted when the fill (brush) color changes to color" signature="void colorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="doubleClicked" fullname="QAreaSeries::doubleClicked" href="qareaseries.html#doubleClicked" status="active" access="public" location="qareaseries.h" documented="true" meta="signal" type="void" brief="This signal is emitted when the user triggers the first press in an area chart by doubleclicking point" signature="void doubleClicked(const QPointF &amp;point)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="hovered" fullname="QAreaSeries::hovered" href="qareaseries.html#hovered" status="active" access="public" location="qareaseries.h" documented="true" meta="signal" type="void" signature="void hovered(const QPointF &amp;point, bool state)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
                <parameter type="bool" name="state" default=""/>
            </function>
            <function name="lowerSeries" fullname="QAreaSeries::lowerSeries" href="qareaseries.html#lowerSeries-prop" status="active" access="public" location="qareaseries.h" meta="plain" const="true" associated-property="lowerSeries" type="QLineSeries *" signature="QLineSeries * lowerSeries() const"/>
            <function name="pen" fullname="QAreaSeries::pen" href="qareaseries.html#pen" status="active" access="public" location="qareaseries.h" documented="true" meta="plain" const="true" type="QPen" brief="Returns the pen used to draw the line for this series" signature="QPen pen() const"/>
            <function name="pointLabelsClipping" fullname="QAreaSeries::pointLabelsClipping" href="qareaseries.html#pointLabelsClipping-prop" status="active" access="public" location="qareaseries.h" meta="plain" const="true" associated-property="pointLabelsClipping" type="bool" signature="bool pointLabelsClipping() const"/>
            <function name="pointLabelsClippingChanged" fullname="QAreaSeries::pointLabelsClippingChanged" href="qareaseries.html#pointLabelsClippingChanged" status="active" access="public" location="qareaseries.h" documented="true" meta="signal" associated-property="pointLabelsClipping" type="void" signature="void pointLabelsClippingChanged(bool clipping)">
                <parameter type="bool" name="clipping" default=""/>
            </function>
            <function name="pointLabelsColor" fullname="QAreaSeries::pointLabelsColor" href="qareaseries.html#pointLabelsColor-prop" status="active" access="public" location="qareaseries.h" meta="plain" const="true" associated-property="pointLabelsColor" type="QColor" signature="QColor pointLabelsColor() const"/>
            <function name="pointLabelsColorChanged" fullname="QAreaSeries::pointLabelsColorChanged" href="qareaseries.html#pointLabelsColorChanged" status="active" access="public" location="qareaseries.h" documented="true" meta="signal" associated-property="pointLabelsColor" type="void" signature="void pointLabelsColorChanged(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="pointLabelsFont" fullname="QAreaSeries::pointLabelsFont" href="qareaseries.html#pointLabelsFont-prop" status="active" access="public" location="qareaseries.h" meta="plain" const="true" associated-property="pointLabelsFont" type="QFont" signature="QFont pointLabelsFont() const"/>
            <function name="pointLabelsFontChanged" fullname="QAreaSeries::pointLabelsFontChanged" href="qareaseries.html#pointLabelsFontChanged" status="active" access="public" location="qareaseries.h" documented="true" meta="signal" associated-property="pointLabelsFont" type="void" signature="void pointLabelsFontChanged(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="pointLabelsFormat" fullname="QAreaSeries::pointLabelsFormat" href="qareaseries.html#pointLabelsFormat-prop" status="active" access="public" location="qareaseries.h" meta="plain" const="true" associated-property="pointLabelsFormat" type="QString" signature="QString pointLabelsFormat() const"/>
            <function name="pointLabelsFormatChanged" fullname="QAreaSeries::pointLabelsFormatChanged" href="qareaseries.html#pointLabelsFormatChanged" status="active" access="public" location="qareaseries.h" documented="true" meta="signal" associated-property="pointLabelsFormat" type="void" signature="void pointLabelsFormatChanged(const QString &amp;format)">
                <parameter type="const QString &amp;" name="format" default=""/>
            </function>
            <function name="pointLabelsVisibilityChanged" fullname="QAreaSeries::pointLabelsVisibilityChanged" href="qareaseries.html#pointLabelsVisibilityChanged" status="active" access="public" location="qareaseries.h" documented="true" meta="signal" associated-property="pointLabelsVisible" type="void" signature="void pointLabelsVisibilityChanged(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="pointLabelsVisible" fullname="QAreaSeries::pointLabelsVisible" href="qareaseries.html#pointLabelsVisible-prop" status="active" access="public" location="qareaseries.h" meta="plain" const="true" associated-property="pointLabelsVisible" type="bool" signature="bool pointLabelsVisible() const"/>
            <function name="pointsVisible" fullname="QAreaSeries::pointsVisible" href="qareaseries.html#pointsVisible" status="active" access="public" location="qareaseries.h" documented="true" meta="plain" const="true" type="bool" signature="bool pointsVisible() const"/>
            <function name="pressed" fullname="QAreaSeries::pressed" href="qareaseries.html#pressed" status="active" access="public" location="qareaseries.h" documented="true" meta="signal" type="void" brief="This signal is emitted when the user presses the point specified by point in an area chart" signature="void pressed(const QPointF &amp;point)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="released" fullname="QAreaSeries::released" href="qareaseries.html#released" status="active" access="public" location="qareaseries.h" documented="true" meta="signal" type="void" brief="This signal is emitted when the user releases a press that was triggered on point in an area chart" signature="void released(const QPointF &amp;point)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="setBorderColor" fullname="QAreaSeries::setBorderColor" href="qareaseries.html#borderColor-prop" status="active" access="public" location="qareaseries.h" meta="plain" associated-property="borderColor" type="void" signature="void setBorderColor(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="setBrush" fullname="QAreaSeries::setBrush" href="qareaseries.html#setBrush" status="active" access="public" location="qareaseries.h" documented="true" meta="plain" type="void" signature="void setBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setColor" fullname="QAreaSeries::setColor" href="qareaseries.html#color-prop" status="active" access="public" location="qareaseries.h" meta="plain" associated-property="color" type="void" signature="void setColor(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="setLowerSeries" fullname="QAreaSeries::setLowerSeries" href="qareaseries.html#setLowerSeries" status="active" access="public" location="qareaseries.h" documented="true" meta="plain" type="void" signature="void setLowerSeries(QLineSeries *series)">
                <parameter type="QLineSeries *" name="series" default=""/>
            </function>
            <function name="setPen" fullname="QAreaSeries::setPen" href="qareaseries.html#setPen" status="active" access="public" location="qareaseries.h" documented="true" meta="plain" type="void" signature="void setPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setPointLabelsClipping" fullname="QAreaSeries::setPointLabelsClipping" href="qareaseries.html#pointLabelsClipping-prop" status="active" access="public" location="qareaseries.h" meta="plain" associated-property="pointLabelsClipping" type="void" signature="void setPointLabelsClipping(bool enabled)">
                <parameter type="bool" name="enabled" default="true"/>
            </function>
            <function name="setPointLabelsColor" fullname="QAreaSeries::setPointLabelsColor" href="qareaseries.html#pointLabelsColor-prop" status="active" access="public" location="qareaseries.h" meta="plain" associated-property="pointLabelsColor" type="void" signature="void setPointLabelsColor(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="setPointLabelsFont" fullname="QAreaSeries::setPointLabelsFont" href="qareaseries.html#pointLabelsFont-prop" status="active" access="public" location="qareaseries.h" meta="plain" associated-property="pointLabelsFont" type="void" signature="void setPointLabelsFont(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="setPointLabelsFormat" fullname="QAreaSeries::setPointLabelsFormat" href="qareaseries.html#pointLabelsFormat-prop" status="active" access="public" location="qareaseries.h" meta="plain" associated-property="pointLabelsFormat" type="void" signature="void setPointLabelsFormat(const QString &amp;format)">
                <parameter type="const QString &amp;" name="format" default=""/>
            </function>
            <function name="setPointLabelsVisible" fullname="QAreaSeries::setPointLabelsVisible" href="qareaseries.html#pointLabelsVisible-prop" status="active" access="public" location="qareaseries.h" meta="plain" associated-property="pointLabelsVisible" type="void" signature="void setPointLabelsVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setPointsVisible" fullname="QAreaSeries::setPointsVisible" href="qareaseries.html#setPointsVisible" status="active" access="public" location="qareaseries.h" documented="true" meta="plain" type="void" signature="void setPointsVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setUpperSeries" fullname="QAreaSeries::setUpperSeries" href="qareaseries.html#setUpperSeries" status="active" access="public" location="qareaseries.h" documented="true" meta="plain" type="void" signature="void setUpperSeries(QLineSeries *series)">
                <parameter type="QLineSeries *" name="series" default=""/>
            </function>
            <function name="type" fullname="QAreaSeries::type" href="qareaseries.html#type" status="active" access="public" location="qareaseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="upperSeries" fullname="QAreaSeries::upperSeries" href="qareaseries.html#upperSeries-prop" status="active" access="public" location="qareaseries.h" meta="plain" const="true" associated-property="upperSeries" type="QLineSeries *" signature="QLineSeries * upperSeries() const"/>
            <function name="~QAreaSeries" fullname="QAreaSeries::~QAreaSeries" href="qareaseries.html#dtor.QAreaSeries" status="active" access="public" location="qareaseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QAreaSeries()"/>
            <property name="borderColor" fullname="QAreaSeries::borderColor" href="qareaseries.html#borderColor-prop" status="active" access="public" location="qareaseries.h" documented="true" brief="Line (pen) color of the series. This is a convenience property for modifying the color of the pen">
                <getter name="borderColor"/>
                <setter name="setBorderColor"/>
                <notifier name="borderColorChanged"/>
            </property>
            <property name="color" fullname="QAreaSeries::color" href="qareaseries.html#color-prop" status="active" access="public" location="qareaseries.h" documented="true" brief="Fill (brush) color of the series. This is a convenience property for modifying the color of the brush">
                <getter name="color"/>
                <setter name="setColor"/>
                <notifier name="colorChanged"/>
            </property>
            <property name="lowerSeries" fullname="QAreaSeries::lowerSeries" href="qareaseries.html#lowerSeries-prop" status="active" access="public" location="qareaseries.h" documented="true" writable="false" brief="Lower one of the two line series used to define area series boundaries">
                <getter name="lowerSeries"/>
            </property>
            <property name="pointLabelsClipping" fullname="QAreaSeries::pointLabelsClipping" href="qareaseries.html#pointLabelsClipping-prop" status="active" access="public" location="qareaseries.h" documented="true" brief="Clipping for data point labels. True by default. The labels on the edge of the plot area are cut when clipping is enabled">
                <getter name="pointLabelsClipping"/>
                <setter name="setPointLabelsClipping"/>
                <notifier name="pointLabelsClippingChanged"/>
            </property>
            <property name="pointLabelsColor" fullname="QAreaSeries::pointLabelsColor" href="qareaseries.html#pointLabelsColor-prop" status="active" access="public" location="qareaseries.h" documented="true" brief="Color used for data point labels. By default, the color is the color of the brush defined for labels in the theme">
                <getter name="pointLabelsColor"/>
                <setter name="setPointLabelsColor"/>
                <notifier name="pointLabelsColorChanged"/>
            </property>
            <property name="pointLabelsFont" fullname="QAreaSeries::pointLabelsFont" href="qareaseries.html#pointLabelsFont-prop" status="active" access="public" location="qareaseries.h" documented="true" brief="Font used for data point labels">
                <getter name="pointLabelsFont"/>
                <setter name="setPointLabelsFont"/>
                <notifier name="pointLabelsFontChanged"/>
            </property>
            <property name="pointLabelsFormat" fullname="QAreaSeries::pointLabelsFormat" href="qareaseries.html#pointLabelsFormat-prop" status="active" access="public" location="qareaseries.h" documented="true" brief="Format used for showing labels with series points">
                <getter name="pointLabelsFormat"/>
                <setter name="setPointLabelsFormat"/>
                <notifier name="pointLabelsFormatChanged"/>
            </property>
            <property name="pointLabelsVisible" fullname="QAreaSeries::pointLabelsVisible" href="qareaseries.html#pointLabelsVisible-prop" status="active" access="public" location="qareaseries.h" documented="true" brief="Visibility of data point labels. False by default">
                <getter name="pointLabelsVisible"/>
                <setter name="setPointLabelsVisible"/>
                <notifier name="pointLabelsVisibilityChanged"/>
            </property>
            <property name="upperSeries" fullname="QAreaSeries::upperSeries" href="qareaseries.html#upperSeries-prop" status="active" access="public" location="qareaseries.h" documented="true" writable="false" brief="Upper one of the two line series used to define area series boundaries">
                <getter name="upperSeries"/>
            </property>
        </class>
        <class name="QBarCategoryAxis" href="qbarcategoryaxis.html" status="active" access="public" location="qbarcategoryaxis.h" documented="true" bases="QAbstractAxis" module="QtCharts" brief="Adds categories to a chart's axes">
            <function name="QBarCategoryAxis" fullname="QBarCategoryAxis::QBarCategoryAxis" href="qbarcategoryaxis.html#QBarCategoryAxis" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="constructor" explicit="true" signature="QBarCategoryAxis(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="append" fullname="QBarCategoryAxis::append" href="qbarcategoryaxis.html#append" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" type="void" signature="void append(const QStringList &amp;categories)">
                <parameter type="const QStringList &amp;" name="categories" default=""/>
            </function>
            <function name="append" fullname="QBarCategoryAxis::append" href="qbarcategoryaxis.html#append-1" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void append(const QString &amp;category)">
                <parameter type="const QString &amp;" name="category" default=""/>
            </function>
            <function name="at" fullname="QBarCategoryAxis::at" href="qbarcategoryaxis.html#at" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" const="true" type="QString" signature="QString at(int index) const">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="categories" fullname="QBarCategoryAxis::categories" href="qbarcategoryaxis.html#categories" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" associated-property="categories" type="QStringList" signature="QStringList categories()"/>
            <function name="categoriesChanged" fullname="QBarCategoryAxis::categoriesChanged" href="qbarcategoryaxis.html#categoriesChanged" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="signal" associated-property="categories" type="void" signature="void categoriesChanged()"/>
            <function name="clear" fullname="QBarCategoryAxis::clear" href="qbarcategoryaxis.html#clear" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" type="void" signature="void clear()"/>
            <function name="count" fullname="QBarCategoryAxis::count" href="qbarcategoryaxis.html#count" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" const="true" associated-property="count" type="int" signature="int count() const"/>
            <function name="countChanged" fullname="QBarCategoryAxis::countChanged" href="qbarcategoryaxis.html#countChanged" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="signal" associated-property="count" type="void" signature="void countChanged()"/>
            <function name="insert" fullname="QBarCategoryAxis::insert" href="qbarcategoryaxis.html#insert" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" type="void" signature="void insert(int index, const QString &amp;category)">
                <parameter type="int" name="index" default=""/>
                <parameter type="const QString &amp;" name="category" default=""/>
            </function>
            <function name="max" fullname="QBarCategoryAxis::max" href="qbarcategoryaxis.html#max" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" const="true" associated-property="max" type="QString" signature="QString max() const"/>
            <function name="maxChanged" fullname="QBarCategoryAxis::maxChanged" href="qbarcategoryaxis.html#maxChanged" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="signal" associated-property="max" type="void" signature="void maxChanged(const QString &amp;max)">
                <parameter type="const QString &amp;" name="max" default=""/>
            </function>
            <function name="min" fullname="QBarCategoryAxis::min" href="qbarcategoryaxis.html#min" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" const="true" associated-property="min" type="QString" signature="QString min() const"/>
            <function name="minChanged" fullname="QBarCategoryAxis::minChanged" href="qbarcategoryaxis.html#minChanged" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="signal" associated-property="min" type="void" signature="void minChanged(const QString &amp;min)">
                <parameter type="const QString &amp;" name="min" default=""/>
            </function>
            <function name="rangeChanged" fullname="QBarCategoryAxis::rangeChanged" href="qbarcategoryaxis.html#rangeChanged" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="signal" type="void" signature="void rangeChanged(const QString &amp;min, const QString &amp;max)">
                <parameter type="const QString &amp;" name="min" default=""/>
                <parameter type="const QString &amp;" name="max" default=""/>
            </function>
            <function name="remove" fullname="QBarCategoryAxis::remove" href="qbarcategoryaxis.html#remove" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" type="void" signature="void remove(const QString &amp;category)">
                <parameter type="const QString &amp;" name="category" default=""/>
            </function>
            <function name="replace" fullname="QBarCategoryAxis::replace" href="qbarcategoryaxis.html#replace" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" type="void" signature="void replace(const QString &amp;oldCategory, const QString &amp;newCategory)">
                <parameter type="const QString &amp;" name="oldCategory" default=""/>
                <parameter type="const QString &amp;" name="newCategory" default=""/>
            </function>
            <function name="setCategories" fullname="QBarCategoryAxis::setCategories" href="qbarcategoryaxis.html#setCategories" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" associated-property="categories" type="void" signature="void setCategories(const QStringList &amp;categories)">
                <parameter type="const QStringList &amp;" name="categories" default=""/>
            </function>
            <function name="setMax" fullname="QBarCategoryAxis::setMax" href="qbarcategoryaxis.html#setMax" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" associated-property="max" type="void" signature="void setMax(const QString &amp;max)">
                <parameter type="const QString &amp;" name="max" default=""/>
            </function>
            <function name="setMin" fullname="QBarCategoryAxis::setMin" href="qbarcategoryaxis.html#setMin" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" associated-property="min" type="void" signature="void setMin(const QString &amp;min)">
                <parameter type="const QString &amp;" name="min" default=""/>
            </function>
            <function name="setRange" fullname="QBarCategoryAxis::setRange" href="qbarcategoryaxis.html#setRange" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" type="void" signature="void setRange(const QString &amp;minCategory, const QString &amp;maxCategory)">
                <parameter type="const QString &amp;" name="minCategory" default=""/>
                <parameter type="const QString &amp;" name="maxCategory" default=""/>
            </function>
            <function name="type" fullname="QBarCategoryAxis::type" href="qbarcategoryaxis.html#type" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractAxis::AxisType" signature="QAbstractAxis::AxisType type() const override"/>
            <function name="~QBarCategoryAxis" fullname="QBarCategoryAxis::~QBarCategoryAxis" href="qbarcategoryaxis.html#dtor.QBarCategoryAxis" status="active" access="public" location="qbarcategoryaxis.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QBarCategoryAxis()"/>
            <property name="categories" fullname="QBarCategoryAxis::categories" href="qbarcategoryaxis.html#categories-prop" status="active" access="public" location="qbarcategoryaxis.h" documented="true" brief="Of an axis">
                <getter name="categories"/>
                <setter name="setCategories"/>
                <notifier name="categoriesChanged"/>
            </property>
            <property name="count" fullname="QBarCategoryAxis::count" href="qbarcategoryaxis.html#count-prop" status="active" access="public" location="qbarcategoryaxis.h" documented="true" writable="false" brief="Number of categories of an axis">
                <getter name="count"/>
                <notifier name="countChanged"/>
            </property>
            <property name="max" fullname="QBarCategoryAxis::max" href="qbarcategoryaxis.html#max-prop" status="active" access="public" location="qbarcategoryaxis.h" documented="true" brief="Maximum value on the axis">
                <getter name="max"/>
                <setter name="setMax"/>
                <notifier name="maxChanged"/>
            </property>
            <property name="min" fullname="QBarCategoryAxis::min" href="qbarcategoryaxis.html#min-prop" status="active" access="public" location="qbarcategoryaxis.h" documented="true" brief="Minimum value on the axis">
                <getter name="min"/>
                <setter name="setMin"/>
                <notifier name="minChanged"/>
            </property>
        </class>
        <class name="QBarLegendMarker" href="qbarlegendmarker.html" status="active" access="public" location="qbarlegendmarker.h" documented="true" bases="QLegendMarker" module="QtCharts" brief="Legend marker for a bar series">
            <function name="barset" fullname="QBarLegendMarker::barset" href="qbarlegendmarker.html#barset" status="active" access="public" location="qbarlegendmarker.h" documented="true" meta="plain" type="QBarSet *" signature="QBarSet * barset()"/>
            <function name="series" fullname="QBarLegendMarker::series" href="qbarlegendmarker.html#series" status="active" access="public" location="qbarlegendmarker.h" documented="true" meta="plain" virtual="virtual" override="true" type="QAbstractBarSeries *" signature="QAbstractBarSeries * series() override"/>
            <function name="type" fullname="QBarLegendMarker::type" href="qbarlegendmarker.html#type" status="active" access="public" location="qbarlegendmarker.h" documented="true" meta="plain" virtual="virtual" override="true" type="QLegendMarker::LegendMarkerType" signature="QLegendMarker::LegendMarkerType type() override"/>
            <function name="~QBarLegendMarker" fullname="QBarLegendMarker::~QBarLegendMarker" href="qbarlegendmarker.html#dtor.QBarLegendMarker" status="active" access="public" location="qbarlegendmarker.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QBarLegendMarker()"/>
        </class>
        <class name="QBarSeries" href="qbarseries.html" status="active" access="public" location="qbarseries.h" documented="true" bases="QAbstractBarSeries" module="QtCharts" brief="Presents a series of data as vertical bars grouped by category">
            <function name="QBarSeries" fullname="QBarSeries::QBarSeries" href="qbarseries.html#QBarSeries" status="active" access="public" location="qbarseries.h" documented="true" meta="constructor" explicit="true" signature="QBarSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="type" fullname="QBarSeries::type" href="qbarseries.html#type" status="active" access="public" location="qbarseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="~QBarSeries" fullname="QBarSeries::~QBarSeries" href="qbarseries.html#dtor.QBarSeries" status="active" access="public" location="qbarseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QBarSeries()"/>
        </class>
        <class name="QBarSet" href="qbarset.html" status="active" access="public" location="qbarset.h" documented="true" bases="QObject" module="QtCharts" brief="Represents one set of bars in a bar chart">
            <function name="QBarSet" fullname="QBarSet::QBarSet" href="qbarset.html#QBarSet" status="active" access="public" location="qbarset.h" documented="true" meta="constructor" explicit="true" signature="QBarSet(const QString label, QObject *parent)">
                <parameter type="const QString" name="label" default=""/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="append" fullname="QBarSet::append" href="qbarset.html#append" status="active" access="public" location="qbarset.h" documented="true" meta="plain" type="void" signature="void append(const qreal value)">
                <parameter type="const qreal" name="value" default=""/>
            </function>
            <function name="append" fullname="QBarSet::append" href="qbarset.html#append-1" status="active" access="public" location="qbarset.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void append(const QList&lt;qreal&gt; &amp;values)">
                <parameter type="const QList&lt;qreal&gt; &amp;" name="values" default=""/>
            </function>
            <function name="at" fullname="QBarSet::at" href="qbarset.html#at" status="active" access="public" location="qbarset.h" documented="true" meta="plain" const="true" type="qreal" signature="qreal at(const int index) const">
                <parameter type="const int" name="index" default=""/>
            </function>
            <function name="borderColor" fullname="QBarSet::borderColor" href="qbarset.html#borderColor" status="active" access="public" location="qbarset.h" documented="true" meta="plain" associated-property="borderColor" type="QColor" signature="QColor borderColor()"/>
            <function name="borderColorChanged" fullname="QBarSet::borderColorChanged" href="qbarset.html#borderColorChanged" status="active" access="public" location="qbarset.h" documented="true" meta="signal" associated-property="borderColor" type="void" signature="void borderColorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="brush" fullname="QBarSet::brush" href="qbarset.html#brush" status="active" access="public" location="qbarset.h" documented="true" meta="plain" const="true" associated-property="brush" type="QBrush" signature="QBrush brush() const"/>
            <function name="brushChanged" fullname="QBarSet::brushChanged" href="qbarset.html#brushChanged" status="active" access="public" location="qbarset.h" documented="true" meta="signal" associated-property="brush" type="void" signature="void brushChanged()"/>
            <function name="clicked" fullname="QBarSet::clicked" href="qbarset.html#clicked" status="active" access="public" location="qbarset.h" documented="true" meta="signal" type="void" signature="void clicked(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="color" fullname="QBarSet::color" href="qbarset.html#color" status="active" access="public" location="qbarset.h" documented="true" meta="plain" associated-property="color" type="QColor" signature="QColor color()"/>
            <function name="colorChanged" fullname="QBarSet::colorChanged" href="qbarset.html#colorChanged" status="active" access="public" location="qbarset.h" documented="true" meta="signal" associated-property="color" type="void" signature="void colorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="count" fullname="QBarSet::count" href="qbarset.html#count" status="active" access="public" location="qbarset.h" documented="true" meta="plain" const="true" type="int" signature="int count() const"/>
            <function name="deselectAllBars" fullname="QBarSet::deselectAllBars" href="qbarset.html#deselectAllBars" status="active" access="public" location="qbarset.h" documented="true" since="6.2" meta="plain" type="void" signature="void deselectAllBars()"/>
            <function name="deselectBar" fullname="QBarSet::deselectBar" href="qbarset.html#deselectBar" status="active" access="public" location="qbarset.h" documented="true" since="6.2" meta="plain" type="void" signature="void deselectBar(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="deselectBars" fullname="QBarSet::deselectBars" href="qbarset.html#deselectBars" status="active" access="public" location="qbarset.h" documented="true" since="6.2" meta="plain" type="void" signature="void deselectBars(const QList&lt;int&gt; &amp;indexes)">
                <parameter type="const QList&lt;int&gt; &amp;" name="indexes" default=""/>
            </function>
            <function name="doubleClicked" fullname="QBarSet::doubleClicked" href="qbarset.html#doubleClicked" status="active" access="public" location="qbarset.h" documented="true" meta="signal" type="void" signature="void doubleClicked(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="hovered" fullname="QBarSet::hovered" href="qbarset.html#hovered" status="active" access="public" location="qbarset.h" documented="true" meta="signal" type="void" signature="void hovered(bool status, int index)">
                <parameter type="bool" name="status" default=""/>
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="insert" fullname="QBarSet::insert" href="qbarset.html#insert" status="active" access="public" location="qbarset.h" documented="true" meta="plain" type="void" signature="void insert(const int index, const qreal value)">
                <parameter type="const int" name="index" default=""/>
                <parameter type="const qreal" name="value" default=""/>
            </function>
            <function name="isBarSelected" fullname="QBarSet::isBarSelected" href="qbarset.html#isBarSelected" status="active" access="public" location="qbarset.h" documented="true" since="6.2" meta="plain" const="true" type="bool" signature="bool isBarSelected(int index) const">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="label" fullname="QBarSet::label" href="qbarset.html#label" status="active" access="public" location="qbarset.h" documented="true" meta="plain" const="true" associated-property="label" type="QString" signature="QString label() const"/>
            <function name="labelBrush" fullname="QBarSet::labelBrush" href="qbarset.html#labelBrush" status="active" access="public" location="qbarset.h" documented="true" meta="plain" const="true" associated-property="labelBrush" type="QBrush" signature="QBrush labelBrush() const"/>
            <function name="labelBrushChanged" fullname="QBarSet::labelBrushChanged" href="qbarset.html#labelBrushChanged" status="active" access="public" location="qbarset.h" documented="true" meta="signal" associated-property="labelBrush" type="void" signature="void labelBrushChanged()"/>
            <function name="labelChanged" fullname="QBarSet::labelChanged" href="qbarset.html#labelChanged" status="active" access="public" location="qbarset.h" documented="true" meta="signal" associated-property="label" type="void" signature="void labelChanged()"/>
            <function name="labelColor" fullname="QBarSet::labelColor" href="qbarset.html#labelColor" status="active" access="public" location="qbarset.h" documented="true" meta="plain" associated-property="labelColor" type="QColor" signature="QColor labelColor()"/>
            <function name="labelColorChanged" fullname="QBarSet::labelColorChanged" href="qbarset.html#labelColorChanged" status="active" access="public" location="qbarset.h" documented="true" meta="signal" associated-property="labelColor" type="void" signature="void labelColorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="labelFont" fullname="QBarSet::labelFont" href="qbarset.html#labelFont" status="active" access="public" location="qbarset.h" documented="true" meta="plain" const="true" associated-property="labelFont" type="QFont" signature="QFont labelFont() const"/>
            <function name="labelFontChanged" fullname="QBarSet::labelFontChanged" href="qbarset.html#labelFontChanged" status="active" access="public" location="qbarset.h" documented="true" meta="signal" associated-property="labelFont" type="void" signature="void labelFontChanged()"/>
            <function name="operator&lt;&lt;" fullname="QBarSet::operator&lt;&lt;" href="qbarset.html#operator-lt-lt" status="active" access="public" location="qbarset.h" documented="true" meta="plain" type="QBarSet &amp;" signature="QBarSet &amp; operator&lt;&lt;(const qreal &amp;value)">
                <parameter type="const qreal &amp;" name="value" default=""/>
            </function>
            <function name="operator[]" fullname="QBarSet::operator[]" href="qbarset.html#operator-5b-5d" status="active" access="public" location="qbarset.h" documented="true" meta="plain" const="true" type="qreal" signature="qreal operator[](const int index) const">
                <parameter type="const int" name="index" default=""/>
            </function>
            <function name="pen" fullname="QBarSet::pen" href="qbarset.html#pen" status="active" access="public" location="qbarset.h" documented="true" meta="plain" const="true" associated-property="pen" type="QPen" signature="QPen pen() const"/>
            <function name="penChanged" fullname="QBarSet::penChanged" href="qbarset.html#penChanged" status="active" access="public" location="qbarset.h" documented="true" meta="signal" associated-property="pen" type="void" signature="void penChanged()"/>
            <function name="pressed" fullname="QBarSet::pressed" href="qbarset.html#pressed" status="active" access="public" location="qbarset.h" documented="true" meta="signal" type="void" signature="void pressed(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="released" fullname="QBarSet::released" href="qbarset.html#released" status="active" access="public" location="qbarset.h" documented="true" meta="signal" type="void" signature="void released(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="remove" fullname="QBarSet::remove" href="qbarset.html#remove" status="active" access="public" location="qbarset.h" documented="true" meta="plain" type="void" signature="void remove(const int index, const int count)">
                <parameter type="const int" name="index" default=""/>
                <parameter type="const int" name="count" default="1"/>
            </function>
            <function name="replace" fullname="QBarSet::replace" href="qbarset.html#replace" status="active" access="public" location="qbarset.h" documented="true" meta="plain" type="void" signature="void replace(const int index, const qreal value)">
                <parameter type="const int" name="index" default=""/>
                <parameter type="const qreal" name="value" default=""/>
            </function>
            <function name="selectAllBars" fullname="QBarSet::selectAllBars" href="qbarset.html#selectAllBars" status="active" access="public" location="qbarset.h" documented="true" since="6.2" meta="plain" type="void" signature="void selectAllBars()"/>
            <function name="selectBar" fullname="QBarSet::selectBar" href="qbarset.html#selectBar" status="active" access="public" location="qbarset.h" documented="true" since="6.2" meta="plain" type="void" signature="void selectBar(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="selectBars" fullname="QBarSet::selectBars" href="qbarset.html#selectBars" status="active" access="public" location="qbarset.h" documented="true" since="6.2" meta="plain" type="void" signature="void selectBars(const QList&lt;int&gt; &amp;indexes)">
                <parameter type="const QList&lt;int&gt; &amp;" name="indexes" default=""/>
            </function>
            <function name="selectedBars" fullname="QBarSet::selectedBars" href="qbarset.html#selectedBars" status="active" access="public" location="qbarset.h" documented="true" since="6.2" meta="plain" const="true" type="QList&lt;int&gt;" signature="QList&lt;int&gt; selectedBars() const"/>
            <function name="selectedColor" fullname="QBarSet::selectedColor" href="qbarset.html#selectedColor" status="active" access="public" location="qbarset.h" documented="true" since="6.2" meta="plain" const="true" type="QColor" signature="QColor selectedColor() const"/>
            <function name="setBarSelected" fullname="QBarSet::setBarSelected" href="qbarset.html#setBarSelected" status="active" access="public" location="qbarset.h" documented="true" since="6.2" meta="plain" type="void" signature="void setBarSelected(int index, bool selected)">
                <parameter type="int" name="index" default=""/>
                <parameter type="bool" name="selected" default=""/>
            </function>
            <function name="setBorderColor" fullname="QBarSet::setBorderColor" href="qbarset.html#setBorderColor" status="active" access="public" location="qbarset.h" documented="true" meta="plain" associated-property="borderColor" type="void" signature="void setBorderColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setBrush" fullname="QBarSet::setBrush" href="qbarset.html#setBrush" status="active" access="public" location="qbarset.h" documented="true" meta="plain" associated-property="brush" type="void" signature="void setBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setColor" fullname="QBarSet::setColor" href="qbarset.html#setColor" status="active" access="public" location="qbarset.h" documented="true" meta="plain" associated-property="color" type="void" signature="void setColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setLabel" fullname="QBarSet::setLabel" href="qbarset.html#setLabel" status="active" access="public" location="qbarset.h" documented="true" meta="plain" associated-property="label" type="void" signature="void setLabel(const QString label)">
                <parameter type="const QString" name="label" default=""/>
            </function>
            <function name="setLabelBrush" fullname="QBarSet::setLabelBrush" href="qbarset.html#setLabelBrush" status="active" access="public" location="qbarset.h" documented="true" meta="plain" associated-property="labelBrush" type="void" signature="void setLabelBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setLabelColor" fullname="QBarSet::setLabelColor" href="qbarset.html#setLabelColor" status="active" access="public" location="qbarset.h" documented="true" meta="plain" associated-property="labelColor" type="void" signature="void setLabelColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setLabelFont" fullname="QBarSet::setLabelFont" href="qbarset.html#setLabelFont" status="active" access="public" location="qbarset.h" documented="true" meta="plain" associated-property="labelFont" type="void" signature="void setLabelFont(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="setPen" fullname="QBarSet::setPen" href="qbarset.html#setPen" status="active" access="public" location="qbarset.h" documented="true" meta="plain" associated-property="pen" type="void" signature="void setPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setSelectedColor" fullname="QBarSet::setSelectedColor" href="qbarset.html#setSelectedColor" status="active" access="public" location="qbarset.h" documented="true" since="6.2" meta="plain" type="void" signature="void setSelectedColor(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="sum" fullname="QBarSet::sum" href="qbarset.html#sum" status="active" access="public" location="qbarset.h" documented="true" meta="plain" const="true" type="qreal" signature="qreal sum() const"/>
            <function name="toggleSelection" fullname="QBarSet::toggleSelection" href="qbarset.html#toggleSelection" status="active" access="public" location="qbarset.h" documented="true" since="6.2" meta="plain" type="void" signature="void toggleSelection(const QList&lt;int&gt; &amp;indexes)">
                <parameter type="const QList&lt;int&gt; &amp;" name="indexes" default=""/>
            </function>
            <function name="valueChanged" fullname="QBarSet::valueChanged" href="qbarset.html#valueChanged" status="active" access="public" location="qbarset.h" documented="true" meta="signal" type="void" signature="void valueChanged(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="valuesAdded" fullname="QBarSet::valuesAdded" href="qbarset.html#valuesAdded" status="active" access="public" location="qbarset.h" documented="true" meta="signal" type="void" signature="void valuesAdded(int index, int count)">
                <parameter type="int" name="index" default=""/>
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="valuesRemoved" fullname="QBarSet::valuesRemoved" href="qbarset.html#valuesRemoved" status="active" access="public" location="qbarset.h" documented="true" meta="signal" type="void" signature="void valuesRemoved(int index, int count)">
                <parameter type="int" name="index" default=""/>
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="~QBarSet" fullname="QBarSet::~QBarSet" href="qbarset.html#dtor.QBarSet" status="active" access="public" location="qbarset.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QBarSet()"/>
            <property name="borderColor" fullname="QBarSet::borderColor" href="qbarset.html#borderColor-prop" status="active" access="public" location="qbarset.h" documented="true" brief="Line (pen) color of the bar set">
                <getter name="borderColor"/>
                <setter name="setBorderColor"/>
                <notifier name="borderColorChanged"/>
            </property>
            <property name="brush" fullname="QBarSet::brush" href="qbarset.html#brush-prop" status="active" access="public" location="qbarset.h" documented="true" brief="Used to fill the bars in the bar set">
                <getter name="brush"/>
                <setter name="setBrush"/>
                <notifier name="brushChanged"/>
            </property>
            <property name="color" fullname="QBarSet::color" href="qbarset.html#color-prop" status="active" access="public" location="qbarset.h" documented="true" brief="Fill (brush) color of the bar set">
                <getter name="color"/>
                <setter name="setColor"/>
                <notifier name="colorChanged"/>
            </property>
            <property name="label" fullname="QBarSet::label" href="qbarset.html#label-prop" status="active" access="public" location="qbarset.h" documented="true" brief="Of the bar set">
                <getter name="label"/>
                <setter name="setLabel"/>
                <notifier name="labelChanged"/>
            </property>
            <property name="labelBrush" fullname="QBarSet::labelBrush" href="qbarset.html#labelBrush-prop" status="active" access="public" location="qbarset.h" documented="true" brief="Brush used to draw the bar set's label">
                <getter name="labelBrush"/>
                <setter name="setLabelBrush"/>
                <notifier name="labelBrushChanged"/>
            </property>
            <property name="labelColor" fullname="QBarSet::labelColor" href="qbarset.html#labelColor-prop" status="active" access="public" location="qbarset.h" documented="true" brief="Text (label) color of the bar set">
                <getter name="labelColor"/>
                <setter name="setLabelColor"/>
                <notifier name="labelColorChanged"/>
            </property>
            <property name="labelFont" fullname="QBarSet::labelFont" href="qbarset.html#labelFont-prop" status="active" access="public" location="qbarset.h" documented="true" brief="Font used to draw the bar set's label">
                <getter name="labelFont"/>
                <setter name="setLabelFont"/>
                <notifier name="labelFontChanged"/>
            </property>
            <property name="pen" fullname="QBarSet::pen" href="qbarset.html#pen-prop" status="active" access="public" location="qbarset.h" documented="true" brief="Used to draw the lines of bars in the bar set">
                <getter name="pen"/>
                <setter name="setPen"/>
                <notifier name="penChanged"/>
            </property>
        </class>
        <class name="QBoxPlotLegendMarker" href="qboxplotlegendmarker.html" status="active" access="public" location="qboxplotlegendmarker.h" documented="true" bases="QLegendMarker" module="QtCharts" brief="Legend marker for a box plot series">
            <function name="series" fullname="QBoxPlotLegendMarker::series" href="qboxplotlegendmarker.html#series" status="active" access="public" location="qboxplotlegendmarker.h" documented="true" meta="plain" virtual="virtual" override="true" type="QBoxPlotSeries *" signature="QBoxPlotSeries * series() override"/>
            <function name="type" fullname="QBoxPlotLegendMarker::type" href="qboxplotlegendmarker.html#type" status="active" access="public" location="qboxplotlegendmarker.h" documented="true" meta="plain" virtual="virtual" override="true" type="QLegendMarker::LegendMarkerType" signature="QLegendMarker::LegendMarkerType type() override"/>
            <function name="~QBoxPlotLegendMarker" fullname="QBoxPlotLegendMarker::~QBoxPlotLegendMarker" href="qboxplotlegendmarker.html#dtor.QBoxPlotLegendMarker" status="active" access="public" location="qboxplotlegendmarker.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QBoxPlotLegendMarker()"/>
        </class>
        <class name="QBoxPlotSeries" href="qboxplotseries.html" status="active" access="public" location="qboxplotseries.h" documented="true" bases="QAbstractSeries" module="QtCharts" brief="Presents data in box-and-whiskers charts">
            <function name="QBoxPlotSeries" fullname="QBoxPlotSeries::QBoxPlotSeries" href="qboxplotseries.html#QBoxPlotSeries" status="active" access="public" location="qboxplotseries.h" documented="true" meta="constructor" explicit="true" signature="QBoxPlotSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="append" fullname="QBoxPlotSeries::append" href="qboxplotseries.html#append" status="active" access="public" location="qboxplotseries.h" documented="true" meta="plain" type="bool" signature="bool append(QBoxSet *set)">
                <parameter type="QBoxSet *" name="set" default=""/>
            </function>
            <function name="append" fullname="QBoxPlotSeries::append" href="qboxplotseries.html#append-1" status="active" access="public" location="qboxplotseries.h" documented="true" meta="plain" overload="true" overload-number="1" type="bool" signature="bool append(const QList&lt;QBoxSet *&gt; &amp;sets)">
                <parameter type="const QList&lt;QBoxSet *&gt; &amp;" name="sets" default=""/>
            </function>
            <function name="boxOutlineVisibilityChanged" fullname="QBoxPlotSeries::boxOutlineVisibilityChanged" href="qboxplotseries.html#boxOutlineVisibilityChanged" status="active" access="public" location="qboxplotseries.h" documented="true" meta="signal" associated-property="boxOutlineVisible" type="void" signature="void boxOutlineVisibilityChanged()"/>
            <function name="boxOutlineVisible" fullname="QBoxPlotSeries::boxOutlineVisible" href="qboxplotseries.html#boxOutlineVisible-prop" status="active" access="public" location="qboxplotseries.h" meta="plain" associated-property="boxOutlineVisible" type="bool" signature="bool boxOutlineVisible()"/>
            <function name="boxSets" fullname="QBoxPlotSeries::boxSets" href="qboxplotseries.html#boxSets" status="active" access="public" location="qboxplotseries.h" documented="true" meta="plain" const="true" type="QList&lt;QBoxSet *&gt;" signature="QList&lt;QBoxSet *&gt; boxSets() const"/>
            <function name="boxWidth" fullname="QBoxPlotSeries::boxWidth" href="qboxplotseries.html#boxWidth-prop" status="active" access="public" location="qboxplotseries.h" meta="plain" associated-property="boxWidth" type="qreal" signature="qreal boxWidth()"/>
            <function name="boxWidthChanged" fullname="QBoxPlotSeries::boxWidthChanged" href="qboxplotseries.html#boxWidthChanged" status="active" access="public" location="qboxplotseries.h" documented="true" meta="signal" associated-property="boxWidth" type="void" signature="void boxWidthChanged()"/>
            <function name="boxsetsAdded" fullname="QBoxPlotSeries::boxsetsAdded" href="qboxplotseries.html#boxsetsAdded" status="active" access="public" location="qboxplotseries.h" documented="true" meta="signal" type="void" signature="void boxsetsAdded(const QList&lt;QBoxSet *&gt; &amp;sets)">
                <parameter type="const QList&lt;QBoxSet *&gt; &amp;" name="sets" default=""/>
            </function>
            <function name="boxsetsRemoved" fullname="QBoxPlotSeries::boxsetsRemoved" href="qboxplotseries.html#boxsetsRemoved" status="active" access="public" location="qboxplotseries.h" documented="true" meta="signal" type="void" signature="void boxsetsRemoved(const QList&lt;QBoxSet *&gt; &amp;sets)">
                <parameter type="const QList&lt;QBoxSet *&gt; &amp;" name="sets" default=""/>
            </function>
            <function name="brush" fullname="QBoxPlotSeries::brush" href="qboxplotseries.html#brush-prop" status="active" access="public" location="qboxplotseries.h" meta="plain" const="true" associated-property="brush" type="QBrush" signature="QBrush brush() const"/>
            <function name="brushChanged" fullname="QBoxPlotSeries::brushChanged" href="qboxplotseries.html#brushChanged" status="active" access="public" location="qboxplotseries.h" documented="true" meta="signal" associated-property="brush" type="void" signature="void brushChanged()"/>
            <function name="clear" fullname="QBoxPlotSeries::clear" href="qboxplotseries.html#clear" status="active" access="public" location="qboxplotseries.h" documented="true" meta="plain" type="void" signature="void clear()"/>
            <function name="clicked" fullname="QBoxPlotSeries::clicked" href="qboxplotseries.html#clicked" status="active" access="public" location="qboxplotseries.h" documented="true" meta="signal" type="void" signature="void clicked(QBoxSet *boxset)">
                <parameter type="QBoxSet *" name="boxset" default=""/>
            </function>
            <function name="count" fullname="QBoxPlotSeries::count" href="qboxplotseries.html#count" status="active" access="public" location="qboxplotseries.h" documented="true" meta="plain" const="true" associated-property="count" type="int" signature="int count() const"/>
            <function name="countChanged" fullname="QBoxPlotSeries::countChanged" href="qboxplotseries.html#countChanged" status="active" access="public" location="qboxplotseries.h" documented="true" meta="signal" associated-property="count" type="void" signature="void countChanged()"/>
            <function name="doubleClicked" fullname="QBoxPlotSeries::doubleClicked" href="qboxplotseries.html#doubleClicked" status="active" access="public" location="qboxplotseries.h" documented="true" meta="signal" type="void" signature="void doubleClicked(QBoxSet *boxset)">
                <parameter type="QBoxSet *" name="boxset" default=""/>
            </function>
            <function name="hovered" fullname="QBoxPlotSeries::hovered" href="qboxplotseries.html#hovered" status="active" access="public" location="qboxplotseries.h" documented="true" meta="signal" type="void" signature="void hovered(bool status, QBoxSet *boxset)">
                <parameter type="bool" name="status" default=""/>
                <parameter type="QBoxSet *" name="boxset" default=""/>
            </function>
            <function name="insert" fullname="QBoxPlotSeries::insert" href="qboxplotseries.html#insert" status="active" access="public" location="qboxplotseries.h" documented="true" meta="plain" type="bool" signature="bool insert(int index, QBoxSet *set)">
                <parameter type="int" name="index" default=""/>
                <parameter type="QBoxSet *" name="set" default=""/>
            </function>
            <function name="pen" fullname="QBoxPlotSeries::pen" href="qboxplotseries.html#pen-prop" status="active" access="public" location="qboxplotseries.h" meta="plain" const="true" associated-property="pen" type="QPen" signature="QPen pen() const"/>
            <function name="penChanged" fullname="QBoxPlotSeries::penChanged" href="qboxplotseries.html#penChanged" status="active" access="public" location="qboxplotseries.h" documented="true" meta="signal" associated-property="pen" type="void" signature="void penChanged()"/>
            <function name="pressed" fullname="QBoxPlotSeries::pressed" href="qboxplotseries.html#pressed" status="active" access="public" location="qboxplotseries.h" documented="true" meta="signal" type="void" signature="void pressed(QBoxSet *boxset)">
                <parameter type="QBoxSet *" name="boxset" default=""/>
            </function>
            <function name="released" fullname="QBoxPlotSeries::released" href="qboxplotseries.html#released" status="active" access="public" location="qboxplotseries.h" documented="true" meta="signal" type="void" signature="void released(QBoxSet *boxset)">
                <parameter type="QBoxSet *" name="boxset" default=""/>
            </function>
            <function name="remove" fullname="QBoxPlotSeries::remove" href="qboxplotseries.html#remove" status="active" access="public" location="qboxplotseries.h" documented="true" meta="plain" type="bool" signature="bool remove(QBoxSet *set)">
                <parameter type="QBoxSet *" name="set" default=""/>
            </function>
            <function name="setBoxOutlineVisible" fullname="QBoxPlotSeries::setBoxOutlineVisible" href="qboxplotseries.html#boxOutlineVisible-prop" status="active" access="public" location="qboxplotseries.h" meta="plain" associated-property="boxOutlineVisible" type="void" signature="void setBoxOutlineVisible(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="setBoxWidth" fullname="QBoxPlotSeries::setBoxWidth" href="qboxplotseries.html#boxWidth-prop" status="active" access="public" location="qboxplotseries.h" meta="plain" associated-property="boxWidth" type="void" signature="void setBoxWidth(qreal width)">
                <parameter type="qreal" name="width" default=""/>
            </function>
            <function name="setBrush" fullname="QBoxPlotSeries::setBrush" href="qboxplotseries.html#brush-prop" status="active" access="public" location="qboxplotseries.h" meta="plain" associated-property="brush" type="void" signature="void setBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setPen" fullname="QBoxPlotSeries::setPen" href="qboxplotseries.html#pen-prop" status="active" access="public" location="qboxplotseries.h" meta="plain" associated-property="pen" type="void" signature="void setPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="take" fullname="QBoxPlotSeries::take" href="qboxplotseries.html#take" status="active" access="public" location="qboxplotseries.h" documented="true" meta="plain" type="bool" signature="bool take(QBoxSet *set)">
                <parameter type="QBoxSet *" name="set" default=""/>
            </function>
            <function name="type" fullname="QBoxPlotSeries::type" href="qboxplotseries.html#type" status="active" access="public" location="qboxplotseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="~QBoxPlotSeries" fullname="QBoxPlotSeries::~QBoxPlotSeries" href="qboxplotseries.html#dtor.QBoxPlotSeries" status="active" access="public" location="qboxplotseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QBoxPlotSeries()"/>
            <property name="boxOutlineVisible" fullname="QBoxPlotSeries::boxOutlineVisible" href="qboxplotseries.html#boxOutlineVisible-prop" status="active" access="public" location="qboxplotseries.h" documented="true" brief="Visibility of the box outline">
                <getter name="boxOutlineVisible"/>
                <setter name="setBoxOutlineVisible"/>
                <notifier name="boxOutlineVisibilityChanged"/>
            </property>
            <property name="boxWidth" fullname="QBoxPlotSeries::boxWidth" href="qboxplotseries.html#boxWidth-prop" status="active" access="public" location="qboxplotseries.h" documented="true" brief="Width of the box-and-whiskers item. The value indicates the relative width of the item within its category. The value can be between 0.0 and 1.0. Negative values are replaced with 0.0 and values greater than 1.0 are replaced with 1.0">
                <getter name="boxWidth"/>
                <setter name="setBoxWidth"/>
                <notifier name="boxWidthChanged"/>
            </property>
            <property name="brush" fullname="QBoxPlotSeries::brush" href="qboxplotseries.html#brush-prop" status="active" access="public" location="qboxplotseries.h" documented="true" brief="Used to fill the boxes of the box-and-whiskers items">
                <getter name="brush"/>
                <setter name="setBrush"/>
                <notifier name="brushChanged"/>
            </property>
            <property name="count" fullname="QBoxPlotSeries::count" href="qboxplotseries.html#count-prop" status="active" access="public" location="qboxplotseries.h" documented="true" writable="false" brief="Number of box-and-whiskers items in a box plot series">
                <getter name="count"/>
                <notifier name="countChanged"/>
            </property>
            <property name="pen" fullname="QBoxPlotSeries::pen" href="qboxplotseries.html#pen-prop" status="active" access="public" location="qboxplotseries.h" documented="true" brief="Used to draw the lines of the box-and-whiskers items">
                <getter name="pen"/>
                <setter name="setPen"/>
                <notifier name="penChanged"/>
            </property>
        </class>
        <class name="QBoxSet" href="qboxset.html" status="active" access="public" location="qboxset.h" documented="true" bases="QObject" module="QtCharts" brief="Represents one item in a box-and-whiskers chart">
            <function name="QBoxSet" fullname="QBoxSet::QBoxSet" href="qboxset.html#QBoxSet" status="active" access="public" location="qboxset.h" documented="true" meta="constructor" explicit="true" signature="QBoxSet(const QString label, QObject *parent)">
                <parameter type="const QString" name="label" default="QString()"/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="QBoxSet" fullname="QBoxSet::QBoxSet" href="qboxset.html#QBoxSet-1" status="active" access="public" location="qboxset.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QBoxSet(const qreal le, const qreal lq, const qreal m, const qreal uq, const qreal ue, const QString label, QObject *parent)">
                <parameter type="const qreal" name="le" default=""/>
                <parameter type="const qreal" name="lq" default=""/>
                <parameter type="const qreal" name="m" default=""/>
                <parameter type="const qreal" name="uq" default=""/>
                <parameter type="const qreal" name="ue" default=""/>
                <parameter type="const QString" name="label" default="QString()"/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="append" fullname="QBoxSet::append" href="qboxset.html#append" status="active" access="public" location="qboxset.h" documented="true" meta="plain" type="void" signature="void append(const qreal value)">
                <parameter type="const qreal" name="value" default=""/>
            </function>
            <function name="append" fullname="QBoxSet::append" href="qboxset.html#append-1" status="active" access="public" location="qboxset.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void append(const QList&lt;qreal&gt; &amp;values)">
                <parameter type="const QList&lt;qreal&gt; &amp;" name="values" default=""/>
            </function>
            <function name="at" fullname="QBoxSet::at" href="qboxset.html#at" status="active" access="public" location="qboxset.h" documented="true" meta="plain" const="true" type="qreal" signature="qreal at(const int index) const">
                <parameter type="const int" name="index" default=""/>
            </function>
            <function name="brush" fullname="QBoxSet::brush" href="qboxset.html#brush" status="active" access="public" location="qboxset.h" documented="true" meta="plain" const="true" associated-property="brush" type="QBrush" signature="QBrush brush() const"/>
            <function name="brushChanged" fullname="QBoxSet::brushChanged" href="qboxset.html#brushChanged" status="active" access="public" location="qboxset.h" documented="true" meta="signal" associated-property="brush" type="void" signature="void brushChanged()"/>
            <function name="clear" fullname="QBoxSet::clear" href="qboxset.html#clear" status="active" access="public" location="qboxset.h" documented="true" meta="plain" type="void" signature="void clear()"/>
            <function name="cleared" fullname="QBoxSet::cleared" href="qboxset.html#cleared" status="active" access="public" location="qboxset.h" documented="true" meta="signal" type="void" signature="void cleared()"/>
            <function name="clicked" fullname="QBoxSet::clicked" href="qboxset.html#clicked" status="active" access="public" location="qboxset.h" documented="true" meta="signal" type="void" signature="void clicked()"/>
            <function name="count" fullname="QBoxSet::count" href="qboxset.html#count" status="active" access="public" location="qboxset.h" documented="true" meta="plain" const="true" type="int" signature="int count() const"/>
            <function name="doubleClicked" fullname="QBoxSet::doubleClicked" href="qboxset.html#doubleClicked" status="active" access="public" location="qboxset.h" documented="true" meta="signal" type="void" signature="void doubleClicked()"/>
            <function name="hovered" fullname="QBoxSet::hovered" href="qboxset.html#hovered" status="active" access="public" location="qboxset.h" documented="true" meta="signal" type="void" signature="void hovered(bool status)">
                <parameter type="bool" name="status" default=""/>
            </function>
            <function name="label" fullname="QBoxSet::label" href="qboxset.html#label" status="active" access="public" location="qboxset.h" documented="true" meta="plain" const="true" type="QString" signature="QString label() const"/>
            <function name="operator&lt;&lt;" fullname="QBoxSet::operator&lt;&lt;" href="qboxset.html#operator-lt-lt" status="active" access="public" location="qboxset.h" documented="true" meta="plain" type="QBoxSet &amp;" signature="QBoxSet &amp; operator&lt;&lt;(const qreal &amp;value)">
                <parameter type="const qreal &amp;" name="value" default=""/>
            </function>
            <function name="operator[]" fullname="QBoxSet::operator[]" href="qboxset.html#operator-5b-5d" status="active" access="public" location="qboxset.h" documented="true" meta="plain" const="true" type="qreal" signature="qreal operator[](const int index) const">
                <parameter type="const int" name="index" default=""/>
            </function>
            <function name="pen" fullname="QBoxSet::pen" href="qboxset.html#pen" status="active" access="public" location="qboxset.h" documented="true" meta="plain" const="true" associated-property="pen" type="QPen" signature="QPen pen() const"/>
            <function name="penChanged" fullname="QBoxSet::penChanged" href="qboxset.html#penChanged" status="active" access="public" location="qboxset.h" documented="true" meta="signal" associated-property="pen" type="void" signature="void penChanged()"/>
            <function name="pressed" fullname="QBoxSet::pressed" href="qboxset.html#pressed" status="active" access="public" location="qboxset.h" documented="true" meta="signal" type="void" signature="void pressed()"/>
            <function name="released" fullname="QBoxSet::released" href="qboxset.html#released" status="active" access="public" location="qboxset.h" documented="true" meta="signal" type="void" signature="void released()"/>
            <function name="setBrush" fullname="QBoxSet::setBrush" href="qboxset.html#setBrush" status="active" access="public" location="qboxset.h" documented="true" meta="plain" associated-property="brush" type="void" signature="void setBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setLabel" fullname="QBoxSet::setLabel" href="qboxset.html#setLabel" status="active" access="public" location="qboxset.h" documented="true" meta="plain" type="void" signature="void setLabel(const QString label)">
                <parameter type="const QString" name="label" default=""/>
            </function>
            <function name="setPen" fullname="QBoxSet::setPen" href="qboxset.html#setPen" status="active" access="public" location="qboxset.h" documented="true" meta="plain" associated-property="pen" type="void" signature="void setPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setValue" fullname="QBoxSet::setValue" href="qboxset.html#setValue" status="active" access="public" location="qboxset.h" documented="true" meta="plain" type="void" signature="void setValue(const int index, const qreal value)">
                <parameter type="const int" name="index" default=""/>
                <parameter type="const qreal" name="value" default=""/>
            </function>
            <function name="valueChanged" fullname="QBoxSet::valueChanged" href="qboxset.html#valueChanged" status="active" access="public" location="qboxset.h" documented="true" meta="signal" type="void" signature="void valueChanged(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="valuesChanged" fullname="QBoxSet::valuesChanged" href="qboxset.html#valuesChanged" status="active" access="public" location="qboxset.h" documented="true" meta="signal" type="void" signature="void valuesChanged()"/>
            <function name="~QBoxSet" fullname="QBoxSet::~QBoxSet" href="qboxset.html#dtor.QBoxSet" status="active" access="public" location="qboxset.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QBoxSet()"/>
            <enum name="ValuePositions" fullname="QBoxSet::ValuePositions" href="qboxset.html#ValuePositions-enum" status="active" access="public" location="qboxset.h" documented="true">
                <value name="LowerExtreme" value="0"/>
                <value name="LowerQuartile" value="1"/>
                <value name="Median" value="2"/>
                <value name="UpperQuartile" value="3"/>
                <value name="UpperExtreme" value="4"/>
            </enum>
            <property name="brush" fullname="QBoxSet::brush" href="qboxset.html#brush-prop" status="active" access="public" location="qboxset.h" documented="true" brief="Used fill the box of the box-and-whiskers item">
                <getter name="brush"/>
                <setter name="setBrush"/>
                <notifier name="brushChanged"/>
            </property>
            <property name="pen" fullname="QBoxSet::pen" href="qboxset.html#pen-prop" status="active" access="public" location="qboxset.h" documented="true" brief="Used to draw the lines of the box-and-whiskers item">
                <getter name="pen"/>
                <setter name="setPen"/>
                <notifier name="penChanged"/>
            </property>
        </class>
        <class name="QCandlestickLegendMarker" href="qcandlesticklegendmarker.html" status="active" access="public" location="qcandlesticklegendmarker.h" documented="true" bases="QLegendMarker" module="QtCharts" brief="Legend marker for a candlestick series">
            <function name="series" fullname="QCandlestickLegendMarker::series" href="qcandlesticklegendmarker.html#series" status="active" access="public" location="qcandlesticklegendmarker.h" documented="true" meta="plain" virtual="virtual" override="true" type="QCandlestickSeries *" signature="QCandlestickSeries * series() override"/>
            <function name="type" fullname="QCandlestickLegendMarker::type" href="qcandlesticklegendmarker.html#type" status="active" access="public" location="qcandlesticklegendmarker.h" documented="true" meta="plain" virtual="virtual" override="true" type="QLegendMarker::LegendMarkerType" signature="QLegendMarker::LegendMarkerType type() override"/>
        </class>
        <class name="QCandlestickModelMapper" href="qcandlestickmodelmapper.html" status="active" access="public" location="qcandlestickmodelmapper.h" documented="true" bases="QObject" module="QtCharts" brief="Abstract model mapper class for candlestick series">
            <function name="QCandlestickModelMapper" fullname="QCandlestickModelMapper::QCandlestickModelMapper" href="qcandlestickmodelmapper.html#QCandlestickModelMapper" status="active" access="public" location="qcandlestickmodelmapper.h" documented="true" meta="constructor" explicit="true" signature="QCandlestickModelMapper(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="close" fullname="QCandlestickModelMapper::close" href="qcandlestickmodelmapper.html#close" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" const="true" type="int" signature="int close() const"/>
            <function name="firstSetSection" fullname="QCandlestickModelMapper::firstSetSection" href="qcandlestickmodelmapper.html#firstSetSection" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" const="true" type="int" signature="int firstSetSection() const"/>
            <function name="high" fullname="QCandlestickModelMapper::high" href="qcandlestickmodelmapper.html#high" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" const="true" type="int" signature="int high() const"/>
            <function name="lastSetSection" fullname="QCandlestickModelMapper::lastSetSection" href="qcandlestickmodelmapper.html#lastSetSection" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" const="true" type="int" signature="int lastSetSection() const"/>
            <function name="low" fullname="QCandlestickModelMapper::low" href="qcandlestickmodelmapper.html#low" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" const="true" type="int" signature="int low() const"/>
            <function name="model" fullname="QCandlestickModelMapper::model" href="qcandlestickmodelmapper.html#model-prop" status="active" access="public" location="qcandlestickmodelmapper.h" meta="plain" const="true" associated-property="model" type="QAbstractItemModel *" signature="QAbstractItemModel * model() const"/>
            <function name="modelReplaced" fullname="QCandlestickModelMapper::modelReplaced" href="qcandlestickmodelmapper.html#modelReplaced" status="active" access="public" location="qcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="model" type="void" brief="Emitted when the model, to which the mapper is connected, has changed" signature="void modelReplaced()"/>
            <function name="open" fullname="QCandlestickModelMapper::open" href="qcandlestickmodelmapper.html#open" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" const="true" type="int" signature="int open() const"/>
            <function name="orientation" fullname="QCandlestickModelMapper::orientation" href="qcandlestickmodelmapper.html#orientation" status="active" access="public" location="qcandlestickmodelmapper.h" documented="true" meta="plain" virtual="pure" const="true" type="Qt::Orientation" signature="Qt::Orientation orientation() const = 0"/>
            <function name="series" fullname="QCandlestickModelMapper::series" href="qcandlestickmodelmapper.html#series-prop" status="active" access="public" location="qcandlestickmodelmapper.h" meta="plain" const="true" associated-property="series" type="QCandlestickSeries *" signature="QCandlestickSeries * series() const"/>
            <function name="seriesReplaced" fullname="QCandlestickModelMapper::seriesReplaced" href="qcandlestickmodelmapper.html#seriesReplaced" status="active" access="public" location="qcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="series" type="void" brief="Emitted when the series to which mapper is connected to has changed" signature="void seriesReplaced()"/>
            <function name="setClose" fullname="QCandlestickModelMapper::setClose" href="qcandlestickmodelmapper.html#setClose" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" type="void" signature="void setClose(int close)">
                <parameter type="int" name="close" default=""/>
            </function>
            <function name="setFirstSetSection" fullname="QCandlestickModelMapper::setFirstSetSection" href="qcandlestickmodelmapper.html#setFirstSetSection" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" type="void" signature="void setFirstSetSection(int firstSetSection)">
                <parameter type="int" name="firstSetSection" default=""/>
            </function>
            <function name="setHigh" fullname="QCandlestickModelMapper::setHigh" href="qcandlestickmodelmapper.html#setHigh" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" type="void" signature="void setHigh(int high)">
                <parameter type="int" name="high" default=""/>
            </function>
            <function name="setLastSetSection" fullname="QCandlestickModelMapper::setLastSetSection" href="qcandlestickmodelmapper.html#setLastSetSection" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" type="void" signature="void setLastSetSection(int lastSetSection)">
                <parameter type="int" name="lastSetSection" default=""/>
            </function>
            <function name="setLow" fullname="QCandlestickModelMapper::setLow" href="qcandlestickmodelmapper.html#setLow" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" type="void" signature="void setLow(int low)">
                <parameter type="int" name="low" default=""/>
            </function>
            <function name="setModel" fullname="QCandlestickModelMapper::setModel" href="qcandlestickmodelmapper.html#model-prop" status="active" access="public" location="qcandlestickmodelmapper.h" meta="plain" associated-property="model" type="void" signature="void setModel(QAbstractItemModel *model)">
                <parameter type="QAbstractItemModel *" name="model" default=""/>
            </function>
            <function name="setOpen" fullname="QCandlestickModelMapper::setOpen" href="qcandlestickmodelmapper.html#setOpen" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" type="void" signature="void setOpen(int open)">
                <parameter type="int" name="open" default=""/>
            </function>
            <function name="setSeries" fullname="QCandlestickModelMapper::setSeries" href="qcandlestickmodelmapper.html#series-prop" status="active" access="public" location="qcandlestickmodelmapper.h" meta="plain" associated-property="series" type="void" signature="void setSeries(QCandlestickSeries *series)">
                <parameter type="QCandlestickSeries *" name="series" default=""/>
            </function>
            <function name="setTimestamp" fullname="QCandlestickModelMapper::setTimestamp" href="qcandlestickmodelmapper.html#setTimestamp" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" type="void" signature="void setTimestamp(int timestamp)">
                <parameter type="int" name="timestamp" default=""/>
            </function>
            <function name="timestamp" fullname="QCandlestickModelMapper::timestamp" href="qcandlestickmodelmapper.html#timestamp" status="active" access="protected" location="qcandlestickmodelmapper.h" documented="true" meta="plain" const="true" type="int" signature="int timestamp() const"/>
            <property name="model" fullname="QCandlestickModelMapper::model" href="qcandlestickmodelmapper.html#model-prop" status="active" access="public" location="qcandlestickmodelmapper.h" documented="true" brief="Defines the model that is used by the mapper">
                <getter name="model"/>
                <setter name="setModel"/>
                <notifier name="modelReplaced"/>
            </property>
            <property name="series" fullname="QCandlestickModelMapper::series" href="qcandlestickmodelmapper.html#series-prop" status="active" access="public" location="qcandlestickmodelmapper.h" documented="true" brief="Defines the QCandlestickSeries object that is used by the mapper">
                <getter name="series"/>
                <setter name="setSeries"/>
                <notifier name="seriesReplaced"/>
            </property>
        </class>
        <class name="QCandlestickSeries" href="qcandlestickseries.html" status="active" access="public" location="qcandlestickseries.h" documented="true" bases="QAbstractSeries" module="QtCharts" brief="Presents data as candlesticks">
            <function name="QCandlestickSeries" fullname="QCandlestickSeries::QCandlestickSeries" href="qcandlestickseries.html#QCandlestickSeries" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="constructor" explicit="true" signature="QCandlestickSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="append" fullname="QCandlestickSeries::append" href="qcandlestickseries.html#append" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="plain" type="bool" signature="bool append(QCandlestickSet *set)">
                <parameter type="QCandlestickSet *" name="set" default=""/>
            </function>
            <function name="append" fullname="QCandlestickSeries::append" href="qcandlestickseries.html#append-1" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="plain" overload="true" overload-number="1" type="bool" signature="bool append(const QList&lt;QCandlestickSet *&gt; &amp;sets)">
                <parameter type="const QList&lt;QCandlestickSet *&gt; &amp;" name="sets" default=""/>
            </function>
            <function name="bodyOutlineVisibilityChanged" fullname="QCandlestickSeries::bodyOutlineVisibilityChanged" href="qcandlestickseries.html#bodyOutlineVisibilityChanged" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" associated-property="bodyOutlineVisible" type="void" signature="void bodyOutlineVisibilityChanged()"/>
            <function name="bodyOutlineVisible" fullname="QCandlestickSeries::bodyOutlineVisible" href="qcandlestickseries.html#bodyOutlineVisible-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" const="true" associated-property="bodyOutlineVisible" type="bool" signature="bool bodyOutlineVisible() const"/>
            <function name="bodyWidth" fullname="QCandlestickSeries::bodyWidth" href="qcandlestickseries.html#bodyWidth-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" const="true" associated-property="bodyWidth" type="qreal" signature="qreal bodyWidth() const"/>
            <function name="bodyWidthChanged" fullname="QCandlestickSeries::bodyWidthChanged" href="qcandlestickseries.html#bodyWidthChanged" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" associated-property="bodyWidth" type="void" signature="void bodyWidthChanged()"/>
            <function name="brush" fullname="QCandlestickSeries::brush" href="qcandlestickseries.html#brush-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" const="true" associated-property="brush" type="QBrush" signature="QBrush brush() const"/>
            <function name="brushChanged" fullname="QCandlestickSeries::brushChanged" href="qcandlestickseries.html#brushChanged" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" associated-property="brush" type="void" signature="void brushChanged()"/>
            <function name="candlestickSetsAdded" fullname="QCandlestickSeries::candlestickSetsAdded" href="qcandlestickseries.html#candlestickSetsAdded" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" type="void" signature="void candlestickSetsAdded(const QList&lt;QCandlestickSet *&gt; &amp;sets)">
                <parameter type="const QList&lt;QCandlestickSet *&gt; &amp;" name="sets" default=""/>
            </function>
            <function name="candlestickSetsRemoved" fullname="QCandlestickSeries::candlestickSetsRemoved" href="qcandlestickseries.html#candlestickSetsRemoved" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" type="void" signature="void candlestickSetsRemoved(const QList&lt;QCandlestickSet *&gt; &amp;sets)">
                <parameter type="const QList&lt;QCandlestickSet *&gt; &amp;" name="sets" default=""/>
            </function>
            <function name="capsVisibilityChanged" fullname="QCandlestickSeries::capsVisibilityChanged" href="qcandlestickseries.html#capsVisibilityChanged" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" associated-property="capsVisible" type="void" signature="void capsVisibilityChanged()"/>
            <function name="capsVisible" fullname="QCandlestickSeries::capsVisible" href="qcandlestickseries.html#capsVisible-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" const="true" associated-property="capsVisible" type="bool" signature="bool capsVisible() const"/>
            <function name="capsWidth" fullname="QCandlestickSeries::capsWidth" href="qcandlestickseries.html#capsWidth-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" const="true" associated-property="capsWidth" type="qreal" signature="qreal capsWidth() const"/>
            <function name="capsWidthChanged" fullname="QCandlestickSeries::capsWidthChanged" href="qcandlestickseries.html#capsWidthChanged" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" associated-property="capsWidth" type="void" signature="void capsWidthChanged()"/>
            <function name="clear" fullname="QCandlestickSeries::clear" href="qcandlestickseries.html#clear" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="plain" type="void" signature="void clear()"/>
            <function name="clicked" fullname="QCandlestickSeries::clicked" href="qcandlestickseries.html#clicked" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" type="void" signature="void clicked(QCandlestickSet *set)">
                <parameter type="QCandlestickSet *" name="set" default=""/>
            </function>
            <function name="count" fullname="QCandlestickSeries::count" href="qcandlestickseries.html#count" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="plain" const="true" associated-property="count" type="int" signature="int count() const"/>
            <function name="countChanged" fullname="QCandlestickSeries::countChanged" href="qcandlestickseries.html#countChanged" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" associated-property="count" type="void" signature="void countChanged()"/>
            <function name="decreasingColor" fullname="QCandlestickSeries::decreasingColor" href="qcandlestickseries.html#decreasingColor-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" const="true" associated-property="decreasingColor" type="QColor" signature="QColor decreasingColor() const"/>
            <function name="decreasingColorChanged" fullname="QCandlestickSeries::decreasingColorChanged" href="qcandlestickseries.html#decreasingColorChanged" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" associated-property="decreasingColor" type="void" signature="void decreasingColorChanged()"/>
            <function name="doubleClicked" fullname="QCandlestickSeries::doubleClicked" href="qcandlestickseries.html#doubleClicked" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" type="void" signature="void doubleClicked(QCandlestickSet *set)">
                <parameter type="QCandlestickSet *" name="set" default=""/>
            </function>
            <function name="hovered" fullname="QCandlestickSeries::hovered" href="qcandlestickseries.html#hovered" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" type="void" signature="void hovered(bool status, QCandlestickSet *set)">
                <parameter type="bool" name="status" default=""/>
                <parameter type="QCandlestickSet *" name="set" default=""/>
            </function>
            <function name="increasingColor" fullname="QCandlestickSeries::increasingColor" href="qcandlestickseries.html#increasingColor-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" const="true" associated-property="increasingColor" type="QColor" signature="QColor increasingColor() const"/>
            <function name="increasingColorChanged" fullname="QCandlestickSeries::increasingColorChanged" href="qcandlestickseries.html#increasingColorChanged" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" associated-property="increasingColor" type="void" signature="void increasingColorChanged()"/>
            <function name="insert" fullname="QCandlestickSeries::insert" href="qcandlestickseries.html#insert" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="plain" type="bool" signature="bool insert(int index, QCandlestickSet *set)">
                <parameter type="int" name="index" default=""/>
                <parameter type="QCandlestickSet *" name="set" default=""/>
            </function>
            <function name="maximumColumnWidth" fullname="QCandlestickSeries::maximumColumnWidth" href="qcandlestickseries.html#maximumColumnWidth-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" const="true" associated-property="maximumColumnWidth" type="qreal" signature="qreal maximumColumnWidth() const"/>
            <function name="maximumColumnWidthChanged" fullname="QCandlestickSeries::maximumColumnWidthChanged" href="qcandlestickseries.html#maximumColumnWidthChanged" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" associated-property="maximumColumnWidth" type="void" signature="void maximumColumnWidthChanged()"/>
            <function name="minimumColumnWidth" fullname="QCandlestickSeries::minimumColumnWidth" href="qcandlestickseries.html#minimumColumnWidth-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" const="true" associated-property="minimumColumnWidth" type="qreal" signature="qreal minimumColumnWidth() const"/>
            <function name="minimumColumnWidthChanged" fullname="QCandlestickSeries::minimumColumnWidthChanged" href="qcandlestickseries.html#minimumColumnWidthChanged" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" associated-property="minimumColumnWidth" type="void" signature="void minimumColumnWidthChanged()"/>
            <function name="pen" fullname="QCandlestickSeries::pen" href="qcandlestickseries.html#pen-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" const="true" associated-property="pen" type="QPen" signature="QPen pen() const"/>
            <function name="penChanged" fullname="QCandlestickSeries::penChanged" href="qcandlestickseries.html#penChanged" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" associated-property="pen" type="void" signature="void penChanged()"/>
            <function name="pressed" fullname="QCandlestickSeries::pressed" href="qcandlestickseries.html#pressed" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" type="void" signature="void pressed(QCandlestickSet *set)">
                <parameter type="QCandlestickSet *" name="set" default=""/>
            </function>
            <function name="released" fullname="QCandlestickSeries::released" href="qcandlestickseries.html#released" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="signal" type="void" signature="void released(QCandlestickSet *set)">
                <parameter type="QCandlestickSet *" name="set" default=""/>
            </function>
            <function name="remove" fullname="QCandlestickSeries::remove" href="qcandlestickseries.html#remove" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="plain" type="bool" signature="bool remove(QCandlestickSet *set)">
                <parameter type="QCandlestickSet *" name="set" default=""/>
            </function>
            <function name="remove" fullname="QCandlestickSeries::remove" href="qcandlestickseries.html#remove-1" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="plain" overload="true" overload-number="1" type="bool" signature="bool remove(const QList&lt;QCandlestickSet *&gt; &amp;sets)">
                <parameter type="const QList&lt;QCandlestickSet *&gt; &amp;" name="sets" default=""/>
            </function>
            <function name="setBodyOutlineVisible" fullname="QCandlestickSeries::setBodyOutlineVisible" href="qcandlestickseries.html#bodyOutlineVisible-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" associated-property="bodyOutlineVisible" type="void" signature="void setBodyOutlineVisible(bool bodyOutlineVisible)">
                <parameter type="bool" name="bodyOutlineVisible" default=""/>
            </function>
            <function name="setBodyWidth" fullname="QCandlestickSeries::setBodyWidth" href="qcandlestickseries.html#bodyWidth-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" associated-property="bodyWidth" type="void" signature="void setBodyWidth(qreal bodyWidth)">
                <parameter type="qreal" name="bodyWidth" default=""/>
            </function>
            <function name="setBrush" fullname="QCandlestickSeries::setBrush" href="qcandlestickseries.html#brush-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" associated-property="brush" type="void" signature="void setBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setCapsVisible" fullname="QCandlestickSeries::setCapsVisible" href="qcandlestickseries.html#capsVisible-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" associated-property="capsVisible" type="void" signature="void setCapsVisible(bool capsVisible)">
                <parameter type="bool" name="capsVisible" default=""/>
            </function>
            <function name="setCapsWidth" fullname="QCandlestickSeries::setCapsWidth" href="qcandlestickseries.html#capsWidth-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" associated-property="capsWidth" type="void" signature="void setCapsWidth(qreal capsWidth)">
                <parameter type="qreal" name="capsWidth" default=""/>
            </function>
            <function name="setDecreasingColor" fullname="QCandlestickSeries::setDecreasingColor" href="qcandlestickseries.html#decreasingColor-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" associated-property="decreasingColor" type="void" signature="void setDecreasingColor(const QColor &amp;decreasingColor)">
                <parameter type="const QColor &amp;" name="decreasingColor" default=""/>
            </function>
            <function name="setIncreasingColor" fullname="QCandlestickSeries::setIncreasingColor" href="qcandlestickseries.html#increasingColor-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" associated-property="increasingColor" type="void" signature="void setIncreasingColor(const QColor &amp;increasingColor)">
                <parameter type="const QColor &amp;" name="increasingColor" default=""/>
            </function>
            <function name="setMaximumColumnWidth" fullname="QCandlestickSeries::setMaximumColumnWidth" href="qcandlestickseries.html#maximumColumnWidth-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" associated-property="maximumColumnWidth" type="void" signature="void setMaximumColumnWidth(qreal maximumColumnWidth)">
                <parameter type="qreal" name="maximumColumnWidth" default=""/>
            </function>
            <function name="setMinimumColumnWidth" fullname="QCandlestickSeries::setMinimumColumnWidth" href="qcandlestickseries.html#minimumColumnWidth-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" associated-property="minimumColumnWidth" type="void" signature="void setMinimumColumnWidth(qreal minimumColumnWidth)">
                <parameter type="qreal" name="minimumColumnWidth" default=""/>
            </function>
            <function name="setPen" fullname="QCandlestickSeries::setPen" href="qcandlestickseries.html#pen-prop" status="active" access="public" location="qcandlestickseries.h" meta="plain" associated-property="pen" type="void" signature="void setPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="sets" fullname="QCandlestickSeries::sets" href="qcandlestickseries.html#sets" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="plain" const="true" type="QList&lt;QCandlestickSet *&gt;" signature="QList&lt;QCandlestickSet *&gt; sets() const"/>
            <function name="take" fullname="QCandlestickSeries::take" href="qcandlestickseries.html#take" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="plain" type="bool" signature="bool take(QCandlestickSet *set)">
                <parameter type="QCandlestickSet *" name="set" default=""/>
            </function>
            <function name="type" fullname="QCandlestickSeries::type" href="qcandlestickseries.html#type" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="~QCandlestickSeries" fullname="QCandlestickSeries::~QCandlestickSeries" href="qcandlestickseries.html#dtor.QCandlestickSeries" status="active" access="public" location="qcandlestickseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QCandlestickSeries()"/>
            <property name="bodyOutlineVisible" fullname="QCandlestickSeries::bodyOutlineVisible" href="qcandlestickseries.html#bodyOutlineVisible-prop" status="active" access="public" location="qcandlestickseries.h" documented="true" brief="Visibility of the candlestick body outline">
                <getter name="bodyOutlineVisible"/>
                <setter name="setBodyOutlineVisible"/>
                <notifier name="bodyOutlineVisibilityChanged"/>
            </property>
            <property name="bodyWidth" fullname="QCandlestickSeries::bodyWidth" href="qcandlestickseries.html#bodyWidth-prop" status="active" access="public" location="qcandlestickseries.h" documented="true" brief="Relative width of the candlestick item within its own slot, in the range from 0.0 to 1.0">
                <getter name="bodyWidth"/>
                <setter name="setBodyWidth"/>
                <notifier name="bodyWidthChanged"/>
            </property>
            <property name="brush" fullname="QCandlestickSeries::brush" href="qcandlestickseries.html#brush-prop" status="active" access="public" location="qcandlestickseries.h" documented="true" brief="Used to fill the candlestick items">
                <getter name="brush"/>
                <setter name="setBrush"/>
                <notifier name="brushChanged"/>
            </property>
            <property name="capsVisible" fullname="QCandlestickSeries::capsVisible" href="qcandlestickseries.html#capsVisible-prop" status="active" access="public" location="qcandlestickseries.h" documented="true" brief="Visibility of the caps">
                <getter name="capsVisible"/>
                <setter name="setCapsVisible"/>
                <notifier name="capsVisibilityChanged"/>
            </property>
            <property name="capsWidth" fullname="QCandlestickSeries::capsWidth" href="qcandlestickseries.html#capsWidth-prop" status="active" access="public" location="qcandlestickseries.h" documented="true" brief="Relative width of the caps within a candlestick, in the range from 0.0 to 1.0">
                <getter name="capsWidth"/>
                <setter name="setCapsWidth"/>
                <notifier name="capsWidthChanged"/>
            </property>
            <property name="count" fullname="QCandlestickSeries::count" href="qcandlestickseries.html#count-prop" status="active" access="public" location="qcandlestickseries.h" documented="true" writable="false" brief="Number of candlestick items in a series">
                <getter name="count"/>
                <notifier name="countChanged"/>
            </property>
            <property name="decreasingColor" fullname="QCandlestickSeries::decreasingColor" href="qcandlestickseries.html#decreasingColor-prop" status="active" access="public" location="qcandlestickseries.h" documented="true" brief="Color of the decreasing candlestick item body">
                <getter name="decreasingColor"/>
                <setter name="setDecreasingColor"/>
                <notifier name="decreasingColorChanged"/>
            </property>
            <property name="increasingColor" fullname="QCandlestickSeries::increasingColor" href="qcandlestickseries.html#increasingColor-prop" status="active" access="public" location="qcandlestickseries.h" documented="true" brief="Color of the increasing candlestick item body">
                <getter name="increasingColor"/>
                <setter name="setIncreasingColor"/>
                <notifier name="increasingColorChanged"/>
            </property>
            <property name="maximumColumnWidth" fullname="QCandlestickSeries::maximumColumnWidth" href="qcandlestickseries.html#maximumColumnWidth-prop" status="active" access="public" location="qcandlestickseries.h" documented="true" brief="Maximum width of the candlestick items in pixels. Setting a negative value means there is no maximum width. All negative values are converted to -1.0">
                <getter name="maximumColumnWidth"/>
                <setter name="setMaximumColumnWidth"/>
                <notifier name="maximumColumnWidthChanged"/>
            </property>
            <property name="minimumColumnWidth" fullname="QCandlestickSeries::minimumColumnWidth" href="qcandlestickseries.html#minimumColumnWidth-prop" status="active" access="public" location="qcandlestickseries.h" documented="true" brief="Minimum width of the candlestick items in pixels. Setting a negative value means there is no minimum width. All negative values are converted to -1.0">
                <getter name="minimumColumnWidth"/>
                <setter name="setMinimumColumnWidth"/>
                <notifier name="minimumColumnWidthChanged"/>
            </property>
            <property name="pen" fullname="QCandlestickSeries::pen" href="qcandlestickseries.html#pen-prop" status="active" access="public" location="qcandlestickseries.h" documented="true" brief="Used to draw the lines of the candlestick items">
                <getter name="pen"/>
                <setter name="setPen"/>
                <notifier name="penChanged"/>
            </property>
        </class>
        <class name="QCandlestickSet" href="qcandlestickset.html" status="active" access="public" location="qcandlestickset.h" documented="true" bases="QObject" module="QtCharts" brief="Represents a single candlestick item in a candlestick chart">
            <function name="QCandlestickSet" fullname="QCandlestickSet::QCandlestickSet" href="qcandlestickset.html#QCandlestickSet" status="active" access="public" location="qcandlestickset.h" documented="true" meta="constructor" explicit="true" signature="QCandlestickSet(qreal timestamp, QObject *parent)">
                <parameter type="qreal" name="timestamp" default="0.0"/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="QCandlestickSet" fullname="QCandlestickSet::QCandlestickSet" href="qcandlestickset.html#QCandlestickSet-1" status="active" access="public" location="qcandlestickset.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QCandlestickSet(qreal open, qreal high, qreal low, qreal close, qreal timestamp, QObject *parent)">
                <parameter type="qreal" name="open" default=""/>
                <parameter type="qreal" name="high" default=""/>
                <parameter type="qreal" name="low" default=""/>
                <parameter type="qreal" name="close" default=""/>
                <parameter type="qreal" name="timestamp" default="0.0"/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="brush" fullname="QCandlestickSet::brush" href="qcandlestickset.html#brush-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" const="true" associated-property="brush" type="QBrush" signature="QBrush brush() const"/>
            <function name="brushChanged" fullname="QCandlestickSet::brushChanged" href="qcandlestickset.html#brushChanged" status="active" access="public" location="qcandlestickset.h" documented="true" meta="signal" associated-property="brush" type="void" signature="void brushChanged()"/>
            <function name="clicked" fullname="QCandlestickSet::clicked" href="qcandlestickset.html#clicked" status="active" access="public" location="qcandlestickset.h" documented="true" meta="signal" type="void" signature="void clicked()"/>
            <function name="close" fullname="QCandlestickSet::close" href="qcandlestickset.html#close-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" const="true" associated-property="close" type="qreal" signature="qreal close() const"/>
            <function name="closeChanged" fullname="QCandlestickSet::closeChanged" href="qcandlestickset.html#closeChanged" status="active" access="public" location="qcandlestickset.h" documented="true" meta="signal" associated-property="close" type="void" signature="void closeChanged()"/>
            <function name="doubleClicked" fullname="QCandlestickSet::doubleClicked" href="qcandlestickset.html#doubleClicked" status="active" access="public" location="qcandlestickset.h" documented="true" meta="signal" type="void" signature="void doubleClicked()"/>
            <function name="high" fullname="QCandlestickSet::high" href="qcandlestickset.html#high-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" const="true" associated-property="high" type="qreal" signature="qreal high() const"/>
            <function name="highChanged" fullname="QCandlestickSet::highChanged" href="qcandlestickset.html#highChanged" status="active" access="public" location="qcandlestickset.h" documented="true" meta="signal" associated-property="high" type="void" signature="void highChanged()"/>
            <function name="hovered" fullname="QCandlestickSet::hovered" href="qcandlestickset.html#hovered" status="active" access="public" location="qcandlestickset.h" documented="true" meta="signal" type="void" signature="void hovered(bool status)">
                <parameter type="bool" name="status" default=""/>
            </function>
            <function name="low" fullname="QCandlestickSet::low" href="qcandlestickset.html#low-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" const="true" associated-property="low" type="qreal" signature="qreal low() const"/>
            <function name="lowChanged" fullname="QCandlestickSet::lowChanged" href="qcandlestickset.html#lowChanged" status="active" access="public" location="qcandlestickset.h" documented="true" meta="signal" associated-property="low" type="void" signature="void lowChanged()"/>
            <function name="open" fullname="QCandlestickSet::open" href="qcandlestickset.html#open-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" const="true" associated-property="open" type="qreal" signature="qreal open() const"/>
            <function name="openChanged" fullname="QCandlestickSet::openChanged" href="qcandlestickset.html#openChanged" status="active" access="public" location="qcandlestickset.h" documented="true" meta="signal" associated-property="open" type="void" signature="void openChanged()"/>
            <function name="pen" fullname="QCandlestickSet::pen" href="qcandlestickset.html#pen-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" const="true" associated-property="pen" type="QPen" signature="QPen pen() const"/>
            <function name="penChanged" fullname="QCandlestickSet::penChanged" href="qcandlestickset.html#penChanged" status="active" access="public" location="qcandlestickset.h" documented="true" meta="signal" associated-property="pen" type="void" signature="void penChanged()"/>
            <function name="pressed" fullname="QCandlestickSet::pressed" href="qcandlestickset.html#pressed" status="active" access="public" location="qcandlestickset.h" documented="true" meta="signal" type="void" signature="void pressed()"/>
            <function name="released" fullname="QCandlestickSet::released" href="qcandlestickset.html#released" status="active" access="public" location="qcandlestickset.h" documented="true" meta="signal" type="void" signature="void released()"/>
            <function name="setBrush" fullname="QCandlestickSet::setBrush" href="qcandlestickset.html#brush-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" associated-property="brush" type="void" signature="void setBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setClose" fullname="QCandlestickSet::setClose" href="qcandlestickset.html#close-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" associated-property="close" type="void" signature="void setClose(qreal close)">
                <parameter type="qreal" name="close" default=""/>
            </function>
            <function name="setHigh" fullname="QCandlestickSet::setHigh" href="qcandlestickset.html#high-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" associated-property="high" type="void" signature="void setHigh(qreal high)">
                <parameter type="qreal" name="high" default=""/>
            </function>
            <function name="setLow" fullname="QCandlestickSet::setLow" href="qcandlestickset.html#low-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" associated-property="low" type="void" signature="void setLow(qreal low)">
                <parameter type="qreal" name="low" default=""/>
            </function>
            <function name="setOpen" fullname="QCandlestickSet::setOpen" href="qcandlestickset.html#open-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" associated-property="open" type="void" signature="void setOpen(qreal open)">
                <parameter type="qreal" name="open" default=""/>
            </function>
            <function name="setPen" fullname="QCandlestickSet::setPen" href="qcandlestickset.html#pen-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" associated-property="pen" type="void" signature="void setPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setTimestamp" fullname="QCandlestickSet::setTimestamp" href="qcandlestickset.html#timestamp-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" associated-property="timestamp" type="void" signature="void setTimestamp(qreal timestamp)">
                <parameter type="qreal" name="timestamp" default=""/>
            </function>
            <function name="timestamp" fullname="QCandlestickSet::timestamp" href="qcandlestickset.html#timestamp-prop" status="active" access="public" location="qcandlestickset.h" meta="plain" const="true" associated-property="timestamp" type="qreal" signature="qreal timestamp() const"/>
            <function name="timestampChanged" fullname="QCandlestickSet::timestampChanged" href="qcandlestickset.html#timestampChanged" status="active" access="public" location="qcandlestickset.h" documented="true" meta="signal" associated-property="timestamp" type="void" signature="void timestampChanged()"/>
            <function name="~QCandlestickSet" fullname="QCandlestickSet::~QCandlestickSet" href="qcandlestickset.html#dtor.QCandlestickSet" status="active" access="public" location="qcandlestickset.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QCandlestickSet()"/>
            <property name="brush" fullname="QCandlestickSet::brush" href="qcandlestickset.html#brush-prop" status="active" access="public" location="qcandlestickset.h" documented="true" brief="Used to fill the candlestick item">
                <getter name="brush"/>
                <setter name="setBrush"/>
                <notifier name="brushChanged"/>
            </property>
            <property name="close" fullname="QCandlestickSet::close" href="qcandlestickset.html#close-prop" status="active" access="public" location="qcandlestickset.h" documented="true" brief="Value of the candlestick item">
                <getter name="close"/>
                <setter name="setClose"/>
                <notifier name="closeChanged"/>
            </property>
            <property name="high" fullname="QCandlestickSet::high" href="qcandlestickset.html#high-prop" status="active" access="public" location="qcandlestickset.h" documented="true" brief="Value of the candlestick item">
                <getter name="high"/>
                <setter name="setHigh"/>
                <notifier name="highChanged"/>
            </property>
            <property name="low" fullname="QCandlestickSet::low" href="qcandlestickset.html#low-prop" status="active" access="public" location="qcandlestickset.h" documented="true" brief="Value of the candlestick item">
                <getter name="low"/>
                <setter name="setLow"/>
                <notifier name="lowChanged"/>
            </property>
            <property name="open" fullname="QCandlestickSet::open" href="qcandlestickset.html#open-prop" status="active" access="public" location="qcandlestickset.h" documented="true" brief="Value of the candlestick item">
                <getter name="open"/>
                <setter name="setOpen"/>
                <notifier name="openChanged"/>
            </property>
            <property name="pen" fullname="QCandlestickSet::pen" href="qcandlestickset.html#pen-prop" status="active" access="public" location="qcandlestickset.h" documented="true" brief="Used to draw the lines of the candlestick item">
                <getter name="pen"/>
                <setter name="setPen"/>
                <notifier name="penChanged"/>
            </property>
            <property name="timestamp" fullname="QCandlestickSet::timestamp" href="qcandlestickset.html#timestamp-prop" status="active" access="public" location="qcandlestickset.h" documented="true" brief="Value of the candlestick item">
                <getter name="timestamp"/>
                <setter name="setTimestamp"/>
                <notifier name="timestampChanged"/>
            </property>
        </class>
        <class name="QCategoryAxis" href="qcategoryaxis.html" status="active" access="public" location="qcategoryaxis.h" documented="true" bases="QValueAxis" module="QtCharts" brief="Places named ranges on the axis">
            <function name="QCategoryAxis" fullname="QCategoryAxis::QCategoryAxis" href="qcategoryaxis.html#QCategoryAxis" status="active" access="public" location="qcategoryaxis.h" documented="true" meta="constructor" explicit="true" signature="QCategoryAxis(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="append" fullname="QCategoryAxis::append" href="qcategoryaxis.html#append" status="active" access="public" location="qcategoryaxis.h" documented="true" meta="plain" type="void" signature="void append(const QString &amp;categoryLabel, qreal categoryEndValue)">
                <parameter type="const QString &amp;" name="categoryLabel" default=""/>
                <parameter type="qreal" name="categoryEndValue" default=""/>
            </function>
            <function name="categoriesChanged" fullname="QCategoryAxis::categoriesChanged" href="qcategoryaxis.html#categoriesChanged" status="active" access="public" location="qcategoryaxis.h" documented="true" meta="signal" type="void" signature="void categoriesChanged()"/>
            <function name="categoriesLabels" fullname="QCategoryAxis::categoriesLabels" href="qcategoryaxis.html#categoriesLabels" status="active" access="public" location="qcategoryaxis.h" documented="true" meta="plain" associated-property="categoriesLabels" type="QStringList" signature="QStringList categoriesLabels()"/>
            <function name="count" fullname="QCategoryAxis::count" href="qcategoryaxis.html#count" status="active" access="public" location="qcategoryaxis.h" documented="true" meta="plain" const="true" associated-property="count" type="int" signature="int count() const"/>
            <function name="endValue" fullname="QCategoryAxis::endValue" href="qcategoryaxis.html#endValue" status="active" access="public" location="qcategoryaxis.h" documented="true" meta="plain" const="true" type="qreal" signature="qreal endValue(const QString &amp;categoryLabel) const">
                <parameter type="const QString &amp;" name="categoryLabel" default=""/>
            </function>
            <function name="labelsPosition" fullname="QCategoryAxis::labelsPosition" href="qcategoryaxis.html#labelsPosition-prop" status="active" access="public" location="qcategoryaxis.h" meta="plain" const="true" associated-property="labelsPosition" type="QCategoryAxis::AxisLabelsPosition" signature="QCategoryAxis::AxisLabelsPosition labelsPosition() const"/>
            <function name="labelsPositionChanged" fullname="QCategoryAxis::labelsPositionChanged" href="qcategoryaxis.html#labelsPosition-prop" status="active" access="public" location="qcategoryaxis.h" meta="signal" associated-property="labelsPosition" type="void" signature="void labelsPositionChanged(QCategoryAxis::AxisLabelsPosition position)">
                <parameter type="QCategoryAxis::AxisLabelsPosition" name="position" default=""/>
            </function>
            <function name="remove" fullname="QCategoryAxis::remove" href="qcategoryaxis.html#remove" status="active" access="public" location="qcategoryaxis.h" documented="true" meta="plain" type="void" signature="void remove(const QString &amp;categoryLabel)">
                <parameter type="const QString &amp;" name="categoryLabel" default=""/>
            </function>
            <function name="replaceLabel" fullname="QCategoryAxis::replaceLabel" href="qcategoryaxis.html#replaceLabel" status="active" access="public" location="qcategoryaxis.h" documented="true" meta="plain" type="void" signature="void replaceLabel(const QString &amp;oldLabel, const QString &amp;newLabel)">
                <parameter type="const QString &amp;" name="oldLabel" default=""/>
                <parameter type="const QString &amp;" name="newLabel" default=""/>
            </function>
            <function name="setLabelsPosition" fullname="QCategoryAxis::setLabelsPosition" href="qcategoryaxis.html#labelsPosition-prop" status="active" access="public" location="qcategoryaxis.h" meta="plain" associated-property="labelsPosition" type="void" signature="void setLabelsPosition(QCategoryAxis::AxisLabelsPosition position)">
                <parameter type="QCategoryAxis::AxisLabelsPosition" name="position" default=""/>
            </function>
            <function name="setStartValue" fullname="QCategoryAxis::setStartValue" href="qcategoryaxis.html#setStartValue" status="active" access="public" location="qcategoryaxis.h" documented="true" meta="plain" associated-property="startValue" type="void" signature="void setStartValue(qreal min)">
                <parameter type="qreal" name="min" default=""/>
            </function>
            <function name="startValue" fullname="QCategoryAxis::startValue" href="qcategoryaxis.html#startValue" status="active" access="public" location="qcategoryaxis.h" documented="true" meta="plain" const="true" associated-property="startValue" type="qreal" signature="qreal startValue(const QString &amp;categoryLabel) const">
                <parameter type="const QString &amp;" name="categoryLabel" default="QString()"/>
            </function>
            <function name="type" fullname="QCategoryAxis::type" href="qcategoryaxis.html#type" status="active" access="public" location="qcategoryaxis.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractAxis::AxisType" signature="QAbstractAxis::AxisType type() const override"/>
            <function name="~QCategoryAxis" fullname="QCategoryAxis::~QCategoryAxis" href="qcategoryaxis.html#dtor.QCategoryAxis" status="active" access="public" location="qcategoryaxis.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QCategoryAxis()"/>
            <enum name="AxisLabelsPosition" fullname="QCategoryAxis::AxisLabelsPosition" href="qcategoryaxis.html#AxisLabelsPosition-enum" status="active" access="public" location="qcategoryaxis.h" documented="true">
                <value name="AxisLabelsPositionCenter" value="0x0"/>
                <value name="AxisLabelsPositionOnValue" value="0x1"/>
            </enum>
            <property name="categoriesLabels" fullname="QCategoryAxis::categoriesLabels" href="qcategoryaxis.html#categoriesLabels-prop" status="active" access="public" location="qcategoryaxis.h" documented="true" writable="false" brief="Category labels as a string list">
                <getter name="categoriesLabels"/>
            </property>
            <property name="count" fullname="QCategoryAxis::count" href="qcategoryaxis.html#count-prop" status="active" access="public" location="qcategoryaxis.h" documented="true" writable="false" brief="Number of categories">
                <getter name="count"/>
            </property>
            <property name="labelsPosition" fullname="QCategoryAxis::labelsPosition" href="qcategoryaxis.html#labelsPosition-prop" status="active" access="public" location="qcategoryaxis.h" documented="true" brief="Position of the category labels. The labels in the beginning and in the end of the axes may overlap other axes' labels when positioned on value">
                <getter name="labelsPosition"/>
                <setter name="setLabelsPosition"/>
                <notifier name="labelsPositionChanged"/>
            </property>
            <property name="startValue" fullname="QCategoryAxis::startValue" href="qcategoryaxis.html#startValue-prop" status="active" access="public" location="qcategoryaxis.h" documented="true" brief="Low end of the first category on the axis">
                <getter name="startValue"/>
                <setter name="setStartValue"/>
            </property>
        </class>
        <class name="QChart" href="qchart.html" status="active" access="public" location="qchart.h" documented="true" bases="QGraphicsWidget" module="QtCharts" brief="Manages the graphical representation of the chart's series, legends, and axes">
            <function name="QChart" fullname="QChart::QChart" href="qchart.html#QChart" status="active" access="public" location="qchart.h" documented="true" meta="constructor" explicit="true" signature="QChart(QGraphicsItem *parent, Qt::WindowFlags wFlags)">
                <parameter type="QGraphicsItem *" name="parent" default="nullptr"/>
                <parameter type="Qt::WindowFlags" name="wFlags" default="Qt::WindowFlags()"/>
            </function>
            <function name="addAxis" fullname="QChart::addAxis" href="qchart.html#addAxis" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void addAxis(QAbstractAxis *axis, Qt::Alignment alignment)">
                <parameter type="QAbstractAxis *" name="axis" default=""/>
                <parameter type="Qt::Alignment" name="alignment" default=""/>
            </function>
            <function name="addSeries" fullname="QChart::addSeries" href="qchart.html#addSeries" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void addSeries(QAbstractSeries *series)">
                <parameter type="QAbstractSeries *" name="series" default=""/>
            </function>
            <function name="animationDuration" fullname="QChart::animationDuration" href="qchart.html#animationDuration-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="animationDuration" type="int" signature="int animationDuration() const"/>
            <function name="animationEasingCurve" fullname="QChart::animationEasingCurve" href="qchart.html#animationEasingCurve-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="animationEasingCurve" type="QEasingCurve" signature="QEasingCurve animationEasingCurve() const"/>
            <function name="animationOptions" fullname="QChart::animationOptions" href="qchart.html#animationOptions-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="animationOptions" type="QChart::AnimationOptions" signature="QChart::AnimationOptions animationOptions() const"/>
            <function name="axes" fullname="QChart::axes" href="qchart.html#axes" status="active" access="public" location="qchart.h" documented="true" meta="plain" const="true" type="QList&lt;QAbstractAxis *&gt;" signature="QList&lt;QAbstractAxis *&gt; axes(Qt::Orientations orientation, QAbstractSeries *series) const">
                <parameter type="Qt::Orientations" name="orientation" default="Qt::Horizontal|Qt::Vertical"/>
                <parameter type="QAbstractSeries *" name="series" default="nullptr"/>
            </function>
            <function name="axisX" fullname="QChart::axisX" href="qchart-obsolete.html#axisX" status="deprecated" access="public" location="qchart.h" documented="true" meta="plain" const="true" type="QAbstractAxis *" signature="QAbstractAxis * axisX(QAbstractSeries *series) const">
                <parameter type="QAbstractSeries *" name="series" default="nullptr"/>
            </function>
            <function name="axisY" fullname="QChart::axisY" href="qchart-obsolete.html#axisY" status="deprecated" access="public" location="qchart.h" documented="true" meta="plain" const="true" type="QAbstractAxis *" signature="QAbstractAxis * axisY(QAbstractSeries *series) const">
                <parameter type="QAbstractSeries *" name="series" default="nullptr"/>
            </function>
            <function name="backgroundBrush" fullname="QChart::backgroundBrush" href="qchart.html#backgroundBrush" status="active" access="public" location="qchart.h" documented="true" meta="plain" const="true" type="QBrush" signature="QBrush backgroundBrush() const"/>
            <function name="backgroundPen" fullname="QChart::backgroundPen" href="qchart.html#backgroundPen" status="active" access="public" location="qchart.h" documented="true" meta="plain" const="true" type="QPen" signature="QPen backgroundPen() const"/>
            <function name="backgroundRoundness" fullname="QChart::backgroundRoundness" href="qchart.html#backgroundRoundness-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="backgroundRoundness" type="qreal" signature="qreal backgroundRoundness() const"/>
            <function name="chartType" fullname="QChart::chartType" href="qchart.html#chartType-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="chartType" type="QChart::ChartType" signature="QChart::ChartType chartType() const"/>
            <function name="createDefaultAxes" fullname="QChart::createDefaultAxes" href="qchart.html#createDefaultAxes" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void createDefaultAxes()"/>
            <function name="isBackgroundVisible" fullname="QChart::isBackgroundVisible" href="qchart.html#backgroundVisible-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="backgroundVisible" type="bool" signature="bool isBackgroundVisible() const"/>
            <function name="isDropShadowEnabled" fullname="QChart::isDropShadowEnabled" href="qchart.html#dropShadowEnabled-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="dropShadowEnabled" type="bool" signature="bool isDropShadowEnabled() const"/>
            <function name="isPlotAreaBackgroundVisible" fullname="QChart::isPlotAreaBackgroundVisible" href="qchart.html#plotAreaBackgroundVisible-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="plotAreaBackgroundVisible" type="bool" signature="bool isPlotAreaBackgroundVisible() const"/>
            <function name="isZoomed" fullname="QChart::isZoomed" href="qchart.html#isZoomed" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="bool" signature="bool isZoomed()"/>
            <function name="legend" fullname="QChart::legend" href="qchart.html#legend" status="active" access="public" location="qchart.h" documented="true" meta="plain" const="true" type="QLegend *" signature="QLegend * legend() const"/>
            <function name="locale" fullname="QChart::locale" href="qchart.html#locale-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="locale" type="QLocale" signature="QLocale locale() const"/>
            <function name="localizeNumbers" fullname="QChart::localizeNumbers" href="qchart.html#localizeNumbers-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="localizeNumbers" type="bool" signature="bool localizeNumbers() const"/>
            <function name="mapToPosition" fullname="QChart::mapToPosition" href="qchart.html#mapToPosition" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="QPointF" signature="QPointF mapToPosition(const QPointF &amp;value, QAbstractSeries *series)">
                <parameter type="const QPointF &amp;" name="value" default=""/>
                <parameter type="QAbstractSeries *" name="series" default="nullptr"/>
            </function>
            <function name="mapToValue" fullname="QChart::mapToValue" href="qchart.html#mapToValue" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="QPointF" signature="QPointF mapToValue(const QPointF &amp;position, QAbstractSeries *series)">
                <parameter type="const QPointF &amp;" name="position" default=""/>
                <parameter type="QAbstractSeries *" name="series" default="nullptr"/>
            </function>
            <function name="margins" fullname="QChart::margins" href="qchart.html#margins-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="margins" type="QMargins" signature="QMargins margins() const"/>
            <function name="plotArea" fullname="QChart::plotArea" href="qchart.html#plotArea-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="plotArea" type="QRectF" signature="QRectF plotArea() const"/>
            <function name="plotAreaBackgroundBrush" fullname="QChart::plotAreaBackgroundBrush" href="qchart.html#plotAreaBackgroundBrush" status="active" access="public" location="qchart.h" documented="true" meta="plain" const="true" type="QBrush" signature="QBrush plotAreaBackgroundBrush() const"/>
            <function name="plotAreaBackgroundPen" fullname="QChart::plotAreaBackgroundPen" href="qchart.html#plotAreaBackgroundPen" status="active" access="public" location="qchart.h" documented="true" meta="plain" const="true" type="QPen" signature="QPen plotAreaBackgroundPen() const"/>
            <function name="plotAreaChanged" fullname="QChart::plotAreaChanged" href="qchart.html#plotArea-prop" status="active" access="public" location="qchart.h" meta="signal" associated-property="plotArea" type="void" signature="void plotAreaChanged(const QRectF &amp;plotArea)">
                <parameter type="const QRectF &amp;" name="plotArea" default=""/>
            </function>
            <function name="removeAllSeries" fullname="QChart::removeAllSeries" href="qchart.html#removeAllSeries" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void removeAllSeries()"/>
            <function name="removeAxis" fullname="QChart::removeAxis" href="qchart.html#removeAxis" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void removeAxis(QAbstractAxis *axis)">
                <parameter type="QAbstractAxis *" name="axis" default=""/>
            </function>
            <function name="removeSeries" fullname="QChart::removeSeries" href="qchart.html#removeSeries" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void removeSeries(QAbstractSeries *series)">
                <parameter type="QAbstractSeries *" name="series" default=""/>
            </function>
            <function name="scroll" fullname="QChart::scroll" href="qchart.html#scroll" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void scroll(qreal dx, qreal dy)">
                <parameter type="qreal" name="dx" default=""/>
                <parameter type="qreal" name="dy" default=""/>
            </function>
            <function name="series" fullname="QChart::series" href="qchart.html#series" status="active" access="public" location="qchart.h" documented="true" meta="plain" const="true" type="QList&lt;QAbstractSeries *&gt;" signature="QList&lt;QAbstractSeries *&gt; series() const"/>
            <function name="setAnimationDuration" fullname="QChart::setAnimationDuration" href="qchart.html#animationDuration-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="animationDuration" type="void" signature="void setAnimationDuration(int msecs)">
                <parameter type="int" name="msecs" default=""/>
            </function>
            <function name="setAnimationEasingCurve" fullname="QChart::setAnimationEasingCurve" href="qchart.html#animationEasingCurve-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="animationEasingCurve" type="void" signature="void setAnimationEasingCurve(const QEasingCurve &amp;curve)">
                <parameter type="const QEasingCurve &amp;" name="curve" default=""/>
            </function>
            <function name="setAnimationOptions" fullname="QChart::setAnimationOptions" href="qchart.html#animationOptions-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="animationOptions" type="void" signature="void setAnimationOptions(QChart::AnimationOptions options)">
                <parameter type="QChart::AnimationOptions" name="options" default=""/>
            </function>
            <function name="setAxisX" fullname="QChart::setAxisX" href="qchart-obsolete.html#setAxisX" status="deprecated" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void setAxisX(QAbstractAxis *axis, QAbstractSeries *series)">
                <parameter type="QAbstractAxis *" name="axis" default=""/>
                <parameter type="QAbstractSeries *" name="series" default="nullptr"/>
            </function>
            <function name="setAxisY" fullname="QChart::setAxisY" href="qchart-obsolete.html#setAxisY" status="deprecated" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void setAxisY(QAbstractAxis *axis, QAbstractSeries *series)">
                <parameter type="QAbstractAxis *" name="axis" default=""/>
                <parameter type="QAbstractSeries *" name="series" default="nullptr"/>
            </function>
            <function name="setBackgroundBrush" fullname="QChart::setBackgroundBrush" href="qchart.html#setBackgroundBrush" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void setBackgroundBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setBackgroundPen" fullname="QChart::setBackgroundPen" href="qchart.html#setBackgroundPen" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void setBackgroundPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setBackgroundRoundness" fullname="QChart::setBackgroundRoundness" href="qchart.html#backgroundRoundness-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="backgroundRoundness" type="void" signature="void setBackgroundRoundness(qreal diameter)">
                <parameter type="qreal" name="diameter" default=""/>
            </function>
            <function name="setBackgroundVisible" fullname="QChart::setBackgroundVisible" href="qchart.html#backgroundVisible-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="backgroundVisible" type="void" signature="void setBackgroundVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setDropShadowEnabled" fullname="QChart::setDropShadowEnabled" href="qchart.html#dropShadowEnabled-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="dropShadowEnabled" type="void" signature="void setDropShadowEnabled(bool enabled)">
                <parameter type="bool" name="enabled" default="true"/>
            </function>
            <function name="setLocale" fullname="QChart::setLocale" href="qchart.html#locale-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="locale" type="void" signature="void setLocale(const QLocale &amp;locale)">
                <parameter type="const QLocale &amp;" name="locale" default=""/>
            </function>
            <function name="setLocalizeNumbers" fullname="QChart::setLocalizeNumbers" href="qchart.html#localizeNumbers-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="localizeNumbers" type="void" signature="void setLocalizeNumbers(bool localize)">
                <parameter type="bool" name="localize" default=""/>
            </function>
            <function name="setMargins" fullname="QChart::setMargins" href="qchart.html#margins-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="margins" type="void" signature="void setMargins(const QMargins &amp;margins)">
                <parameter type="const QMargins &amp;" name="margins" default=""/>
            </function>
            <function name="setPlotArea" fullname="QChart::setPlotArea" href="qchart.html#plotArea-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="plotArea" type="void" signature="void setPlotArea(const QRectF &amp;rect)">
                <parameter type="const QRectF &amp;" name="rect" default=""/>
            </function>
            <function name="setPlotAreaBackgroundBrush" fullname="QChart::setPlotAreaBackgroundBrush" href="qchart.html#setPlotAreaBackgroundBrush" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void setPlotAreaBackgroundBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setPlotAreaBackgroundPen" fullname="QChart::setPlotAreaBackgroundPen" href="qchart.html#setPlotAreaBackgroundPen" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void setPlotAreaBackgroundPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setPlotAreaBackgroundVisible" fullname="QChart::setPlotAreaBackgroundVisible" href="qchart.html#plotAreaBackgroundVisible-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="plotAreaBackgroundVisible" type="void" signature="void setPlotAreaBackgroundVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setTheme" fullname="QChart::setTheme" href="qchart.html#theme-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="theme" type="void" signature="void setTheme(QChart::ChartTheme theme)">
                <parameter type="QChart::ChartTheme" name="theme" default=""/>
            </function>
            <function name="setTitle" fullname="QChart::setTitle" href="qchart.html#title-prop" status="active" access="public" location="qchart.h" meta="plain" associated-property="title" type="void" signature="void setTitle(const QString &amp;title)">
                <parameter type="const QString &amp;" name="title" default=""/>
            </function>
            <function name="setTitleBrush" fullname="QChart::setTitleBrush" href="qchart.html#setTitleBrush" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void setTitleBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setTitleFont" fullname="QChart::setTitleFont" href="qchart.html#setTitleFont" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void setTitleFont(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="theme" fullname="QChart::theme" href="qchart.html#theme-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="theme" type="QChart::ChartTheme" signature="QChart::ChartTheme theme() const"/>
            <function name="title" fullname="QChart::title" href="qchart.html#title-prop" status="active" access="public" location="qchart.h" meta="plain" const="true" associated-property="title" type="QString" signature="QString title() const"/>
            <function name="titleBrush" fullname="QChart::titleBrush" href="qchart.html#titleBrush" status="active" access="public" location="qchart.h" documented="true" meta="plain" const="true" type="QBrush" signature="QBrush titleBrush() const"/>
            <function name="titleFont" fullname="QChart::titleFont" href="qchart.html#titleFont" status="active" access="public" location="qchart.h" documented="true" meta="plain" const="true" type="QFont" signature="QFont titleFont() const"/>
            <function name="zoom" fullname="QChart::zoom" href="qchart.html#zoom" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void zoom(qreal factor)">
                <parameter type="qreal" name="factor" default=""/>
            </function>
            <function name="zoomIn" fullname="QChart::zoomIn" href="qchart.html#zoomIn" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void zoomIn()"/>
            <function name="zoomIn" fullname="QChart::zoomIn" href="qchart.html#zoomIn-1" status="active" access="public" location="qchart.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void zoomIn(const QRectF &amp;rect)">
                <parameter type="const QRectF &amp;" name="rect" default=""/>
            </function>
            <function name="zoomOut" fullname="QChart::zoomOut" href="qchart.html#zoomOut" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void zoomOut()"/>
            <function name="zoomReset" fullname="QChart::zoomReset" href="qchart.html#zoomReset" status="active" access="public" location="qchart.h" documented="true" meta="plain" type="void" signature="void zoomReset()"/>
            <function name="~QChart" fullname="QChart::~QChart" href="qchart.html#dtor.QChart" status="active" access="public" location="qchart.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QChart()"/>
            <enum name="AnimationOption" fullname="QChart::AnimationOption" href="qchart.html#AnimationOption-enum" status="active" access="public" location="qchart.h" documented="true" typedef="QChart::AnimationOptions">
                <value name="NoAnimation" value="0x0"/>
                <value name="GridAxisAnimations" value="0x1"/>
                <value name="SeriesAnimations" value="0x2"/>
                <value name="AllAnimations" value="0x3"/>
            </enum>
            <enum name="ChartTheme" fullname="QChart::ChartTheme" href="qchart.html#ChartTheme-enum" status="active" access="public" location="qchart.h" documented="true">
                <value name="ChartThemeLight" value="0"/>
                <value name="ChartThemeBlueCerulean" value="1"/>
                <value name="ChartThemeDark" value="2"/>
                <value name="ChartThemeBrownSand" value="3"/>
                <value name="ChartThemeBlueNcs" value="4"/>
                <value name="ChartThemeHighContrast" value="5"/>
                <value name="ChartThemeBlueIcy" value="6"/>
                <value name="ChartThemeQt" value="7"/>
            </enum>
            <enum name="ChartType" fullname="QChart::ChartType" href="qchart.html#ChartType-enum" status="active" access="public" location="qchart.h" documented="true">
                <value name="ChartTypeUndefined" value="0"/>
                <value name="ChartTypeCartesian" value="1"/>
                <value name="ChartTypePolar" value="2"/>
            </enum>
            <typedef name="AnimationOptions" fullname="QChart::AnimationOptions" href="qchart.html#AnimationOption-enum" status="active" access="public" location="qchart.h" enum="QChart::AnimationOption"/>
            <property name="animationDuration" fullname="QChart::animationDuration" href="qchart.html#animationDuration-prop" status="active" access="public" location="qchart.h" documented="true" brief="Duration of the animation for the chart">
                <getter name="animationDuration"/>
                <setter name="setAnimationDuration"/>
            </property>
            <property name="animationEasingCurve" fullname="QChart::animationEasingCurve" href="qchart.html#animationEasingCurve-prop" status="active" access="public" location="qchart.h" documented="true" brief="Easing curve of the animation for the chart">
                <getter name="animationEasingCurve"/>
                <setter name="setAnimationEasingCurve"/>
            </property>
            <property name="animationOptions" fullname="QChart::animationOptions" href="qchart.html#animationOptions-prop" status="active" access="public" location="qchart.h" documented="true" brief="Animation options for the chart">
                <getter name="animationOptions"/>
                <setter name="setAnimationOptions"/>
            </property>
            <property name="backgroundRoundness" fullname="QChart::backgroundRoundness" href="qchart.html#backgroundRoundness-prop" status="active" access="public" location="qchart.h" documented="true" brief="Diameter of the rounding circle at the corners of the chart background">
                <getter name="backgroundRoundness"/>
                <setter name="setBackgroundRoundness"/>
            </property>
            <property name="backgroundVisible" fullname="QChart::backgroundVisible" href="qchart.html#backgroundVisible-prop" status="active" access="public" location="qchart.h" documented="true" brief="Whether the chart background is visible">
                <getter name="isBackgroundVisible"/>
                <setter name="setBackgroundVisible"/>
            </property>
            <property name="chartType" fullname="QChart::chartType" href="qchart.html#chartType-prop" status="active" access="public" location="qchart.h" documented="true" writable="false" brief="Whether the chart is a cartesian chart or a polar chart">
                <getter name="chartType"/>
            </property>
            <property name="dropShadowEnabled" fullname="QChart::dropShadowEnabled" href="qchart.html#dropShadowEnabled-prop" status="active" access="public" location="qchart.h" documented="true" brief="Whether the background drop shadow effect is enabled">
                <getter name="isDropShadowEnabled"/>
                <setter name="setDropShadowEnabled"/>
            </property>
            <property name="locale" fullname="QChart::locale" href="qchart.html#locale-prop" status="active" access="public" location="qchart.h" documented="true" brief="Used to format various chart labels">
                <getter name="locale"/>
                <setter name="setLocale"/>
            </property>
            <property name="localizeNumbers" fullname="QChart::localizeNumbers" href="qchart.html#localizeNumbers-prop" status="active" access="public" location="qchart.h" documented="true" brief="Whether numbers are localized">
                <getter name="localizeNumbers"/>
                <setter name="setLocalizeNumbers"/>
            </property>
            <property name="margins" fullname="QChart::margins" href="qchart.html#margins-prop" status="active" access="public" location="qchart.h" documented="true" brief="Minimum margins allowed between the edge of the chart rectangle and the plot area">
                <getter name="margins"/>
                <setter name="setMargins"/>
            </property>
            <property name="plotArea" fullname="QChart::plotArea" href="qchart.html#plotArea-prop" status="active" access="public" location="qchart.h" documented="true" brief="Rectangle within which the chart is drawn">
                <getter name="plotArea"/>
                <setter name="setPlotArea"/>
                <notifier name="plotAreaChanged"/>
            </property>
            <property name="plotAreaBackgroundVisible" fullname="QChart::plotAreaBackgroundVisible" href="qchart.html#plotAreaBackgroundVisible-prop" status="active" access="public" location="qchart.h" documented="true" brief="Whether the chart plot area background is visible">
                <getter name="isPlotAreaBackgroundVisible"/>
                <setter name="setPlotAreaBackgroundVisible"/>
            </property>
            <property name="theme" fullname="QChart::theme" href="qchart.html#theme-prop" status="active" access="public" location="qchart.h" documented="true" brief="Used for the chart">
                <getter name="theme"/>
                <setter name="setTheme"/>
            </property>
            <property name="title" fullname="QChart::title" href="qchart.html#title-prop" status="active" access="public" location="qchart.h" documented="true" brief="Of the chart">
                <getter name="title"/>
                <setter name="setTitle"/>
            </property>
        </class>
        <class name="QChartView" href="qchartview.html" status="active" access="public" location="qchartview.h" documented="true" bases="QGraphicsView" module="QtCharts" brief="Standalone widget that can display charts">
            <function name="QChartView" fullname="QChartView::QChartView" href="qchartview.html#QChartView" status="active" access="public" location="qchartview.h" documented="true" meta="constructor" explicit="true" signature="QChartView(QWidget *parent)">
                <parameter type="QWidget *" name="parent" default="nullptr"/>
            </function>
            <function name="QChartView" fullname="QChartView::QChartView" href="qchartview.html#QChartView-1" status="active" access="public" location="qchartview.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QChartView(QChart *chart, QWidget *parent)">
                <parameter type="QChart *" name="chart" default=""/>
                <parameter type="QWidget *" name="parent" default="nullptr"/>
            </function>
            <function name="chart" fullname="QChartView::chart" href="qchartview.html#chart" status="active" access="public" location="qchartview.h" documented="true" meta="plain" const="true" type="QChart *" signature="QChart * chart() const"/>
            <function name="mouseMoveEvent" fullname="QChartView::mouseMoveEvent" href="qchartview.html#mouseMoveEvent" status="active" access="protected" location="qchartview.h" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void mouseMoveEvent(QMouseEvent *event) override">
                <parameter type="QMouseEvent *" name="event" default=""/>
            </function>
            <function name="mousePressEvent" fullname="QChartView::mousePressEvent" href="qchartview.html#mousePressEvent" status="active" access="protected" location="qchartview.h" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void mousePressEvent(QMouseEvent *event) override">
                <parameter type="QMouseEvent *" name="event" default=""/>
            </function>
            <function name="mouseReleaseEvent" fullname="QChartView::mouseReleaseEvent" href="qchartview.html#mouseReleaseEvent" status="active" access="protected" location="qchartview.h" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void mouseReleaseEvent(QMouseEvent *event) override">
                <parameter type="QMouseEvent *" name="event" default=""/>
            </function>
            <function name="resizeEvent" fullname="QChartView::resizeEvent" href="qchartview.html#resizeEvent" status="active" access="protected" location="qchartview.h" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void resizeEvent(QResizeEvent *event) override">
                <parameter type="QResizeEvent *" name="event" default=""/>
            </function>
            <function name="rubberBand" fullname="QChartView::rubberBand" href="qchartview.html#rubberBand" status="active" access="public" location="qchartview.h" documented="true" meta="plain" const="true" type="QChartView::RubberBands" signature="QChartView::RubberBands rubberBand() const"/>
            <function name="setChart" fullname="QChartView::setChart" href="qchartview.html#setChart" status="active" access="public" location="qchartview.h" documented="true" meta="plain" type="void" signature="void setChart(QChart *chart)">
                <parameter type="QChart *" name="chart" default=""/>
            </function>
            <function name="setRubberBand" fullname="QChartView::setRubberBand" href="qchartview.html#setRubberBand" status="active" access="public" location="qchartview.h" documented="true" meta="plain" type="void" signature="void setRubberBand(const QChartView::RubberBands &amp;rubberBand)">
                <parameter type="const QChartView::RubberBands &amp;" name="rubberBand" default=""/>
            </function>
            <function name="~QChartView" fullname="QChartView::~QChartView" href="qchartview.html#dtor.QChartView" status="active" access="public" location="qchartview.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QChartView()"/>
            <enum name="RubberBand" fullname="QChartView::RubberBand" href="qchartview.html#RubberBand-enum" status="active" access="public" location="qchartview.h" since="6.2" documented="true" typedef="QChartView::RubberBands">
                <value name="NoRubberBand" value="0x0"/>
                <value name="VerticalRubberBand" value="0x1"/>
                <value name="HorizontalRubberBand" value="0x2"/>
                <value name="RectangleRubberBand" value="0x3"/>
                <value name="ClickThroughRubberBand" value="0x80"/>
            </enum>
            <typedef name="RubberBands" fullname="QChartView::RubberBands" href="qchartview.html#RubberBand-enum" status="active" access="public" location="qchartview.h" enum="QChartView::RubberBand"/>
        </class>
        <class name="QColorAxis" href="qcoloraxis.html" status="active" access="public" location="qcoloraxis.h" since="6.2" documented="true" bases="QAbstractAxis" module="QtCharts" brief="Displays a color scale as one of the chart's axes">
            <function name="autoRange" fullname="QColorAxis::autoRange" href="qcoloraxis.html#autoRange-prop" status="active" access="public" location="qcoloraxis.h" meta="plain" const="true" associated-property="autoRange" type="bool" signature="bool autoRange() const"/>
            <function name="autoRangeChanged" fullname="QColorAxis::autoRangeChanged" href="qcoloraxis.html#autoRangeChanged" status="active" access="public" location="qcoloraxis.h" documented="true" meta="signal" associated-property="autoRange" type="void" signature="void autoRangeChanged(bool autoRange)">
                <parameter type="bool" name="autoRange" default=""/>
            </function>
            <function name="gradient" fullname="QColorAxis::gradient" href="qcoloraxis.html#gradient" status="active" access="public" location="qcoloraxis.h" documented="true" meta="plain" const="true" type="QLinearGradient" signature="QLinearGradient gradient() const"/>
            <function name="max" fullname="QColorAxis::max" href="qcoloraxis.html#max-prop" status="active" access="public" location="qcoloraxis.h" meta="plain" const="true" associated-property="max" type="qreal" signature="qreal max() const"/>
            <function name="maxChanged" fullname="QColorAxis::maxChanged" href="qcoloraxis.html#maxChanged" status="active" access="public" location="qcoloraxis.h" documented="true" meta="signal" associated-property="max" type="void" signature="void maxChanged(qreal max)">
                <parameter type="qreal" name="max" default=""/>
            </function>
            <function name="min" fullname="QColorAxis::min" href="qcoloraxis.html#min-prop" status="active" access="public" location="qcoloraxis.h" meta="plain" const="true" associated-property="min" type="qreal" signature="qreal min() const"/>
            <function name="minChanged" fullname="QColorAxis::minChanged" href="qcoloraxis.html#minChanged" status="active" access="public" location="qcoloraxis.h" documented="true" meta="signal" associated-property="min" type="void" signature="void minChanged(qreal min)">
                <parameter type="qreal" name="min" default=""/>
            </function>
            <function name="rangeChanged" fullname="QColorAxis::rangeChanged" href="qcoloraxis.html#rangeChanged" status="active" access="public" location="qcoloraxis.h" documented="true" meta="signal" type="void" signature="void rangeChanged(qreal min, qreal max)">
                <parameter type="qreal" name="min" default=""/>
                <parameter type="qreal" name="max" default=""/>
            </function>
            <function name="setAutoRange" fullname="QColorAxis::setAutoRange" href="qcoloraxis.html#autoRange-prop" status="active" access="public" location="qcoloraxis.h" meta="plain" associated-property="autoRange" type="void" signature="void setAutoRange(bool autoRange)">
                <parameter type="bool" name="autoRange" default=""/>
            </function>
            <function name="setGradient" fullname="QColorAxis::setGradient" href="qcoloraxis.html#setGradient" status="active" access="public" location="qcoloraxis.h" documented="true" meta="plain" type="void" signature="void setGradient(const QLinearGradient &amp;gradient)">
                <parameter type="const QLinearGradient &amp;" name="gradient" default=""/>
            </function>
            <function name="setMax" fullname="QColorAxis::setMax" href="qcoloraxis.html#max-prop" status="active" access="public" location="qcoloraxis.h" meta="plain" associated-property="max" type="void" signature="void setMax(qreal max)">
                <parameter type="qreal" name="max" default=""/>
            </function>
            <function name="setMin" fullname="QColorAxis::setMin" href="qcoloraxis.html#min-prop" status="active" access="public" location="qcoloraxis.h" meta="plain" associated-property="min" type="void" signature="void setMin(qreal min)">
                <parameter type="qreal" name="min" default=""/>
            </function>
            <function name="setSize" fullname="QColorAxis::setSize" href="qcoloraxis.html#size-prop" status="active" access="public" location="qcoloraxis.h" meta="plain" associated-property="size" type="void" signature="void setSize(const qreal size)">
                <parameter type="const qreal" name="size" default=""/>
            </function>
            <function name="setTickCount" fullname="QColorAxis::setTickCount" href="qcoloraxis.html#tickCount-prop" status="active" access="public" location="qcoloraxis.h" meta="plain" associated-property="tickCount" type="void" signature="void setTickCount(int count)">
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="size" fullname="QColorAxis::size" href="qcoloraxis.html#size-prop" status="active" access="public" location="qcoloraxis.h" meta="plain" const="true" associated-property="size" type="qreal" signature="qreal size() const"/>
            <function name="sizeChanged" fullname="QColorAxis::sizeChanged" href="qcoloraxis.html#size-prop" status="active" access="public" location="qcoloraxis.h" meta="signal" associated-property="size" type="void" signature="void sizeChanged(const qreal size)">
                <parameter type="const qreal" name="size" default=""/>
            </function>
            <function name="tickCount" fullname="QColorAxis::tickCount" href="qcoloraxis.html#tickCount-prop" status="active" access="public" location="qcoloraxis.h" meta="plain" const="true" associated-property="tickCount" type="int" signature="int tickCount() const"/>
            <function name="tickCountChanged" fullname="QColorAxis::tickCountChanged" href="qcoloraxis.html#tickCountChanged" status="active" access="public" location="qcoloraxis.h" documented="true" meta="signal" associated-property="tickCount" type="void" signature="void tickCountChanged(int tickCount)">
                <parameter type="int" name="tickCount" default=""/>
            </function>
            <function name="~QColorAxis" fullname="QColorAxis::~QColorAxis" href="qcoloraxis.html#dtor.QColorAxis" status="active" access="public" location="qcoloraxis.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QColorAxis()"/>
            <property name="autoRange" fullname="QColorAxis::autoRange" href="qcoloraxis.html#autoRange-prop" status="active" access="public" location="qcoloraxis.h" documented="true" brief="Property indicating if the range should be set from the list of values passed in QXYSeries::colorBy method or rather taken from the axis itself">
                <getter name="autoRange"/>
                <setter name="setAutoRange"/>
                <notifier name="autoRangeChanged"/>
            </property>
            <property name="max" fullname="QColorAxis::max" href="qcoloraxis.html#max-prop" status="active" access="public" location="qcoloraxis.h" documented="true" brief="Maximum value on the axis">
                <getter name="max"/>
                <setter name="setMax"/>
                <notifier name="maxChanged"/>
            </property>
            <property name="min" fullname="QColorAxis::min" href="qcoloraxis.html#min-prop" status="active" access="public" location="qcoloraxis.h" documented="true" brief="Minimum value on the axis">
                <getter name="min"/>
                <setter name="setMin"/>
                <notifier name="minChanged"/>
            </property>
            <property name="size" fullname="QColorAxis::size" href="qcoloraxis.html#size-prop" status="active" access="public" location="qcoloraxis.h" documented="true" brief="Of the color scale">
                <getter name="size"/>
                <setter name="setSize"/>
                <notifier name="sizeChanged"/>
            </property>
            <property name="tickCount" fullname="QColorAxis::tickCount" href="qcoloraxis.html#tickCount-prop" status="active" access="public" location="qcoloraxis.h" documented="true" brief="Number of tick marks on the axis. This indicates how many grid lines are drawn on the chart if QColorAxis::gridVisible is equal to true. The default value is 5, and the number cannot be less than 2">
                <getter name="tickCount"/>
                <setter name="setTickCount"/>
                <notifier name="tickCountChanged"/>
            </property>
        </class>
        <class name="QDateTimeAxis" href="qdatetimeaxis.html" status="active" access="public" location="qdatetimeaxis.h" documented="true" bases="QAbstractAxis" module="QtCharts" brief="Adds dates and times to a chart's axis">
            <function name="QDateTimeAxis" fullname="QDateTimeAxis::QDateTimeAxis" href="qdatetimeaxis.html#QDateTimeAxis" status="active" access="public" location="qdatetimeaxis.h" documented="true" meta="constructor" explicit="true" signature="QDateTimeAxis(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="format" fullname="QDateTimeAxis::format" href="qdatetimeaxis.html#format-prop" status="active" access="public" location="qdatetimeaxis.h" meta="plain" const="true" associated-property="format" type="QString" signature="QString format() const"/>
            <function name="formatChanged" fullname="QDateTimeAxis::formatChanged" href="qdatetimeaxis.html#formatChanged" status="active" access="public" location="qdatetimeaxis.h" documented="true" meta="signal" associated-property="format" type="void" signature="void formatChanged(QString format)">
                <parameter type="QString" name="format" default=""/>
            </function>
            <function name="max" fullname="QDateTimeAxis::max" href="qdatetimeaxis.html#max-prop" status="active" access="public" location="qdatetimeaxis.h" meta="plain" const="true" associated-property="max" type="QDateTime" signature="QDateTime max() const"/>
            <function name="maxChanged" fullname="QDateTimeAxis::maxChanged" href="qdatetimeaxis.html#maxChanged" status="active" access="public" location="qdatetimeaxis.h" documented="true" meta="signal" associated-property="max" type="void" signature="void maxChanged(QDateTime max)">
                <parameter type="QDateTime" name="max" default=""/>
            </function>
            <function name="min" fullname="QDateTimeAxis::min" href="qdatetimeaxis.html#min-prop" status="active" access="public" location="qdatetimeaxis.h" meta="plain" const="true" associated-property="min" type="QDateTime" signature="QDateTime min() const"/>
            <function name="minChanged" fullname="QDateTimeAxis::minChanged" href="qdatetimeaxis.html#minChanged" status="active" access="public" location="qdatetimeaxis.h" documented="true" meta="signal" associated-property="min" type="void" signature="void minChanged(QDateTime min)">
                <parameter type="QDateTime" name="min" default=""/>
            </function>
            <function name="rangeChanged" fullname="QDateTimeAxis::rangeChanged" href="qdatetimeaxis.html#rangeChanged" status="active" access="public" location="qdatetimeaxis.h" documented="true" meta="signal" type="void" signature="void rangeChanged(QDateTime min, QDateTime max)">
                <parameter type="QDateTime" name="min" default=""/>
                <parameter type="QDateTime" name="max" default=""/>
            </function>
            <function name="setFormat" fullname="QDateTimeAxis::setFormat" href="qdatetimeaxis.html#format-prop" status="active" access="public" location="qdatetimeaxis.h" meta="plain" associated-property="format" type="void" signature="void setFormat(QString format)">
                <parameter type="QString" name="format" default=""/>
            </function>
            <function name="setMax" fullname="QDateTimeAxis::setMax" href="qdatetimeaxis.html#max-prop" status="active" access="public" location="qdatetimeaxis.h" meta="plain" associated-property="max" type="void" signature="void setMax(QDateTime max)">
                <parameter type="QDateTime" name="max" default=""/>
            </function>
            <function name="setMin" fullname="QDateTimeAxis::setMin" href="qdatetimeaxis.html#min-prop" status="active" access="public" location="qdatetimeaxis.h" meta="plain" associated-property="min" type="void" signature="void setMin(QDateTime min)">
                <parameter type="QDateTime" name="min" default=""/>
            </function>
            <function name="setRange" fullname="QDateTimeAxis::setRange" href="qdatetimeaxis.html#setRange" status="active" access="public" location="qdatetimeaxis.h" documented="true" meta="plain" type="void" signature="void setRange(QDateTime min, QDateTime max)">
                <parameter type="QDateTime" name="min" default=""/>
                <parameter type="QDateTime" name="max" default=""/>
            </function>
            <function name="setTickCount" fullname="QDateTimeAxis::setTickCount" href="qdatetimeaxis.html#setTickCount" status="active" access="public" location="qdatetimeaxis.h" documented="true" meta="plain" associated-property="tickCount" type="void" signature="void setTickCount(int count)">
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="tickCount" fullname="QDateTimeAxis::tickCount" href="qdatetimeaxis.html#tickCount" status="active" access="public" location="qdatetimeaxis.h" documented="true" meta="plain" const="true" associated-property="tickCount" type="int" signature="int tickCount() const"/>
            <function name="tickCountChanged" fullname="QDateTimeAxis::tickCountChanged" href="qdatetimeaxis.html#tickCountChanged" status="active" access="public" location="qdatetimeaxis.h" documented="true" meta="signal" associated-property="tickCount" type="void" signature="void tickCountChanged(int tickCount)">
                <parameter type="int" name="tickCount" default=""/>
            </function>
            <function name="type" fullname="QDateTimeAxis::type" href="qdatetimeaxis.html#type" status="active" access="public" location="qdatetimeaxis.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractAxis::AxisType" signature="QAbstractAxis::AxisType type() const override"/>
            <function name="~QDateTimeAxis" fullname="QDateTimeAxis::~QDateTimeAxis" href="qdatetimeaxis.html#dtor.QDateTimeAxis" status="active" access="public" location="qdatetimeaxis.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QDateTimeAxis()"/>
            <property name="format" fullname="QDateTimeAxis::format" href="qdatetimeaxis.html#format-prop" status="active" access="public" location="qdatetimeaxis.h" documented="true" brief="String that is used when creating the label for the axis out of a QDateTime object">
                <getter name="format"/>
                <setter name="setFormat"/>
                <notifier name="formatChanged"/>
            </property>
            <property name="max" fullname="QDateTimeAxis::max" href="qdatetimeaxis.html#max-prop" status="active" access="public" location="qdatetimeaxis.h" documented="true" brief="Maximum value on the axis">
                <getter name="max"/>
                <setter name="setMax"/>
                <notifier name="maxChanged"/>
            </property>
            <property name="min" fullname="QDateTimeAxis::min" href="qdatetimeaxis.html#min-prop" status="active" access="public" location="qdatetimeaxis.h" documented="true" brief="Minimum value on the axis">
                <getter name="min"/>
                <setter name="setMin"/>
                <notifier name="minChanged"/>
            </property>
            <property name="tickCount" fullname="QDateTimeAxis::tickCount" href="qdatetimeaxis.html#tickCount-prop" status="active" access="public" location="qdatetimeaxis.h" documented="true" brief="Number of tick marks on the axis">
                <getter name="tickCount"/>
                <setter name="setTickCount"/>
                <notifier name="tickCountChanged"/>
            </property>
        </class>
        <class name="QHBarModelMapper" href="qhbarmodelmapper.html" status="active" access="public" location="qhbarmodelmapper.h" documented="true" module="QtCharts" brief="Horizontal model mapper for bar series">
            <function name="QHBarModelMapper" fullname="QHBarModelMapper::QHBarModelMapper" href="qhbarmodelmapper.html#QHBarModelMapper" status="active" access="public" location="qhbarmodelmapper.h" documented="true" meta="constructor" explicit="true" signature="QHBarModelMapper(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="columnCount" fullname="QHBarModelMapper::columnCount" href="qhbarmodelmapper.html#columnCount-prop" status="active" access="public" location="qhbarmodelmapper.h" meta="plain" const="true" associated-property="columnCount" type="int" signature="int columnCount() const"/>
            <function name="columnCountChanged" fullname="QHBarModelMapper::columnCountChanged" href="qhbarmodelmapper.html#columnCountChanged" status="active" access="public" location="qhbarmodelmapper.h" documented="true" meta="signal" associated-property="columnCount" type="void" signature="void columnCountChanged()"/>
            <function name="firstBarSetRow" fullname="QHBarModelMapper::firstBarSetRow" href="qhbarmodelmapper.html#firstBarSetRow-prop" status="active" access="public" location="qhbarmodelmapper.h" meta="plain" const="true" associated-property="firstBarSetRow" type="int" signature="int firstBarSetRow() const"/>
            <function name="firstBarSetRowChanged" fullname="QHBarModelMapper::firstBarSetRowChanged" href="qhbarmodelmapper.html#firstBarSetRowChanged" status="active" access="public" location="qhbarmodelmapper.h" documented="true" meta="signal" associated-property="firstBarSetRow" type="void" signature="void firstBarSetRowChanged()"/>
            <function name="firstColumn" fullname="QHBarModelMapper::firstColumn" href="qhbarmodelmapper.html#firstColumn-prop" status="active" access="public" location="qhbarmodelmapper.h" meta="plain" const="true" associated-property="firstColumn" type="int" signature="int firstColumn() const"/>
            <function name="firstColumnChanged" fullname="QHBarModelMapper::firstColumnChanged" href="qhbarmodelmapper.html#firstColumnChanged" status="active" access="public" location="qhbarmodelmapper.h" documented="true" meta="signal" associated-property="firstColumn" type="void" signature="void firstColumnChanged()"/>
            <function name="lastBarSetRow" fullname="QHBarModelMapper::lastBarSetRow" href="qhbarmodelmapper.html#lastBarSetRow-prop" status="active" access="public" location="qhbarmodelmapper.h" meta="plain" const="true" associated-property="lastBarSetRow" type="int" signature="int lastBarSetRow() const"/>
            <function name="lastBarSetRowChanged" fullname="QHBarModelMapper::lastBarSetRowChanged" href="qhbarmodelmapper.html#lastBarSetRowChanged" status="active" access="public" location="qhbarmodelmapper.h" documented="true" meta="signal" associated-property="lastBarSetRow" type="void" signature="void lastBarSetRowChanged()"/>
            <function name="model" fullname="QHBarModelMapper::model" href="qhbarmodelmapper.html#model-prop" status="active" access="public" location="qhbarmodelmapper.h" meta="plain" const="true" associated-property="model" type="QAbstractItemModel *" signature="QAbstractItemModel * model() const"/>
            <function name="modelReplaced" fullname="QHBarModelMapper::modelReplaced" href="qhbarmodelmapper.html#modelReplaced" status="active" access="public" location="qhbarmodelmapper.h" documented="true" meta="signal" associated-property="model" type="void" signature="void modelReplaced()"/>
            <function name="series" fullname="QHBarModelMapper::series" href="qhbarmodelmapper.html#series-prop" status="active" access="public" location="qhbarmodelmapper.h" meta="plain" const="true" associated-property="series" type="QAbstractBarSeries *" signature="QAbstractBarSeries * series() const"/>
            <function name="seriesReplaced" fullname="QHBarModelMapper::seriesReplaced" href="qhbarmodelmapper.html#seriesReplaced" status="active" access="public" location="qhbarmodelmapper.h" documented="true" meta="signal" associated-property="series" type="void" signature="void seriesReplaced()"/>
            <function name="setColumnCount" fullname="QHBarModelMapper::setColumnCount" href="qhbarmodelmapper.html#columnCount-prop" status="active" access="public" location="qhbarmodelmapper.h" meta="plain" associated-property="columnCount" type="void" signature="void setColumnCount(int columnCount)">
                <parameter type="int" name="columnCount" default=""/>
            </function>
            <function name="setFirstBarSetRow" fullname="QHBarModelMapper::setFirstBarSetRow" href="qhbarmodelmapper.html#firstBarSetRow-prop" status="active" access="public" location="qhbarmodelmapper.h" meta="plain" associated-property="firstBarSetRow" type="void" signature="void setFirstBarSetRow(int firstBarSetRow)">
                <parameter type="int" name="firstBarSetRow" default=""/>
            </function>
            <function name="setFirstColumn" fullname="QHBarModelMapper::setFirstColumn" href="qhbarmodelmapper.html#firstColumn-prop" status="active" access="public" location="qhbarmodelmapper.h" meta="plain" associated-property="firstColumn" type="void" signature="void setFirstColumn(int firstColumn)">
                <parameter type="int" name="firstColumn" default=""/>
            </function>
            <function name="setLastBarSetRow" fullname="QHBarModelMapper::setLastBarSetRow" href="qhbarmodelmapper.html#lastBarSetRow-prop" status="active" access="public" location="qhbarmodelmapper.h" meta="plain" associated-property="lastBarSetRow" type="void" signature="void setLastBarSetRow(int lastBarSetRow)">
                <parameter type="int" name="lastBarSetRow" default=""/>
            </function>
            <function name="setModel" fullname="QHBarModelMapper::setModel" href="qhbarmodelmapper.html#model-prop" status="active" access="public" location="qhbarmodelmapper.h" meta="plain" associated-property="model" type="void" signature="void setModel(QAbstractItemModel *model)">
                <parameter type="QAbstractItemModel *" name="model" default=""/>
            </function>
            <function name="setSeries" fullname="QHBarModelMapper::setSeries" href="qhbarmodelmapper.html#series-prop" status="active" access="public" location="qhbarmodelmapper.h" meta="plain" associated-property="series" type="void" signature="void setSeries(QAbstractBarSeries *series)">
                <parameter type="QAbstractBarSeries *" name="series" default=""/>
            </function>
            <property name="columnCount" fullname="QHBarModelMapper::columnCount" href="qhbarmodelmapper.html#columnCount-prop" status="active" access="public" location="qhbarmodelmapper.h" documented="true" brief="Number of columns of the model that are mapped as the data for the bar series">
                <getter name="columnCount"/>
                <setter name="setColumnCount"/>
                <notifier name="columnCountChanged"/>
            </property>
            <property name="firstBarSetRow" fullname="QHBarModelMapper::firstBarSetRow" href="qhbarmodelmapper.html#firstBarSetRow-prop" status="active" access="public" location="qhbarmodelmapper.h" documented="true" brief="Row of the model that is used as the data source for the first bar set">
                <getter name="firstBarSetRow"/>
                <setter name="setFirstBarSetRow"/>
                <notifier name="firstBarSetRowChanged"/>
            </property>
            <property name="firstColumn" fullname="QHBarModelMapper::firstColumn" href="qhbarmodelmapper.html#firstColumn-prop" status="active" access="public" location="qhbarmodelmapper.h" documented="true" brief="Column of the model that contains the first values of the bar sets in the bar series">
                <getter name="firstColumn"/>
                <setter name="setFirstColumn"/>
                <notifier name="firstColumnChanged"/>
            </property>
            <property name="lastBarSetRow" fullname="QHBarModelMapper::lastBarSetRow" href="qhbarmodelmapper.html#lastBarSetRow-prop" status="active" access="public" location="qhbarmodelmapper.h" documented="true" brief="Row of the model that is used as the data source for the last bar set">
                <getter name="lastBarSetRow"/>
                <setter name="setLastBarSetRow"/>
                <notifier name="lastBarSetRowChanged"/>
            </property>
            <property name="model" fullname="QHBarModelMapper::model" href="qhbarmodelmapper.html#model-prop" status="active" access="public" location="qhbarmodelmapper.h" documented="true" brief="Defines the model that is used by the mapper">
                <getter name="model"/>
                <setter name="setModel"/>
                <notifier name="modelReplaced"/>
            </property>
            <property name="series" fullname="QHBarModelMapper::series" href="qhbarmodelmapper.html#series-prop" status="active" access="public" location="qhbarmodelmapper.h" documented="true" brief="Bar series that is used by the mapper">
                <getter name="series"/>
                <setter name="setSeries"/>
                <notifier name="seriesReplaced"/>
            </property>
        </class>
        <class name="QHBoxPlotModelMapper" href="qhboxplotmodelmapper.html" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" module="QtCharts" brief="Horizontal model mapper for box plot series">
            <function name="QHBoxPlotModelMapper" fullname="QHBoxPlotModelMapper::QHBoxPlotModelMapper" href="qhboxplotmodelmapper.html#QHBoxPlotModelMapper" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" meta="constructor" explicit="true" signature="QHBoxPlotModelMapper(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="columnCount" fullname="QHBoxPlotModelMapper::columnCount" href="qhboxplotmodelmapper.html#columnCount-prop" status="active" access="public" location="qhboxplotmodelmapper.h" meta="plain" const="true" associated-property="columnCount" type="int" signature="int columnCount() const"/>
            <function name="columnCountChanged" fullname="QHBoxPlotModelMapper::columnCountChanged" href="qhboxplotmodelmapper.html#columnCountChanged" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" meta="signal" associated-property="columnCount" type="void" signature="void columnCountChanged()"/>
            <function name="firstBoxSetRow" fullname="QHBoxPlotModelMapper::firstBoxSetRow" href="qhboxplotmodelmapper.html#firstBoxSetRow-prop" status="active" access="public" location="qhboxplotmodelmapper.h" meta="plain" const="true" associated-property="firstBoxSetRow" type="int" signature="int firstBoxSetRow() const"/>
            <function name="firstBoxSetRowChanged" fullname="QHBoxPlotModelMapper::firstBoxSetRowChanged" href="qhboxplotmodelmapper.html#firstBoxSetRowChanged" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" meta="signal" associated-property="firstBoxSetRow" type="void" signature="void firstBoxSetRowChanged()"/>
            <function name="firstColumn" fullname="QHBoxPlotModelMapper::firstColumn" href="qhboxplotmodelmapper.html#firstColumn-prop" status="active" access="public" location="qhboxplotmodelmapper.h" meta="plain" const="true" associated-property="firstColumn" type="int" signature="int firstColumn() const"/>
            <function name="firstColumnChanged" fullname="QHBoxPlotModelMapper::firstColumnChanged" href="qhboxplotmodelmapper.html#firstColumnChanged" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" meta="signal" associated-property="firstColumn" type="void" signature="void firstColumnChanged()"/>
            <function name="lastBoxSetRow" fullname="QHBoxPlotModelMapper::lastBoxSetRow" href="qhboxplotmodelmapper.html#lastBoxSetRow-prop" status="active" access="public" location="qhboxplotmodelmapper.h" meta="plain" const="true" associated-property="lastBoxSetRow" type="int" signature="int lastBoxSetRow() const"/>
            <function name="lastBoxSetRowChanged" fullname="QHBoxPlotModelMapper::lastBoxSetRowChanged" href="qhboxplotmodelmapper.html#lastBoxSetRowChanged" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" meta="signal" associated-property="lastBoxSetRow" type="void" signature="void lastBoxSetRowChanged()"/>
            <function name="model" fullname="QHBoxPlotModelMapper::model" href="qhboxplotmodelmapper.html#model-prop" status="active" access="public" location="qhboxplotmodelmapper.h" meta="plain" const="true" associated-property="model" type="QAbstractItemModel *" signature="QAbstractItemModel * model() const"/>
            <function name="modelReplaced" fullname="QHBoxPlotModelMapper::modelReplaced" href="qhboxplotmodelmapper.html#modelReplaced" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" meta="signal" associated-property="model" type="void" signature="void modelReplaced()"/>
            <function name="series" fullname="QHBoxPlotModelMapper::series" href="qhboxplotmodelmapper.html#series-prop" status="active" access="public" location="qhboxplotmodelmapper.h" meta="plain" const="true" associated-property="series" type="QBoxPlotSeries *" signature="QBoxPlotSeries * series() const"/>
            <function name="seriesReplaced" fullname="QHBoxPlotModelMapper::seriesReplaced" href="qhboxplotmodelmapper.html#seriesReplaced" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" meta="signal" associated-property="series" type="void" signature="void seriesReplaced()"/>
            <function name="setColumnCount" fullname="QHBoxPlotModelMapper::setColumnCount" href="qhboxplotmodelmapper.html#columnCount-prop" status="active" access="public" location="qhboxplotmodelmapper.h" meta="plain" associated-property="columnCount" type="void" signature="void setColumnCount(int rowCount)">
                <parameter type="int" name="rowCount" default=""/>
            </function>
            <function name="setFirstBoxSetRow" fullname="QHBoxPlotModelMapper::setFirstBoxSetRow" href="qhboxplotmodelmapper.html#firstBoxSetRow-prop" status="active" access="public" location="qhboxplotmodelmapper.h" meta="plain" associated-property="firstBoxSetRow" type="void" signature="void setFirstBoxSetRow(int firstBoxSetRow)">
                <parameter type="int" name="firstBoxSetRow" default=""/>
            </function>
            <function name="setFirstColumn" fullname="QHBoxPlotModelMapper::setFirstColumn" href="qhboxplotmodelmapper.html#firstColumn-prop" status="active" access="public" location="qhboxplotmodelmapper.h" meta="plain" associated-property="firstColumn" type="void" signature="void setFirstColumn(int firstColumn)">
                <parameter type="int" name="firstColumn" default=""/>
            </function>
            <function name="setLastBoxSetRow" fullname="QHBoxPlotModelMapper::setLastBoxSetRow" href="qhboxplotmodelmapper.html#lastBoxSetRow-prop" status="active" access="public" location="qhboxplotmodelmapper.h" meta="plain" associated-property="lastBoxSetRow" type="void" signature="void setLastBoxSetRow(int lastBoxSetRow)">
                <parameter type="int" name="lastBoxSetRow" default=""/>
            </function>
            <function name="setModel" fullname="QHBoxPlotModelMapper::setModel" href="qhboxplotmodelmapper.html#model-prop" status="active" access="public" location="qhboxplotmodelmapper.h" meta="plain" associated-property="model" type="void" signature="void setModel(QAbstractItemModel *model)">
                <parameter type="QAbstractItemModel *" name="model" default=""/>
            </function>
            <function name="setSeries" fullname="QHBoxPlotModelMapper::setSeries" href="qhboxplotmodelmapper.html#series-prop" status="active" access="public" location="qhboxplotmodelmapper.h" meta="plain" associated-property="series" type="void" signature="void setSeries(QBoxPlotSeries *series)">
                <parameter type="QBoxPlotSeries *" name="series" default=""/>
            </function>
            <property name="columnCount" fullname="QHBoxPlotModelMapper::columnCount" href="qhboxplotmodelmapper.html#columnCount-prop" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" brief="Number of columns of the model that are mapped as the data for the box plot series">
                <getter name="columnCount"/>
                <setter name="setColumnCount"/>
                <notifier name="columnCountChanged"/>
            </property>
            <property name="firstBoxSetRow" fullname="QHBoxPlotModelMapper::firstBoxSetRow" href="qhboxplotmodelmapper.html#firstBoxSetRow-prop" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" brief="Row of the model that is used as the data source for the first box-and-whiskers item">
                <getter name="firstBoxSetRow"/>
                <setter name="setFirstBoxSetRow"/>
                <notifier name="firstBoxSetRowChanged"/>
            </property>
            <property name="firstColumn" fullname="QHBoxPlotModelMapper::firstColumn" href="qhboxplotmodelmapper.html#firstColumn-prop" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" brief="Column of the model that contains the first values of the box-and-whiskers items in the box plot series">
                <getter name="firstColumn"/>
                <setter name="setFirstColumn"/>
                <notifier name="firstColumnChanged"/>
            </property>
            <property name="lastBoxSetRow" fullname="QHBoxPlotModelMapper::lastBoxSetRow" href="qhboxplotmodelmapper.html#lastBoxSetRow-prop" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" brief="Row of the model that is used as the data source for the last box-and-whiskers item">
                <getter name="lastBoxSetRow"/>
                <setter name="setLastBoxSetRow"/>
                <notifier name="lastBoxSetRowChanged"/>
            </property>
            <property name="model" fullname="QHBoxPlotModelMapper::model" href="qhboxplotmodelmapper.html#model-prop" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" brief="That is used by the mapper">
                <getter name="model"/>
                <setter name="setModel"/>
                <notifier name="modelReplaced"/>
            </property>
            <property name="series" fullname="QHBoxPlotModelMapper::series" href="qhboxplotmodelmapper.html#series-prop" status="active" access="public" location="qhboxplotmodelmapper.h" documented="true" brief="Box plot series that is used by the mapper">
                <getter name="series"/>
                <setter name="setSeries"/>
                <notifier name="seriesReplaced"/>
            </property>
        </class>
        <class name="QHCandlestickModelMapper" href="qhcandlestickmodelmapper.html" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" bases="QCandlestickModelMapper" module="QtCharts" brief="Horizontal model mapper for a candlestick series">
            <function name="QHCandlestickModelMapper" fullname="QHCandlestickModelMapper::QHCandlestickModelMapper" href="qhcandlestickmodelmapper.html#QHCandlestickModelMapper" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" meta="constructor" explicit="true" signature="QHCandlestickModelMapper(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="closeColumn" fullname="QHCandlestickModelMapper::closeColumn" href="qhcandlestickmodelmapper.html#closeColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" const="true" associated-property="closeColumn" type="int" signature="int closeColumn() const"/>
            <function name="closeColumnChanged" fullname="QHCandlestickModelMapper::closeColumnChanged" href="qhcandlestickmodelmapper.html#closeColumnChanged" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="closeColumn" type="void" brief="Emitted when the column of the model that contains close values is changed" signature="void closeColumnChanged()"/>
            <function name="firstSetRow" fullname="QHCandlestickModelMapper::firstSetRow" href="qhcandlestickmodelmapper.html#firstSetRow-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" const="true" associated-property="firstSetRow" type="int" signature="int firstSetRow() const"/>
            <function name="firstSetRowChanged" fullname="QHCandlestickModelMapper::firstSetRowChanged" href="qhcandlestickmodelmapper.html#firstSetRowChanged" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="firstSetRow" type="void" brief="Emitted when the row of the model that contains the data of the first item is changed" signature="void firstSetRowChanged()"/>
            <function name="highColumn" fullname="QHCandlestickModelMapper::highColumn" href="qhcandlestickmodelmapper.html#highColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" const="true" associated-property="highColumn" type="int" signature="int highColumn() const"/>
            <function name="highColumnChanged" fullname="QHCandlestickModelMapper::highColumnChanged" href="qhcandlestickmodelmapper.html#highColumnChanged" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="highColumn" type="void" brief="Emitted when the column of the model that contains high values is changed" signature="void highColumnChanged()"/>
            <function name="lastSetRow" fullname="QHCandlestickModelMapper::lastSetRow" href="qhcandlestickmodelmapper.html#lastSetRow-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" const="true" associated-property="lastSetRow" type="int" signature="int lastSetRow() const"/>
            <function name="lastSetRowChanged" fullname="QHCandlestickModelMapper::lastSetRowChanged" href="qhcandlestickmodelmapper.html#lastSetRowChanged" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="lastSetRow" type="void" brief="Emitted when the row of the model that contains the data of the last item is changed" signature="void lastSetRowChanged()"/>
            <function name="lowColumn" fullname="QHCandlestickModelMapper::lowColumn" href="qhcandlestickmodelmapper.html#lowColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" const="true" associated-property="lowColumn" type="int" signature="int lowColumn() const"/>
            <function name="lowColumnChanged" fullname="QHCandlestickModelMapper::lowColumnChanged" href="qhcandlestickmodelmapper.html#lowColumnChanged" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="lowColumn" type="void" brief="Emitted when the column of the model that contains low values is changed" signature="void lowColumnChanged()"/>
            <function name="openColumn" fullname="QHCandlestickModelMapper::openColumn" href="qhcandlestickmodelmapper.html#openColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" const="true" associated-property="openColumn" type="int" signature="int openColumn() const"/>
            <function name="openColumnChanged" fullname="QHCandlestickModelMapper::openColumnChanged" href="qhcandlestickmodelmapper.html#openColumnChanged" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="openColumn" type="void" brief="Emitted when the column of the model that contains open values is changed" signature="void openColumnChanged()"/>
            <function name="orientation" fullname="QHCandlestickModelMapper::orientation" href="qhcandlestickmodelmapper.html#orientation" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="Qt::Orientation" signature="Qt::Orientation orientation() const override"/>
            <function name="setCloseColumn" fullname="QHCandlestickModelMapper::setCloseColumn" href="qhcandlestickmodelmapper.html#closeColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" associated-property="closeColumn" type="void" signature="void setCloseColumn(int closeColumn)">
                <parameter type="int" name="closeColumn" default=""/>
            </function>
            <function name="setFirstSetRow" fullname="QHCandlestickModelMapper::setFirstSetRow" href="qhcandlestickmodelmapper.html#firstSetRow-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" associated-property="firstSetRow" type="void" signature="void setFirstSetRow(int firstSetRow)">
                <parameter type="int" name="firstSetRow" default=""/>
            </function>
            <function name="setHighColumn" fullname="QHCandlestickModelMapper::setHighColumn" href="qhcandlestickmodelmapper.html#highColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" associated-property="highColumn" type="void" signature="void setHighColumn(int highColumn)">
                <parameter type="int" name="highColumn" default=""/>
            </function>
            <function name="setLastSetRow" fullname="QHCandlestickModelMapper::setLastSetRow" href="qhcandlestickmodelmapper.html#lastSetRow-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" associated-property="lastSetRow" type="void" signature="void setLastSetRow(int lastSetRow)">
                <parameter type="int" name="lastSetRow" default=""/>
            </function>
            <function name="setLowColumn" fullname="QHCandlestickModelMapper::setLowColumn" href="qhcandlestickmodelmapper.html#lowColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" associated-property="lowColumn" type="void" signature="void setLowColumn(int lowColumn)">
                <parameter type="int" name="lowColumn" default=""/>
            </function>
            <function name="setOpenColumn" fullname="QHCandlestickModelMapper::setOpenColumn" href="qhcandlestickmodelmapper.html#openColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" associated-property="openColumn" type="void" signature="void setOpenColumn(int openColumn)">
                <parameter type="int" name="openColumn" default=""/>
            </function>
            <function name="setTimestampColumn" fullname="QHCandlestickModelMapper::setTimestampColumn" href="qhcandlestickmodelmapper.html#timestampColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" associated-property="timestampColumn" type="void" signature="void setTimestampColumn(int timestampColumn)">
                <parameter type="int" name="timestampColumn" default=""/>
            </function>
            <function name="timestampColumn" fullname="QHCandlestickModelMapper::timestampColumn" href="qhcandlestickmodelmapper.html#timestampColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" meta="plain" const="true" associated-property="timestampColumn" type="int" signature="int timestampColumn() const"/>
            <function name="timestampColumnChanged" fullname="QHCandlestickModelMapper::timestampColumnChanged" href="qhcandlestickmodelmapper.html#timestampColumnChanged" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="timestampColumn" type="void" brief="Emitted when the column of the model that contains timestamp values is changed" signature="void timestampColumnChanged()"/>
            <property name="closeColumn" fullname="QHCandlestickModelMapper::closeColumn" href="qhcandlestickmodelmapper.html#closeColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" brief="Column of the model that contains the close values of the candlestick items in the series">
                <getter name="closeColumn"/>
                <setter name="setCloseColumn"/>
                <notifier name="closeColumnChanged"/>
            </property>
            <property name="firstSetRow" fullname="QHCandlestickModelMapper::firstSetRow" href="qhcandlestickmodelmapper.html#firstSetRow-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" brief="Row of the model that is used as the data source for the first item">
                <getter name="firstSetRow"/>
                <setter name="setFirstSetRow"/>
                <notifier name="firstSetRowChanged"/>
            </property>
            <property name="highColumn" fullname="QHCandlestickModelMapper::highColumn" href="qhcandlestickmodelmapper.html#highColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" brief="Column of the model that contains the high values of the candlestick items in the series">
                <getter name="highColumn"/>
                <setter name="setHighColumn"/>
                <notifier name="highColumnChanged"/>
            </property>
            <property name="lastSetRow" fullname="QHCandlestickModelMapper::lastSetRow" href="qhcandlestickmodelmapper.html#lastSetRow-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" brief="Row of the model that is used as the data source for the last item">
                <getter name="lastSetRow"/>
                <setter name="setLastSetRow"/>
                <notifier name="lastSetRowChanged"/>
            </property>
            <property name="lowColumn" fullname="QHCandlestickModelMapper::lowColumn" href="qhcandlestickmodelmapper.html#lowColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" brief="Column of the model that contains the low values of the candlestick items in the series">
                <getter name="lowColumn"/>
                <setter name="setLowColumn"/>
                <notifier name="lowColumnChanged"/>
            </property>
            <property name="openColumn" fullname="QHCandlestickModelMapper::openColumn" href="qhcandlestickmodelmapper.html#openColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" brief="Column of the model that contains the open values of the candlestick items in the series">
                <getter name="openColumn"/>
                <setter name="setOpenColumn"/>
                <notifier name="openColumnChanged"/>
            </property>
            <property name="timestampColumn" fullname="QHCandlestickModelMapper::timestampColumn" href="qhcandlestickmodelmapper.html#timestampColumn-prop" status="active" access="public" location="qhcandlestickmodelmapper.h" documented="true" brief="Column of the model that contains the timestamp values of the candlestick items in the series">
                <getter name="timestampColumn"/>
                <setter name="setTimestampColumn"/>
                <notifier name="timestampColumnChanged"/>
            </property>
        </class>
        <class name="QHPieModelMapper" href="qhpiemodelmapper.html" status="active" access="public" location="qhpiemodelmapper.h" documented="true" bases="QPieModelMapper" module="QtCharts" brief="Horizontal model mapper for pie series">
            <function name="QHPieModelMapper" fullname="QHPieModelMapper::QHPieModelMapper" href="qhpiemodelmapper.html#QHPieModelMapper" status="active" access="public" location="qhpiemodelmapper.h" documented="true" meta="constructor" explicit="true" signature="QHPieModelMapper(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="columnCount" fullname="QHPieModelMapper::columnCount" href="qhpiemodelmapper.html#columnCount-prop" status="active" access="public" location="qhpiemodelmapper.h" meta="plain" const="true" associated-property="columnCount" type="int" signature="int columnCount() const"/>
            <function name="columnCountChanged" fullname="QHPieModelMapper::columnCountChanged" href="qhpiemodelmapper.html#columnCountChanged" status="active" access="public" location="qhpiemodelmapper.h" documented="true" meta="signal" associated-property="columnCount" type="void" signature="void columnCountChanged()"/>
            <function name="firstColumn" fullname="QHPieModelMapper::firstColumn" href="qhpiemodelmapper.html#firstColumn-prop" status="active" access="public" location="qhpiemodelmapper.h" meta="plain" const="true" associated-property="firstColumn" type="int" signature="int firstColumn() const"/>
            <function name="firstColumnChanged" fullname="QHPieModelMapper::firstColumnChanged" href="qhpiemodelmapper.html#firstColumnChanged" status="active" access="public" location="qhpiemodelmapper.h" documented="true" meta="signal" associated-property="firstColumn" type="void" signature="void firstColumnChanged()"/>
            <function name="labelsRow" fullname="QHPieModelMapper::labelsRow" href="qhpiemodelmapper.html#labelsRow" status="active" access="public" location="qhpiemodelmapper.h" documented="true" meta="plain" const="true" associated-property="labelsRow" type="int" signature="int labelsRow() const"/>
            <function name="labelsRowChanged" fullname="QHPieModelMapper::labelsRowChanged" href="qhpiemodelmapper.html#labelsRowChanged" status="active" access="public" location="qhpiemodelmapper.h" documented="true" meta="signal" associated-property="labelsRow" type="void" signature="void labelsRowChanged()"/>
            <function name="model" fullname="QHPieModelMapper::model" href="qhpiemodelmapper.html#model-prop" status="active" access="public" location="qhpiemodelmapper.h" meta="plain" const="true" associated-property="model" type="QAbstractItemModel *" signature="QAbstractItemModel * model() const"/>
            <function name="modelReplaced" fullname="QHPieModelMapper::modelReplaced" href="qhpiemodelmapper.html#modelReplaced" status="active" access="public" location="qhpiemodelmapper.h" documented="true" meta="signal" associated-property="model" type="void" signature="void modelReplaced()"/>
            <function name="series" fullname="QHPieModelMapper::series" href="qhpiemodelmapper.html#series-prop" status="active" access="public" location="qhpiemodelmapper.h" meta="plain" const="true" associated-property="series" type="QPieSeries *" signature="QPieSeries * series() const"/>
            <function name="seriesReplaced" fullname="QHPieModelMapper::seriesReplaced" href="qhpiemodelmapper.html#seriesReplaced" status="active" access="public" location="qhpiemodelmapper.h" documented="true" meta="signal" associated-property="series" type="void" signature="void seriesReplaced()"/>
            <function name="setColumnCount" fullname="QHPieModelMapper::setColumnCount" href="qhpiemodelmapper.html#columnCount-prop" status="active" access="public" location="qhpiemodelmapper.h" meta="plain" associated-property="columnCount" type="void" signature="void setColumnCount(int columnCount)">
                <parameter type="int" name="columnCount" default=""/>
            </function>
            <function name="setFirstColumn" fullname="QHPieModelMapper::setFirstColumn" href="qhpiemodelmapper.html#firstColumn-prop" status="active" access="public" location="qhpiemodelmapper.h" meta="plain" associated-property="firstColumn" type="void" signature="void setFirstColumn(int firstColumn)">
                <parameter type="int" name="firstColumn" default=""/>
            </function>
            <function name="setLabelsRow" fullname="QHPieModelMapper::setLabelsRow" href="qhpiemodelmapper.html#setLabelsRow" status="active" access="public" location="qhpiemodelmapper.h" documented="true" meta="plain" associated-property="labelsRow" type="void" signature="void setLabelsRow(int labelsRow)">
                <parameter type="int" name="labelsRow" default=""/>
            </function>
            <function name="setModel" fullname="QHPieModelMapper::setModel" href="qhpiemodelmapper.html#model-prop" status="active" access="public" location="qhpiemodelmapper.h" meta="plain" associated-property="model" type="void" signature="void setModel(QAbstractItemModel *model)">
                <parameter type="QAbstractItemModel *" name="model" default=""/>
            </function>
            <function name="setSeries" fullname="QHPieModelMapper::setSeries" href="qhpiemodelmapper.html#series-prop" status="active" access="public" location="qhpiemodelmapper.h" meta="plain" associated-property="series" type="void" signature="void setSeries(QPieSeries *series)">
                <parameter type="QPieSeries *" name="series" default=""/>
            </function>
            <function name="setValuesRow" fullname="QHPieModelMapper::setValuesRow" href="qhpiemodelmapper.html#setValuesRow" status="active" access="public" location="qhpiemodelmapper.h" documented="true" meta="plain" associated-property="valuesRow" type="void" signature="void setValuesRow(int valuesRow)">
                <parameter type="int" name="valuesRow" default=""/>
            </function>
            <function name="valuesRow" fullname="QHPieModelMapper::valuesRow" href="qhpiemodelmapper.html#valuesRow" status="active" access="public" location="qhpiemodelmapper.h" documented="true" meta="plain" const="true" associated-property="valuesRow" type="int" signature="int valuesRow() const"/>
            <function name="valuesRowChanged" fullname="QHPieModelMapper::valuesRowChanged" href="qhpiemodelmapper.html#valuesRowChanged" status="active" access="public" location="qhpiemodelmapper.h" documented="true" meta="signal" associated-property="valuesRow" type="void" signature="void valuesRowChanged()"/>
            <property name="columnCount" fullname="QHPieModelMapper::columnCount" href="qhpiemodelmapper.html#columnCount-prop" status="active" access="public" location="qhpiemodelmapper.h" documented="true" brief="Number of columns of the model that are mapped as the data for the pie series">
                <getter name="columnCount"/>
                <setter name="setColumnCount"/>
                <notifier name="columnCountChanged"/>
            </property>
            <property name="firstColumn" fullname="QHPieModelMapper::firstColumn" href="qhpiemodelmapper.html#firstColumn-prop" status="active" access="public" location="qhpiemodelmapper.h" documented="true" brief="Column of the model that contains the first slice value">
                <getter name="firstColumn"/>
                <setter name="setFirstColumn"/>
                <notifier name="firstColumnChanged"/>
            </property>
            <property name="labelsRow" fullname="QHPieModelMapper::labelsRow" href="qhpiemodelmapper.html#labelsRow-prop" status="active" access="public" location="qhpiemodelmapper.h" documented="true" brief="Row of the model that is kept in sync with the labels of the pie's slices">
                <getter name="labelsRow"/>
                <setter name="setLabelsRow"/>
                <notifier name="labelsRowChanged"/>
            </property>
            <property name="model" fullname="QHPieModelMapper::model" href="qhpiemodelmapper.html#model-prop" status="active" access="public" location="qhpiemodelmapper.h" documented="true" brief="That is used by the mapper">
                <getter name="model"/>
                <setter name="setModel"/>
                <notifier name="modelReplaced"/>
            </property>
            <property name="series" fullname="QHPieModelMapper::series" href="qhpiemodelmapper.html#series-prop" status="active" access="public" location="qhpiemodelmapper.h" documented="true" brief="Pie series that is used by the mapper">
                <getter name="series"/>
                <setter name="setSeries"/>
                <notifier name="seriesReplaced"/>
            </property>
            <property name="valuesRow" fullname="QHPieModelMapper::valuesRow" href="qhpiemodelmapper.html#valuesRow-prop" status="active" access="public" location="qhpiemodelmapper.h" documented="true" brief="Row of the model that is kept in sync with the values of the pie's slices">
                <getter name="valuesRow"/>
                <setter name="setValuesRow"/>
                <notifier name="valuesRowChanged"/>
            </property>
        </class>
        <class name="QHXYModelMapper" href="qhxymodelmapper.html" status="active" access="public" location="qhxymodelmapper.h" documented="true" bases="QXYModelMapper" module="QtCharts" brief="Horizontal model mapper for line, spline, and scatter series">
            <function name="QHXYModelMapper" fullname="QHXYModelMapper::QHXYModelMapper" href="qhxymodelmapper.html#QHXYModelMapper" status="active" access="public" location="qhxymodelmapper.h" documented="true" meta="constructor" explicit="true" signature="QHXYModelMapper(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="columnCount" fullname="QHXYModelMapper::columnCount" href="qhxymodelmapper.html#columnCount-prop" status="active" access="public" location="qhxymodelmapper.h" meta="plain" const="true" associated-property="columnCount" type="int" signature="int columnCount() const"/>
            <function name="columnCountChanged" fullname="QHXYModelMapper::columnCountChanged" href="qhxymodelmapper.html#columnCountChanged" status="active" access="public" location="qhxymodelmapper.h" documented="true" meta="signal" associated-property="columnCount" type="void" signature="void columnCountChanged()"/>
            <function name="firstColumn" fullname="QHXYModelMapper::firstColumn" href="qhxymodelmapper.html#firstColumn-prop" status="active" access="public" location="qhxymodelmapper.h" meta="plain" const="true" associated-property="firstColumn" type="int" signature="int firstColumn() const"/>
            <function name="firstColumnChanged" fullname="QHXYModelMapper::firstColumnChanged" href="qhxymodelmapper.html#firstColumnChanged" status="active" access="public" location="qhxymodelmapper.h" documented="true" meta="signal" associated-property="firstColumn" type="void" signature="void firstColumnChanged()"/>
            <function name="model" fullname="QHXYModelMapper::model" href="qhxymodelmapper.html#model-prop" status="active" access="public" location="qhxymodelmapper.h" meta="plain" const="true" associated-property="model" type="QAbstractItemModel *" signature="QAbstractItemModel * model() const"/>
            <function name="modelReplaced" fullname="QHXYModelMapper::modelReplaced" href="qhxymodelmapper.html#modelReplaced" status="active" access="public" location="qhxymodelmapper.h" documented="true" meta="signal" associated-property="model" type="void" signature="void modelReplaced()"/>
            <function name="series" fullname="QHXYModelMapper::series" href="qhxymodelmapper.html#series-prop" status="active" access="public" location="qhxymodelmapper.h" meta="plain" const="true" associated-property="series" type="QXYSeries *" signature="QXYSeries * series() const"/>
            <function name="seriesReplaced" fullname="QHXYModelMapper::seriesReplaced" href="qhxymodelmapper.html#seriesReplaced" status="active" access="public" location="qhxymodelmapper.h" documented="true" meta="signal" associated-property="series" type="void" signature="void seriesReplaced()"/>
            <function name="setColumnCount" fullname="QHXYModelMapper::setColumnCount" href="qhxymodelmapper.html#columnCount-prop" status="active" access="public" location="qhxymodelmapper.h" meta="plain" associated-property="columnCount" type="void" signature="void setColumnCount(int columnCount)">
                <parameter type="int" name="columnCount" default=""/>
            </function>
            <function name="setFirstColumn" fullname="QHXYModelMapper::setFirstColumn" href="qhxymodelmapper.html#firstColumn-prop" status="active" access="public" location="qhxymodelmapper.h" meta="plain" associated-property="firstColumn" type="void" signature="void setFirstColumn(int firstColumn)">
                <parameter type="int" name="firstColumn" default=""/>
            </function>
            <function name="setModel" fullname="QHXYModelMapper::setModel" href="qhxymodelmapper.html#model-prop" status="active" access="public" location="qhxymodelmapper.h" meta="plain" associated-property="model" type="void" signature="void setModel(QAbstractItemModel *model)">
                <parameter type="QAbstractItemModel *" name="model" default=""/>
            </function>
            <function name="setSeries" fullname="QHXYModelMapper::setSeries" href="qhxymodelmapper.html#series-prop" status="active" access="public" location="qhxymodelmapper.h" meta="plain" associated-property="series" type="void" signature="void setSeries(QXYSeries *series)">
                <parameter type="QXYSeries *" name="series" default=""/>
            </function>
            <function name="setXRow" fullname="QHXYModelMapper::setXRow" href="qhxymodelmapper.html#xRow-prop" status="active" access="public" location="qhxymodelmapper.h" meta="plain" associated-property="xRow" type="void" signature="void setXRow(int xRow)">
                <parameter type="int" name="xRow" default=""/>
            </function>
            <function name="setYRow" fullname="QHXYModelMapper::setYRow" href="qhxymodelmapper.html#yRow-prop" status="active" access="public" location="qhxymodelmapper.h" meta="plain" associated-property="yRow" type="void" signature="void setYRow(int yRow)">
                <parameter type="int" name="yRow" default=""/>
            </function>
            <function name="xRow" fullname="QHXYModelMapper::xRow" href="qhxymodelmapper.html#xRow-prop" status="active" access="public" location="qhxymodelmapper.h" meta="plain" const="true" associated-property="xRow" type="int" signature="int xRow() const"/>
            <function name="xRowChanged" fullname="QHXYModelMapper::xRowChanged" href="qhxymodelmapper.html#xRowChanged" status="active" access="public" location="qhxymodelmapper.h" documented="true" meta="signal" associated-property="xRow" type="void" signature="void xRowChanged()"/>
            <function name="yRow" fullname="QHXYModelMapper::yRow" href="qhxymodelmapper.html#yRow-prop" status="active" access="public" location="qhxymodelmapper.h" meta="plain" const="true" associated-property="yRow" type="int" signature="int yRow() const"/>
            <function name="yRowChanged" fullname="QHXYModelMapper::yRowChanged" href="qhxymodelmapper.html#yRowChanged" status="active" access="public" location="qhxymodelmapper.h" documented="true" meta="signal" associated-property="yRow" type="void" signature="void yRowChanged()"/>
            <property name="columnCount" fullname="QHXYModelMapper::columnCount" href="qhxymodelmapper.html#columnCount-prop" status="active" access="public" location="qhxymodelmapper.h" documented="true" brief="Number of columns of the model that are mapped as the data for series">
                <getter name="columnCount"/>
                <setter name="setColumnCount"/>
                <notifier name="columnCountChanged"/>
            </property>
            <property name="firstColumn" fullname="QHXYModelMapper::firstColumn" href="qhxymodelmapper.html#firstColumn-prop" status="active" access="public" location="qhxymodelmapper.h" documented="true" brief="Column of the model that contains the data for the first point of the series">
                <getter name="firstColumn"/>
                <setter name="setFirstColumn"/>
                <notifier name="firstColumnChanged"/>
            </property>
            <property name="model" fullname="QHXYModelMapper::model" href="qhxymodelmapper.html#model-prop" status="active" access="public" location="qhxymodelmapper.h" documented="true" brief="That is used by the mapper">
                <getter name="model"/>
                <setter name="setModel"/>
                <notifier name="modelReplaced"/>
            </property>
            <property name="series" fullname="QHXYModelMapper::series" href="qhxymodelmapper.html#series-prop" status="active" access="public" location="qhxymodelmapper.h" documented="true" brief="That is used by the mapper">
                <getter name="series"/>
                <setter name="setSeries"/>
                <notifier name="seriesReplaced"/>
            </property>
            <property name="xRow" fullname="QHXYModelMapper::xRow" href="qhxymodelmapper.html#xRow-prop" status="active" access="public" location="qhxymodelmapper.h" documented="true" brief="Row of the model that contains the x-coordinates of the data points">
                <getter name="xRow"/>
                <setter name="setXRow"/>
                <notifier name="xRowChanged"/>
            </property>
            <property name="yRow" fullname="QHXYModelMapper::yRow" href="qhxymodelmapper.html#yRow-prop" status="active" access="public" location="qhxymodelmapper.h" documented="true" brief="Row of the model that contains the y-coordinates of the data points">
                <getter name="yRow"/>
                <setter name="setYRow"/>
                <notifier name="yRowChanged"/>
            </property>
        </class>
        <class name="QHorizontalBarSeries" href="qhorizontalbarseries.html" status="active" access="public" location="qhorizontalbarseries.h" documented="true" bases="QAbstractBarSeries" module="QtCharts" brief="Presents a series of data as horizontal bars grouped by category">
            <function name="QHorizontalBarSeries" fullname="QHorizontalBarSeries::QHorizontalBarSeries" href="qhorizontalbarseries.html#QHorizontalBarSeries" status="active" access="public" location="qhorizontalbarseries.h" documented="true" meta="constructor" explicit="true" signature="QHorizontalBarSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="type" fullname="QHorizontalBarSeries::type" href="qhorizontalbarseries.html#type" status="active" access="public" location="qhorizontalbarseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="~QHorizontalBarSeries" fullname="QHorizontalBarSeries::~QHorizontalBarSeries" href="qhorizontalbarseries.html#dtor.QHorizontalBarSeries" status="active" access="public" location="qhorizontalbarseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QHorizontalBarSeries()"/>
        </class>
        <class name="QHorizontalPercentBarSeries" href="qhorizontalpercentbarseries.html" status="active" access="public" location="qhorizontalpercentbarseries.h" documented="true" bases="QAbstractBarSeries" module="QtCharts" brief="Presents a series of categorized data as a percentage of each category">
            <function name="QHorizontalPercentBarSeries" fullname="QHorizontalPercentBarSeries::QHorizontalPercentBarSeries" href="qhorizontalpercentbarseries.html#QHorizontalPercentBarSeries" status="active" access="public" location="qhorizontalpercentbarseries.h" documented="true" meta="constructor" explicit="true" signature="QHorizontalPercentBarSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="type" fullname="QHorizontalPercentBarSeries::type" href="qhorizontalpercentbarseries.html#type" status="active" access="public" location="qhorizontalpercentbarseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="~QHorizontalPercentBarSeries" fullname="QHorizontalPercentBarSeries::~QHorizontalPercentBarSeries" href="qhorizontalpercentbarseries.html#dtor.QHorizontalPercentBarSeries" status="active" access="public" location="qhorizontalpercentbarseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QHorizontalPercentBarSeries()"/>
        </class>
        <class name="QHorizontalStackedBarSeries" href="qhorizontalstackedbarseries.html" status="active" access="public" location="qhorizontalstackedbarseries.h" documented="true" bases="QAbstractBarSeries" module="QtCharts" brief="Presents a series of data as horizontally stacked bars, with one bar per category">
            <function name="QHorizontalStackedBarSeries" fullname="QHorizontalStackedBarSeries::QHorizontalStackedBarSeries" href="qhorizontalstackedbarseries.html#QHorizontalStackedBarSeries" status="active" access="public" location="qhorizontalstackedbarseries.h" documented="true" meta="constructor" explicit="true" signature="QHorizontalStackedBarSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="type" fullname="QHorizontalStackedBarSeries::type" href="qhorizontalstackedbarseries.html#type" status="active" access="public" location="qhorizontalstackedbarseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="~QHorizontalStackedBarSeries" fullname="QHorizontalStackedBarSeries::~QHorizontalStackedBarSeries" href="qhorizontalstackedbarseries.html#dtor.QHorizontalStackedBarSeries" status="active" access="public" location="qhorizontalstackedbarseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QHorizontalStackedBarSeries()"/>
        </class>
        <class name="QLegend" href="qlegend.html" status="active" access="public" location="qlegend.h" documented="true" bases="QGraphicsWidget" module="QtCharts" brief="Displays the legend of a chart">
            <function name="alignment" fullname="QLegend::alignment" href="qlegend.html#alignment-prop" status="active" access="public" location="qlegend.h" meta="plain" const="true" associated-property="alignment" type="Qt::Alignment" signature="Qt::Alignment alignment() const"/>
            <function name="attachToChart" fullname="QLegend::attachToChart" href="qlegend.html#attachToChart" status="active" access="public" location="qlegend.h" documented="true" meta="plain" type="void" signature="void attachToChart()"/>
            <function name="attachedToChartChanged" fullname="QLegend::attachedToChartChanged" href="qlegend.html#attachedToChartChanged" status="active" access="public" location="qlegend.h" documented="true" since="6.2" meta="signal" type="void" signature="void attachedToChartChanged(bool attached)">
                <parameter type="bool" name="attached" default=""/>
            </function>
            <function name="backgroundVisibleChanged" fullname="QLegend::backgroundVisibleChanged" href="qlegend.html#backgroundVisibleChanged" status="active" access="public" location="qlegend.h" documented="true" meta="signal" associated-property="backgroundVisible" type="void" signature="void backgroundVisibleChanged(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="borderColor" fullname="QLegend::borderColor" href="qlegend.html#borderColor-prop" status="active" access="public" location="qlegend.h" meta="plain" associated-property="borderColor" type="QColor" signature="QColor borderColor()"/>
            <function name="borderColorChanged" fullname="QLegend::borderColorChanged" href="qlegend.html#borderColorChanged" status="active" access="public" location="qlegend.h" documented="true" meta="signal" associated-property="borderColor" type="void" signature="void borderColorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="brush" fullname="QLegend::brush" href="qlegend.html#brush" status="active" access="public" location="qlegend.h" documented="true" meta="plain" const="true" type="QBrush" signature="QBrush brush() const"/>
            <function name="color" fullname="QLegend::color" href="qlegend.html#color-prop" status="active" access="public" location="qlegend.h" meta="plain" associated-property="color" type="QColor" signature="QColor color()"/>
            <function name="colorChanged" fullname="QLegend::colorChanged" href="qlegend.html#colorChanged" status="active" access="public" location="qlegend.h" documented="true" meta="signal" associated-property="color" type="void" signature="void colorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="detachFromChart" fullname="QLegend::detachFromChart" href="qlegend.html#detachFromChart" status="active" access="public" location="qlegend.h" documented="true" meta="plain" type="void" signature="void detachFromChart()"/>
            <function name="font" fullname="QLegend::font" href="qlegend.html#font-prop" status="active" access="public" location="qlegend.h" meta="plain" const="true" associated-property="font" type="QFont" signature="QFont font() const"/>
            <function name="fontChanged" fullname="QLegend::fontChanged" href="qlegend.html#fontChanged" status="active" access="public" location="qlegend.h" documented="true" meta="signal" associated-property="font" type="void" signature="void fontChanged(QFont font)">
                <parameter type="QFont" name="font" default=""/>
            </function>
            <function name="isAttachedToChart" fullname="QLegend::isAttachedToChart" href="qlegend.html#isAttachedToChart" status="active" access="public" location="qlegend.h" documented="true" meta="plain" type="bool" signature="bool isAttachedToChart()"/>
            <function name="isBackgroundVisible" fullname="QLegend::isBackgroundVisible" href="qlegend.html#isBackgroundVisible" status="active" access="public" location="qlegend.h" documented="true" meta="plain" const="true" associated-property="backgroundVisible" type="bool" signature="bool isBackgroundVisible() const"/>
            <function name="isInteractive" fullname="QLegend::isInteractive" href="qlegend.html#isInteractive" status="active" access="public" location="qlegend.h" documented="true" since="6.2" meta="plain" const="true" type="bool" signature="bool isInteractive() const"/>
            <function name="labelBrush" fullname="QLegend::labelBrush" href="qlegend.html#labelBrush" status="active" access="public" location="qlegend.h" documented="true" meta="plain" const="true" type="QBrush" signature="QBrush labelBrush() const"/>
            <function name="labelColor" fullname="QLegend::labelColor" href="qlegend.html#labelColor-prop" status="active" access="public" location="qlegend.h" meta="plain" const="true" associated-property="labelColor" type="QColor" signature="QColor labelColor() const"/>
            <function name="labelColorChanged" fullname="QLegend::labelColorChanged" href="qlegend.html#labelColorChanged" status="active" access="public" location="qlegend.h" documented="true" meta="signal" associated-property="labelColor" type="void" signature="void labelColorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="markerShape" fullname="QLegend::markerShape" href="qlegend.html#markerShape-prop" status="active" access="public" location="qlegend.h" meta="plain" const="true" associated-property="markerShape" type="QLegend::MarkerShape" signature="QLegend::MarkerShape markerShape() const"/>
            <function name="markerShapeChanged" fullname="QLegend::markerShapeChanged" href="qlegend.html#markerShape-prop" status="active" access="public" location="qlegend.h" meta="signal" associated-property="markerShape" type="void" signature="void markerShapeChanged(QLegend::MarkerShape shape)">
                <parameter type="QLegend::MarkerShape" name="shape" default=""/>
            </function>
            <function name="markers" fullname="QLegend::markers" href="qlegend.html#markers" status="active" access="public" location="qlegend.h" documented="true" meta="plain" const="true" type="QList&lt;QLegendMarker *&gt;" signature="QList&lt;QLegendMarker *&gt; markers(QAbstractSeries *series) const">
                <parameter type="QAbstractSeries *" name="series" default="nullptr"/>
            </function>
            <function name="pen" fullname="QLegend::pen" href="qlegend.html#pen" status="active" access="public" location="qlegend.h" documented="true" meta="plain" const="true" type="QPen" signature="QPen pen() const"/>
            <function name="reverseMarkers" fullname="QLegend::reverseMarkers" href="qlegend.html#reverseMarkers-prop" status="active" access="public" location="qlegend.h" meta="plain" associated-property="reverseMarkers" type="bool" signature="bool reverseMarkers()"/>
            <function name="reverseMarkersChanged" fullname="QLegend::reverseMarkersChanged" href="qlegend.html#reverseMarkersChanged" status="active" access="public" location="qlegend.h" documented="true" meta="signal" associated-property="reverseMarkers" type="void" signature="void reverseMarkersChanged(bool reverseMarkers)">
                <parameter type="bool" name="reverseMarkers" default=""/>
            </function>
            <function name="setAlignment" fullname="QLegend::setAlignment" href="qlegend.html#alignment-prop" status="active" access="public" location="qlegend.h" meta="plain" associated-property="alignment" type="void" signature="void setAlignment(Qt::Alignment alignment)">
                <parameter type="Qt::Alignment" name="alignment" default=""/>
            </function>
            <function name="setBackgroundVisible" fullname="QLegend::setBackgroundVisible" href="qlegend.html#setBackgroundVisible" status="active" access="public" location="qlegend.h" documented="true" meta="plain" associated-property="backgroundVisible" type="void" signature="void setBackgroundVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setBorderColor" fullname="QLegend::setBorderColor" href="qlegend.html#borderColor-prop" status="active" access="public" location="qlegend.h" meta="plain" associated-property="borderColor" type="void" signature="void setBorderColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setBrush" fullname="QLegend::setBrush" href="qlegend.html#setBrush" status="active" access="public" location="qlegend.h" documented="true" meta="plain" type="void" signature="void setBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setColor" fullname="QLegend::setColor" href="qlegend.html#color-prop" status="active" access="public" location="qlegend.h" meta="plain" associated-property="color" type="void" signature="void setColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setFont" fullname="QLegend::setFont" href="qlegend.html#font-prop" status="active" access="public" location="qlegend.h" meta="plain" associated-property="font" type="void" signature="void setFont(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="setInteractive" fullname="QLegend::setInteractive" href="qlegend.html#setInteractive" status="active" access="public" location="qlegend.h" documented="true" since="6.2" meta="plain" type="void" signature="void setInteractive(bool interactive)">
                <parameter type="bool" name="interactive" default=""/>
            </function>
            <function name="setLabelBrush" fullname="QLegend::setLabelBrush" href="qlegend.html#setLabelBrush" status="active" access="public" location="qlegend.h" documented="true" meta="plain" type="void" signature="void setLabelBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setLabelColor" fullname="QLegend::setLabelColor" href="qlegend.html#labelColor-prop" status="active" access="public" location="qlegend.h" meta="plain" associated-property="labelColor" type="void" signature="void setLabelColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setMarkerShape" fullname="QLegend::setMarkerShape" href="qlegend.html#markerShape-prop" status="active" access="public" location="qlegend.h" meta="plain" associated-property="markerShape" type="void" signature="void setMarkerShape(QLegend::MarkerShape shape)">
                <parameter type="QLegend::MarkerShape" name="shape" default=""/>
            </function>
            <function name="setPen" fullname="QLegend::setPen" href="qlegend.html#setPen" status="active" access="public" location="qlegend.h" documented="true" meta="plain" type="void" signature="void setPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setReverseMarkers" fullname="QLegend::setReverseMarkers" href="qlegend.html#reverseMarkers-prop" status="active" access="public" location="qlegend.h" meta="plain" associated-property="reverseMarkers" type="void" signature="void setReverseMarkers(bool reverseMarkers)">
                <parameter type="bool" name="reverseMarkers" default="true"/>
            </function>
            <function name="setShowToolTips" fullname="QLegend::setShowToolTips" href="qlegend.html#setShowToolTips" status="active" access="public" location="qlegend.h" documented="true" meta="plain" associated-property="showToolTips" type="void" signature="void setShowToolTips(bool show)">
                <parameter type="bool" name="show" default=""/>
            </function>
            <function name="showToolTips" fullname="QLegend::showToolTips" href="qlegend.html#showToolTips" status="active" access="public" location="qlegend.h" documented="true" meta="plain" const="true" associated-property="showToolTips" type="bool" signature="bool showToolTips() const"/>
            <function name="showToolTipsChanged" fullname="QLegend::showToolTipsChanged" href="qlegend.html#showToolTipsChanged" status="active" access="public" location="qlegend.h" documented="true" meta="signal" associated-property="showToolTips" type="void" signature="void showToolTipsChanged(bool showToolTips)">
                <parameter type="bool" name="showToolTips" default=""/>
            </function>
            <function name="~QLegend" fullname="QLegend::~QLegend" href="qlegend.html#dtor.QLegend" status="active" access="public" location="qlegend.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QLegend()"/>
            <enum name="MarkerShape" fullname="QLegend::MarkerShape" href="qlegend.html#MarkerShape-enum" status="active" access="public" location="qlegend.h" documented="true">
                <value name="MarkerShapeDefault" value="0"/>
                <value name="MarkerShapeRectangle" value="1"/>
                <value name="MarkerShapeCircle" value="2"/>
                <value name="MarkerShapeFromSeries" value="3"/>
                <value name="MarkerShapeRotatedRectangle" value="4"/>
                <value name="MarkerShapeTriangle" value="5"/>
                <value name="MarkerShapeStar" value="6"/>
                <value name="MarkerShapePentagon" value="7"/>
            </enum>
            <property name="alignment" fullname="QLegend::alignment" href="qlegend.html#alignment-prop" status="active" access="public" location="qlegend.h" documented="true" brief="How the legend is aligned with the chart">
                <getter name="alignment"/>
                <setter name="setAlignment"/>
            </property>
            <property name="backgroundVisible" fullname="QLegend::backgroundVisible" href="qlegend.html#backgroundVisible-prop" status="active" access="public" location="qlegend.h" documented="true" brief="Whether the legend background is visible">
                <getter name="isBackgroundVisible"/>
                <setter name="setBackgroundVisible"/>
                <notifier name="backgroundVisibleChanged"/>
            </property>
            <property name="borderColor" fullname="QLegend::borderColor" href="qlegend.html#borderColor-prop" status="active" access="public" location="qlegend.h" documented="true" brief="Line color of the legend">
                <getter name="borderColor"/>
                <setter name="setBorderColor"/>
                <notifier name="borderColorChanged"/>
            </property>
            <property name="color" fullname="QLegend::color" href="qlegend.html#color-prop" status="active" access="public" location="qlegend.h" documented="true" brief="Background (brush) color of the legend">
                <getter name="color"/>
                <setter name="setColor"/>
                <notifier name="colorChanged"/>
            </property>
            <property name="font" fullname="QLegend::font" href="qlegend.html#font-prop" status="active" access="public" location="qlegend.h" documented="true" brief="Of the markers used by the legend">
                <getter name="font"/>
                <setter name="setFont"/>
                <notifier name="fontChanged"/>
            </property>
            <property name="labelColor" fullname="QLegend::labelColor" href="qlegend.html#labelColor-prop" status="active" access="public" location="qlegend.h" documented="true" brief="Color of the brush used to draw labels">
                <getter name="labelColor"/>
                <setter name="setLabelColor"/>
                <notifier name="labelColorChanged"/>
            </property>
            <property name="markerShape" fullname="QLegend::markerShape" href="qlegend.html#markerShape-prop" status="active" access="public" location="qlegend.h" documented="true">
                <getter name="markerShape"/>
                <setter name="setMarkerShape"/>
                <notifier name="markerShapeChanged"/>
            </property>
            <property name="reverseMarkers" fullname="QLegend::reverseMarkers" href="qlegend.html#reverseMarkers-prop" status="active" access="public" location="qlegend.h" documented="true" brief="Whether reverse order is used for the markers in the legend">
                <getter name="reverseMarkers"/>
                <setter name="setReverseMarkers"/>
                <notifier name="reverseMarkersChanged"/>
            </property>
            <property name="showToolTips" fullname="QLegend::showToolTips" href="qlegend.html#showToolTips-prop" status="active" access="public" location="qlegend.h" documented="true" brief="Whether tooltips are shown when the text is truncated">
                <getter name="showToolTips"/>
                <setter name="setShowToolTips"/>
                <notifier name="showToolTipsChanged"/>
            </property>
        </class>
        <class name="QLegendMarker" href="qlegendmarker.html" status="active" access="public" location="qlegendmarker.h" documented="true" bases="QObject" module="QtCharts" brief="Abstract object that can be used to access markers within a legend">
            <function name="brush" fullname="QLegendMarker::brush" href="qlegendmarker.html#brush" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" const="true" associated-property="brush" type="QBrush" signature="QBrush brush() const"/>
            <function name="brushChanged" fullname="QLegendMarker::brushChanged" href="qlegendmarker.html#brushChanged" status="active" access="public" location="qlegendmarker.h" documented="true" meta="signal" associated-property="brush" type="void" signature="void brushChanged()"/>
            <function name="clicked" fullname="QLegendMarker::clicked" href="qlegendmarker.html#clicked" status="active" access="public" location="qlegendmarker.h" documented="true" meta="signal" type="void" signature="void clicked()"/>
            <function name="font" fullname="QLegendMarker::font" href="qlegendmarker.html#font" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" const="true" associated-property="font" type="QFont" signature="QFont font() const"/>
            <function name="fontChanged" fullname="QLegendMarker::fontChanged" href="qlegendmarker.html#fontChanged" status="active" access="public" location="qlegendmarker.h" documented="true" meta="signal" associated-property="font" type="void" signature="void fontChanged()"/>
            <function name="hovered" fullname="QLegendMarker::hovered" href="qlegendmarker.html#hovered" status="active" access="public" location="qlegendmarker.h" documented="true" meta="signal" type="void" signature="void hovered(bool status)">
                <parameter type="bool" name="status" default=""/>
            </function>
            <function name="isVisible" fullname="QLegendMarker::isVisible" href="qlegendmarker.html#isVisible" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" const="true" associated-property="visible" type="bool" signature="bool isVisible() const"/>
            <function name="label" fullname="QLegendMarker::label" href="qlegendmarker.html#label" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" const="true" associated-property="label" type="QString" signature="QString label() const"/>
            <function name="labelBrush" fullname="QLegendMarker::labelBrush" href="qlegendmarker.html#labelBrush" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" const="true" associated-property="labelBrush" type="QBrush" signature="QBrush labelBrush() const"/>
            <function name="labelBrushChanged" fullname="QLegendMarker::labelBrushChanged" href="qlegendmarker.html#labelBrushChanged" status="active" access="public" location="qlegendmarker.h" documented="true" meta="signal" associated-property="labelBrush" type="void" signature="void labelBrushChanged()"/>
            <function name="labelChanged" fullname="QLegendMarker::labelChanged" href="qlegendmarker.html#labelChanged" status="active" access="public" location="qlegendmarker.h" documented="true" meta="signal" associated-property="label" type="void" signature="void labelChanged()"/>
            <function name="pen" fullname="QLegendMarker::pen" href="qlegendmarker.html#pen" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" const="true" associated-property="pen" type="QPen" signature="QPen pen() const"/>
            <function name="penChanged" fullname="QLegendMarker::penChanged" href="qlegendmarker.html#penChanged" status="active" access="public" location="qlegendmarker.h" documented="true" meta="signal" associated-property="pen" type="void" signature="void penChanged()"/>
            <function name="series" fullname="QLegendMarker::series" href="qlegendmarker.html#series" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" virtual="pure" type="QAbstractSeries *" signature="QAbstractSeries * series() = 0"/>
            <function name="setBrush" fullname="QLegendMarker::setBrush" href="qlegendmarker.html#setBrush" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" associated-property="brush" type="void" signature="void setBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setFont" fullname="QLegendMarker::setFont" href="qlegendmarker.html#setFont" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" associated-property="font" type="void" signature="void setFont(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="setLabel" fullname="QLegendMarker::setLabel" href="qlegendmarker.html#setLabel" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" associated-property="label" type="void" signature="void setLabel(const QString &amp;label)">
                <parameter type="const QString &amp;" name="label" default=""/>
            </function>
            <function name="setLabelBrush" fullname="QLegendMarker::setLabelBrush" href="qlegendmarker.html#setLabelBrush" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" associated-property="labelBrush" type="void" signature="void setLabelBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setPen" fullname="QLegendMarker::setPen" href="qlegendmarker.html#setPen" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" associated-property="pen" type="void" signature="void setPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setShape" fullname="QLegendMarker::setShape" href="qlegendmarker.html#shape-prop" status="active" access="public" location="qlegendmarker.h" meta="plain" associated-property="shape" type="void" signature="void setShape(QLegend::MarkerShape shape)">
                <parameter type="QLegend::MarkerShape" name="shape" default=""/>
            </function>
            <function name="setVisible" fullname="QLegendMarker::setVisible" href="qlegendmarker.html#setVisible" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" associated-property="visible" type="void" signature="void setVisible(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="shape" fullname="QLegendMarker::shape" href="qlegendmarker.html#shape-prop" status="active" access="public" location="qlegendmarker.h" meta="plain" const="true" associated-property="shape" type="QLegend::MarkerShape" signature="QLegend::MarkerShape shape() const"/>
            <function name="shapeChanged" fullname="QLegendMarker::shapeChanged" href="qlegendmarker.html#shape-prop" status="active" access="public" location="qlegendmarker.h" meta="signal" associated-property="shape" type="void" signature="void shapeChanged()"/>
            <function name="type" fullname="QLegendMarker::type" href="qlegendmarker.html#type" status="active" access="public" location="qlegendmarker.h" documented="true" meta="plain" virtual="pure" type="QLegendMarker::LegendMarkerType" signature="QLegendMarker::LegendMarkerType type() = 0"/>
            <function name="visibleChanged" fullname="QLegendMarker::visibleChanged" href="qlegendmarker.html#visibleChanged" status="active" access="public" location="qlegendmarker.h" documented="true" meta="signal" associated-property="visible" type="void" signature="void visibleChanged()"/>
            <function name="~QLegendMarker" fullname="QLegendMarker::~QLegendMarker" href="qlegendmarker.html#dtor.QLegendMarker" status="active" access="public" location="qlegendmarker.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QLegendMarker()"/>
            <enum name="LegendMarkerType" fullname="QLegendMarker::LegendMarkerType" href="qlegendmarker.html#LegendMarkerType-enum" status="active" access="public" location="qlegendmarker.h" documented="true">
                <value name="LegendMarkerTypeArea" value="0"/>
                <value name="LegendMarkerTypeBar" value="1"/>
                <value name="LegendMarkerTypePie" value="2"/>
                <value name="LegendMarkerTypeXY" value="3"/>
                <value name="LegendMarkerTypeBoxPlot" value="4"/>
                <value name="LegendMarkerTypeCandlestick" value="5"/>
            </enum>
            <property name="brush" fullname="QLegendMarker::brush" href="qlegendmarker.html#brush-prop" status="active" access="public" location="qlegendmarker.h" documented="true" brief="Used to fill the icon">
                <getter name="brush"/>
                <setter name="setBrush"/>
                <notifier name="brushChanged"/>
            </property>
            <property name="font" fullname="QLegendMarker::font" href="qlegendmarker.html#font-prop" status="active" access="public" location="qlegendmarker.h" documented="true" brief="Of the label">
                <getter name="font"/>
                <setter name="setFont"/>
                <notifier name="fontChanged"/>
            </property>
            <property name="label" fullname="QLegendMarker::label" href="qlegendmarker.html#label-prop" status="active" access="public" location="qlegendmarker.h" documented="true" brief="Text shown in the legend for a legend marker">
                <getter name="label"/>
                <setter name="setLabel"/>
                <notifier name="labelChanged"/>
            </property>
            <property name="labelBrush" fullname="QLegendMarker::labelBrush" href="qlegendmarker.html#labelBrush-prop" status="active" access="public" location="qlegendmarker.h" documented="true" brief="Brush of the label">
                <getter name="labelBrush"/>
                <setter name="setLabelBrush"/>
                <notifier name="labelBrushChanged"/>
            </property>
            <property name="pen" fullname="QLegendMarker::pen" href="qlegendmarker.html#pen-prop" status="active" access="public" location="qlegendmarker.h" documented="true" brief="Used to draw the outline of the icon">
                <getter name="pen"/>
                <setter name="setPen"/>
                <notifier name="penChanged"/>
            </property>
            <property name="shape" fullname="QLegendMarker::shape" href="qlegendmarker.html#shape-prop" status="active" access="public" location="qlegendmarker.h" documented="true">
                <getter name="shape"/>
                <setter name="setShape"/>
                <notifier name="shapeChanged"/>
            </property>
            <property name="visible" fullname="QLegendMarker::visible" href="qlegendmarker.html#visible-prop" status="active" access="public" location="qlegendmarker.h" documented="true" brief="Visibility of the legend marker">
                <getter name="isVisible"/>
                <setter name="setVisible"/>
                <notifier name="visibleChanged"/>
            </property>
        </class>
        <class name="QLineSeries" href="qlineseries.html" status="active" access="public" location="qlineseries.h" documented="true" bases="QXYSeries" module="QtCharts" brief="Presents data in line charts">
            <function name="QLineSeries" fullname="QLineSeries::QLineSeries" href="qlineseries.html#QLineSeries" status="active" access="public" location="qlineseries.h" documented="true" meta="constructor" explicit="true" signature="QLineSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="type" fullname="QLineSeries::type" href="qlineseries.html#type" status="active" access="public" location="qlineseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="~QLineSeries" fullname="QLineSeries::~QLineSeries" href="qlineseries.html#dtor.QLineSeries" status="active" access="public" location="qlineseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QLineSeries()"/>
        </class>
        <class name="QLogValueAxis" href="qlogvalueaxis.html" status="active" access="public" location="qlogvalueaxis.h" documented="true" bases="QAbstractAxis" module="QtCharts" brief="Adds a logarithmic scale to a chart's axis">
            <function name="QLogValueAxis" fullname="QLogValueAxis::QLogValueAxis" href="qlogvalueaxis.html#QLogValueAxis" status="active" access="public" location="qlogvalueaxis.h" documented="true" meta="constructor" explicit="true" signature="QLogValueAxis(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="base" fullname="QLogValueAxis::base" href="qlogvalueaxis.html#base-prop" status="active" access="public" location="qlogvalueaxis.h" meta="plain" const="true" associated-property="base" type="qreal" signature="qreal base() const"/>
            <function name="baseChanged" fullname="QLogValueAxis::baseChanged" href="qlogvalueaxis.html#baseChanged" status="active" access="public" location="qlogvalueaxis.h" documented="true" meta="signal" associated-property="base" type="void" signature="void baseChanged(qreal base)">
                <parameter type="qreal" name="base" default=""/>
            </function>
            <function name="labelFormat" fullname="QLogValueAxis::labelFormat" href="qlogvalueaxis.html#labelFormat-prop" status="active" access="public" location="qlogvalueaxis.h" meta="plain" const="true" associated-property="labelFormat" type="QString" signature="QString labelFormat() const"/>
            <function name="labelFormatChanged" fullname="QLogValueAxis::labelFormatChanged" href="qlogvalueaxis.html#labelFormatChanged" status="active" access="public" location="qlogvalueaxis.h" documented="true" meta="signal" associated-property="labelFormat" type="void" signature="void labelFormatChanged(const QString &amp;format)">
                <parameter type="const QString &amp;" name="format" default=""/>
            </function>
            <function name="max" fullname="QLogValueAxis::max" href="qlogvalueaxis.html#max-prop" status="active" access="public" location="qlogvalueaxis.h" meta="plain" const="true" associated-property="max" type="qreal" signature="qreal max() const"/>
            <function name="maxChanged" fullname="QLogValueAxis::maxChanged" href="qlogvalueaxis.html#maxChanged" status="active" access="public" location="qlogvalueaxis.h" documented="true" meta="signal" associated-property="max" type="void" signature="void maxChanged(qreal max)">
                <parameter type="qreal" name="max" default=""/>
            </function>
            <function name="min" fullname="QLogValueAxis::min" href="qlogvalueaxis.html#min-prop" status="active" access="public" location="qlogvalueaxis.h" meta="plain" const="true" associated-property="min" type="qreal" signature="qreal min() const"/>
            <function name="minChanged" fullname="QLogValueAxis::minChanged" href="qlogvalueaxis.html#minChanged" status="active" access="public" location="qlogvalueaxis.h" documented="true" meta="signal" associated-property="min" type="void" signature="void minChanged(qreal min)">
                <parameter type="qreal" name="min" default=""/>
            </function>
            <function name="minorTickCount" fullname="QLogValueAxis::minorTickCount" href="qlogvalueaxis.html#minorTickCount-prop" status="active" access="public" location="qlogvalueaxis.h" meta="plain" const="true" associated-property="minorTickCount" type="int" signature="int minorTickCount() const"/>
            <function name="minorTickCountChanged" fullname="QLogValueAxis::minorTickCountChanged" href="qlogvalueaxis.html#minorTickCountChanged" status="active" access="public" location="qlogvalueaxis.h" documented="true" meta="signal" associated-property="minorTickCount" type="void" signature="void minorTickCountChanged(int minorTickCount)">
                <parameter type="int" name="minorTickCount" default=""/>
            </function>
            <function name="rangeChanged" fullname="QLogValueAxis::rangeChanged" href="qlogvalueaxis.html#rangeChanged" status="active" access="public" location="qlogvalueaxis.h" documented="true" meta="signal" type="void" signature="void rangeChanged(qreal min, qreal max)">
                <parameter type="qreal" name="min" default=""/>
                <parameter type="qreal" name="max" default=""/>
            </function>
            <function name="setBase" fullname="QLogValueAxis::setBase" href="qlogvalueaxis.html#base-prop" status="active" access="public" location="qlogvalueaxis.h" meta="plain" associated-property="base" type="void" signature="void setBase(qreal base)">
                <parameter type="qreal" name="base" default=""/>
            </function>
            <function name="setLabelFormat" fullname="QLogValueAxis::setLabelFormat" href="qlogvalueaxis.html#labelFormat-prop" status="active" access="public" location="qlogvalueaxis.h" meta="plain" associated-property="labelFormat" type="void" signature="void setLabelFormat(const QString &amp;format)">
                <parameter type="const QString &amp;" name="format" default=""/>
            </function>
            <function name="setMax" fullname="QLogValueAxis::setMax" href="qlogvalueaxis.html#max-prop" status="active" access="public" location="qlogvalueaxis.h" meta="plain" associated-property="max" type="void" signature="void setMax(qreal max)">
                <parameter type="qreal" name="max" default=""/>
            </function>
            <function name="setMin" fullname="QLogValueAxis::setMin" href="qlogvalueaxis.html#min-prop" status="active" access="public" location="qlogvalueaxis.h" meta="plain" associated-property="min" type="void" signature="void setMin(qreal min)">
                <parameter type="qreal" name="min" default=""/>
            </function>
            <function name="setMinorTickCount" fullname="QLogValueAxis::setMinorTickCount" href="qlogvalueaxis.html#minorTickCount-prop" status="active" access="public" location="qlogvalueaxis.h" meta="plain" associated-property="minorTickCount" type="void" signature="void setMinorTickCount(int minorTickCount)">
                <parameter type="int" name="minorTickCount" default=""/>
            </function>
            <function name="setRange" fullname="QLogValueAxis::setRange" href="qlogvalueaxis.html#setRange" status="active" access="public" location="qlogvalueaxis.h" documented="true" meta="plain" type="void" signature="void setRange(qreal min, qreal max)">
                <parameter type="qreal" name="min" default=""/>
                <parameter type="qreal" name="max" default=""/>
            </function>
            <function name="tickCount" fullname="QLogValueAxis::tickCount" href="qlogvalueaxis.html#tickCount-prop" status="active" access="public" location="qlogvalueaxis.h" meta="plain" const="true" associated-property="tickCount" type="int" signature="int tickCount() const"/>
            <function name="tickCountChanged" fullname="QLogValueAxis::tickCountChanged" href="qlogvalueaxis.html#tickCountChanged" status="active" access="public" location="qlogvalueaxis.h" documented="true" meta="signal" associated-property="tickCount" type="void" signature="void tickCountChanged(int tickCount)">
                <parameter type="int" name="tickCount" default=""/>
            </function>
            <function name="type" fullname="QLogValueAxis::type" href="qlogvalueaxis.html#type" status="active" access="public" location="qlogvalueaxis.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractAxis::AxisType" signature="QAbstractAxis::AxisType type() const override"/>
            <function name="~QLogValueAxis" fullname="QLogValueAxis::~QLogValueAxis" href="qlogvalueaxis.html#dtor.QLogValueAxis" status="active" access="public" location="qlogvalueaxis.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QLogValueAxis()"/>
            <property name="base" fullname="QLogValueAxis::base" href="qlogvalueaxis.html#base-prop" status="active" access="public" location="qlogvalueaxis.h" documented="true" brief="Of the logarithm">
                <getter name="base"/>
                <setter name="setBase"/>
                <notifier name="baseChanged"/>
            </property>
            <property name="labelFormat" fullname="QLogValueAxis::labelFormat" href="qlogvalueaxis.html#labelFormat-prop" status="active" access="public" location="qlogvalueaxis.h" documented="true" brief="Label format of the axis">
                <getter name="labelFormat"/>
                <setter name="setLabelFormat"/>
                <notifier name="labelFormatChanged"/>
            </property>
            <property name="max" fullname="QLogValueAxis::max" href="qlogvalueaxis.html#max-prop" status="active" access="public" location="qlogvalueaxis.h" documented="true" brief="Maximum value on the axis">
                <getter name="max"/>
                <setter name="setMax"/>
                <notifier name="maxChanged"/>
            </property>
            <property name="min" fullname="QLogValueAxis::min" href="qlogvalueaxis.html#min-prop" status="active" access="public" location="qlogvalueaxis.h" documented="true" brief="Minimum value on the axis">
                <getter name="min"/>
                <setter name="setMin"/>
                <notifier name="minChanged"/>
            </property>
            <property name="minorTickCount" fullname="QLogValueAxis::minorTickCount" href="qlogvalueaxis.html#minorTickCount-prop" status="active" access="public" location="qlogvalueaxis.h" documented="true" brief="Number of minor tick marks on the axis. This indicates how many grid lines are drawn between major ticks on the chart. Labels are not drawn for minor ticks. The default value is 0. Set the value to -1 and the number of grid lines between major ticks will be calculated automatically">
                <getter name="minorTickCount"/>
                <setter name="setMinorTickCount"/>
                <notifier name="minorTickCountChanged"/>
            </property>
            <property name="tickCount" fullname="QLogValueAxis::tickCount" href="qlogvalueaxis.html#tickCount-prop" status="active" access="public" location="qlogvalueaxis.h" documented="true" writable="false" brief="Number of tick marks on the axis. This indicates how many grid lines are drawn on the chart. This value is read-only">
                <getter name="tickCount"/>
                <notifier name="tickCountChanged"/>
            </property>
        </class>
        <class name="QPercentBarSeries" href="qpercentbarseries.html" status="active" access="public" location="qpercentbarseries.h" documented="true" bases="QAbstractBarSeries" module="QtCharts" brief="Presents a series of categorized data as a percentage of each category">
            <function name="QPercentBarSeries" fullname="QPercentBarSeries::QPercentBarSeries" href="qpercentbarseries.html#QPercentBarSeries" status="active" access="public" location="qpercentbarseries.h" documented="true" meta="constructor" explicit="true" signature="QPercentBarSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="type" fullname="QPercentBarSeries::type" href="qpercentbarseries.html#type" status="active" access="public" location="qpercentbarseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="~QPercentBarSeries" fullname="QPercentBarSeries::~QPercentBarSeries" href="qpercentbarseries.html#dtor.QPercentBarSeries" status="active" access="public" location="qpercentbarseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QPercentBarSeries()"/>
        </class>
        <class name="QPieLegendMarker" href="qpielegendmarker.html" status="active" access="public" location="qpielegendmarker.h" documented="true" bases="QLegendMarker" module="QtCharts" brief="Legend marker for a pie series">
            <function name="series" fullname="QPieLegendMarker::series" href="qpielegendmarker.html#series" status="active" access="public" location="qpielegendmarker.h" documented="true" meta="plain" virtual="virtual" override="true" type="QPieSeries *" signature="QPieSeries * series() override"/>
            <function name="slice" fullname="QPieLegendMarker::slice" href="qpielegendmarker.html#slice" status="active" access="public" location="qpielegendmarker.h" documented="true" meta="plain" type="QPieSlice *" signature="QPieSlice * slice()"/>
            <function name="type" fullname="QPieLegendMarker::type" href="qpielegendmarker.html#type" status="active" access="public" location="qpielegendmarker.h" documented="true" meta="plain" virtual="virtual" override="true" type="QLegendMarker::LegendMarkerType" signature="QLegendMarker::LegendMarkerType type() override"/>
            <function name="~QPieLegendMarker" fullname="QPieLegendMarker::~QPieLegendMarker" href="qpielegendmarker.html#dtor.QPieLegendMarker" status="active" access="public" location="qpielegendmarker.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QPieLegendMarker()"/>
        </class>
        <class name="QPieSeries" href="qpieseries.html" status="active" access="public" location="qpieseries.h" documented="true" bases="QAbstractSeries" module="QtCharts" brief="Presents data in pie charts">
            <function name="QPieSeries" fullname="QPieSeries::QPieSeries" href="qpieseries.html#QPieSeries" status="active" access="public" location="qpieseries.h" documented="true" meta="constructor" explicit="true" signature="QPieSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="added" fullname="QPieSeries::added" href="qpieseries.html#added" status="active" access="public" location="qpieseries.h" documented="true" meta="signal" type="void" signature="void added(const QList&lt;QPieSlice *&gt; &amp;slices)">
                <parameter type="const QList&lt;QPieSlice *&gt; &amp;" name="slices" default=""/>
            </function>
            <function name="append" fullname="QPieSeries::append" href="qpieseries.html#append" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" type="bool" signature="bool append(QPieSlice *slice)">
                <parameter type="QPieSlice *" name="slice" default=""/>
            </function>
            <function name="append" fullname="QPieSeries::append" href="qpieseries.html#append-1" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" overload="true" overload-number="1" type="bool" signature="bool append(const QList&lt;QPieSlice *&gt; &amp;slices)">
                <parameter type="const QList&lt;QPieSlice *&gt; &amp;" name="slices" default=""/>
            </function>
            <function name="append" fullname="QPieSeries::append" href="qpieseries.html#append-2" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" overload="true" overload-number="2" type="QPieSlice *" signature="QPieSlice * append(const QString &amp;label, qreal value)">
                <parameter type="const QString &amp;" name="label" default=""/>
                <parameter type="qreal" name="value" default=""/>
            </function>
            <function name="clear" fullname="QPieSeries::clear" href="qpieseries.html#clear" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" type="void" signature="void clear()"/>
            <function name="clicked" fullname="QPieSeries::clicked" href="qpieseries.html#clicked" status="active" access="public" location="qpieseries.h" documented="true" meta="signal" type="void" signature="void clicked(QPieSlice *slice)">
                <parameter type="QPieSlice *" name="slice" default=""/>
            </function>
            <function name="count" fullname="QPieSeries::count" href="qpieseries.html#count" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" const="true" associated-property="count" type="int" signature="int count() const"/>
            <function name="countChanged" fullname="QPieSeries::countChanged" href="qpieseries.html#countChanged" status="active" access="public" location="qpieseries.h" documented="true" meta="signal" associated-property="count" type="void" signature="void countChanged()"/>
            <function name="doubleClicked" fullname="QPieSeries::doubleClicked" href="qpieseries.html#doubleClicked" status="active" access="public" location="qpieseries.h" documented="true" meta="signal" type="void" signature="void doubleClicked(QPieSlice *slice)">
                <parameter type="QPieSlice *" name="slice" default=""/>
            </function>
            <function name="holeSize" fullname="QPieSeries::holeSize" href="qpieseries.html#holeSize-prop" status="active" access="public" location="qpieseries.h" meta="plain" const="true" associated-property="holeSize" type="qreal" signature="qreal holeSize() const"/>
            <function name="horizontalPosition" fullname="QPieSeries::horizontalPosition" href="qpieseries.html#horizontalPosition-prop" status="active" access="public" location="qpieseries.h" meta="plain" const="true" associated-property="horizontalPosition" type="qreal" signature="qreal horizontalPosition() const"/>
            <function name="hovered" fullname="QPieSeries::hovered" href="qpieseries.html#hovered" status="active" access="public" location="qpieseries.h" documented="true" meta="signal" type="void" signature="void hovered(QPieSlice *slice, bool state)">
                <parameter type="QPieSlice *" name="slice" default=""/>
                <parameter type="bool" name="state" default=""/>
            </function>
            <function name="insert" fullname="QPieSeries::insert" href="qpieseries.html#insert" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" type="bool" signature="bool insert(int index, QPieSlice *slice)">
                <parameter type="int" name="index" default=""/>
                <parameter type="QPieSlice *" name="slice" default=""/>
            </function>
            <function name="isEmpty" fullname="QPieSeries::isEmpty" href="qpieseries.html#isEmpty" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" const="true" type="bool" signature="bool isEmpty() const"/>
            <function name="operator&lt;&lt;" fullname="QPieSeries::operator&lt;&lt;" href="qpieseries.html#operator-lt-lt" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" type="QPieSeries &amp;" signature="QPieSeries &amp; operator&lt;&lt;(QPieSlice *slice)">
                <parameter type="QPieSlice *" name="slice" default=""/>
            </function>
            <function name="pieEndAngle" fullname="QPieSeries::pieEndAngle" href="qpieseries.html#pieEndAngle" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" const="true" associated-property="endAngle" type="qreal" signature="qreal pieEndAngle() const"/>
            <function name="pieSize" fullname="QPieSeries::pieSize" href="qpieseries.html#size-prop" status="active" access="public" location="qpieseries.h" meta="plain" const="true" associated-property="size" type="qreal" signature="qreal pieSize() const"/>
            <function name="pieStartAngle" fullname="QPieSeries::pieStartAngle" href="qpieseries.html#startAngle-prop" status="active" access="public" location="qpieseries.h" meta="plain" const="true" associated-property="startAngle" type="qreal" signature="qreal pieStartAngle() const"/>
            <function name="pressed" fullname="QPieSeries::pressed" href="qpieseries.html#pressed" status="active" access="public" location="qpieseries.h" documented="true" meta="signal" type="void" signature="void pressed(QPieSlice *slice)">
                <parameter type="QPieSlice *" name="slice" default=""/>
            </function>
            <function name="released" fullname="QPieSeries::released" href="qpieseries.html#released" status="active" access="public" location="qpieseries.h" documented="true" meta="signal" type="void" signature="void released(QPieSlice *slice)">
                <parameter type="QPieSlice *" name="slice" default=""/>
            </function>
            <function name="remove" fullname="QPieSeries::remove" href="qpieseries.html#remove" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" type="bool" signature="bool remove(QPieSlice *slice)">
                <parameter type="QPieSlice *" name="slice" default=""/>
            </function>
            <function name="removed" fullname="QPieSeries::removed" href="qpieseries.html#removed" status="active" access="public" location="qpieseries.h" documented="true" meta="signal" type="void" signature="void removed(const QList&lt;QPieSlice *&gt; &amp;slices)">
                <parameter type="const QList&lt;QPieSlice *&gt; &amp;" name="slices" default=""/>
            </function>
            <function name="setHoleSize" fullname="QPieSeries::setHoleSize" href="qpieseries.html#holeSize-prop" status="active" access="public" location="qpieseries.h" meta="plain" associated-property="holeSize" type="void" signature="void setHoleSize(qreal holeSize)">
                <parameter type="qreal" name="holeSize" default=""/>
            </function>
            <function name="setHorizontalPosition" fullname="QPieSeries::setHorizontalPosition" href="qpieseries.html#horizontalPosition-prop" status="active" access="public" location="qpieseries.h" meta="plain" associated-property="horizontalPosition" type="void" signature="void setHorizontalPosition(qreal relativePosition)">
                <parameter type="qreal" name="relativePosition" default=""/>
            </function>
            <function name="setLabelsPosition" fullname="QPieSeries::setLabelsPosition" href="qpieseries.html#setLabelsPosition" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" type="void" signature="void setLabelsPosition(QPieSlice::LabelPosition position)">
                <parameter type="QPieSlice::LabelPosition" name="position" default=""/>
            </function>
            <function name="setLabelsVisible" fullname="QPieSeries::setLabelsVisible" href="qpieseries.html#setLabelsVisible" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" type="void" signature="void setLabelsVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setPieEndAngle" fullname="QPieSeries::setPieEndAngle" href="qpieseries.html#setPieEndAngle" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" associated-property="endAngle" type="void" signature="void setPieEndAngle(qreal angle)">
                <parameter type="qreal" name="angle" default=""/>
            </function>
            <function name="setPieSize" fullname="QPieSeries::setPieSize" href="qpieseries.html#size-prop" status="active" access="public" location="qpieseries.h" meta="plain" associated-property="size" type="void" signature="void setPieSize(qreal relativeSize)">
                <parameter type="qreal" name="relativeSize" default=""/>
            </function>
            <function name="setPieStartAngle" fullname="QPieSeries::setPieStartAngle" href="qpieseries.html#startAngle-prop" status="active" access="public" location="qpieseries.h" meta="plain" associated-property="startAngle" type="void" signature="void setPieStartAngle(qreal startAngle)">
                <parameter type="qreal" name="startAngle" default=""/>
            </function>
            <function name="setVerticalPosition" fullname="QPieSeries::setVerticalPosition" href="qpieseries.html#verticalPosition-prop" status="active" access="public" location="qpieseries.h" meta="plain" associated-property="verticalPosition" type="void" signature="void setVerticalPosition(qreal relativePosition)">
                <parameter type="qreal" name="relativePosition" default=""/>
            </function>
            <function name="slices" fullname="QPieSeries::slices" href="qpieseries.html#slices" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" const="true" type="QList&lt;QPieSlice *&gt;" signature="QList&lt;QPieSlice *&gt; slices() const"/>
            <function name="sum" fullname="QPieSeries::sum" href="qpieseries.html#sum" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" const="true" associated-property="sum" type="qreal" signature="qreal sum() const"/>
            <function name="sumChanged" fullname="QPieSeries::sumChanged" href="qpieseries.html#sumChanged" status="active" access="public" location="qpieseries.h" documented="true" meta="signal" associated-property="sum" type="void" signature="void sumChanged()"/>
            <function name="take" fullname="QPieSeries::take" href="qpieseries.html#take" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" type="bool" signature="bool take(QPieSlice *slice)">
                <parameter type="QPieSlice *" name="slice" default=""/>
            </function>
            <function name="type" fullname="QPieSeries::type" href="qpieseries.html#type" status="active" access="public" location="qpieseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="verticalPosition" fullname="QPieSeries::verticalPosition" href="qpieseries.html#verticalPosition-prop" status="active" access="public" location="qpieseries.h" meta="plain" const="true" associated-property="verticalPosition" type="qreal" signature="qreal verticalPosition() const"/>
            <function name="~QPieSeries" fullname="QPieSeries::~QPieSeries" href="qpieseries.html#dtor.QPieSeries" status="active" access="public" location="qpieseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QPieSeries()"/>
            <property name="count" fullname="QPieSeries::count" href="qpieseries.html#count-prop" status="active" access="public" location="qpieseries.h" documented="true" writable="false" brief="Number of slices in the series">
                <getter name="count"/>
                <notifier name="countChanged"/>
            </property>
            <property name="endAngle" fullname="QPieSeries::endAngle" href="qpieseries.html#endAngle-prop" status="active" access="public" location="qpieseries.h" documented="true" brief="Ending angle of the pie">
                <getter name="pieEndAngle"/>
                <setter name="setPieEndAngle"/>
            </property>
            <property name="holeSize" fullname="QPieSeries::holeSize" href="qpieseries.html#holeSize-prop" status="active" access="public" location="qpieseries.h" documented="true" brief="Donut hole size">
                <getter name="holeSize"/>
                <setter name="setHoleSize"/>
            </property>
            <property name="horizontalPosition" fullname="QPieSeries::horizontalPosition" href="qpieseries.html#horizontalPosition-prop" status="active" access="public" location="qpieseries.h" documented="true" brief="Horizontal position of the pie">
                <getter name="horizontalPosition"/>
                <setter name="setHorizontalPosition"/>
            </property>
            <property name="size" fullname="QPieSeries::size" href="qpieseries.html#size-prop" status="active" access="public" location="qpieseries.h" documented="true" brief="Pie size">
                <getter name="pieSize"/>
                <setter name="setPieSize"/>
            </property>
            <property name="startAngle" fullname="QPieSeries::startAngle" href="qpieseries.html#startAngle-prop" status="active" access="public" location="qpieseries.h" documented="true" brief="Starting angle of the pie">
                <getter name="pieStartAngle"/>
                <setter name="setPieStartAngle"/>
            </property>
            <property name="sum" fullname="QPieSeries::sum" href="qpieseries.html#sum-prop" status="active" access="public" location="qpieseries.h" documented="true" writable="false" brief="Of all slices">
                <getter name="sum"/>
                <notifier name="sumChanged"/>
            </property>
            <property name="verticalPosition" fullname="QPieSeries::verticalPosition" href="qpieseries.html#verticalPosition-prop" status="active" access="public" location="qpieseries.h" documented="true" brief="Vertical position of the pie">
                <getter name="verticalPosition"/>
                <setter name="setVerticalPosition"/>
            </property>
        </class>
        <class name="QPieSlice" href="qpieslice.html" status="active" access="public" location="qpieslice.h" documented="true" bases="QObject" module="QtCharts" brief="Represents a single slice in a pie series">
            <function name="QPieSlice" fullname="QPieSlice::QPieSlice" href="qpieslice.html#QPieSlice" status="active" access="public" location="qpieslice.h" documented="true" meta="constructor" explicit="true" signature="QPieSlice(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="QPieSlice" fullname="QPieSlice::QPieSlice" href="qpieslice.html#QPieSlice-1" status="active" access="public" location="qpieslice.h" documented="true" meta="constructor" overload="true" overload-number="1" signature="QPieSlice(QString label, qreal value, QObject *parent)">
                <parameter type="QString" name="label" default=""/>
                <parameter type="qreal" name="value" default=""/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="angleSpan" fullname="QPieSlice::angleSpan" href="qpieslice.html#angleSpan-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="angleSpan" type="qreal" signature="qreal angleSpan() const"/>
            <function name="angleSpanChanged" fullname="QPieSlice::angleSpanChanged" href="qpieslice.html#angleSpanChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="angleSpan" type="void" signature="void angleSpanChanged()"/>
            <function name="borderColor" fullname="QPieSlice::borderColor" href="qpieslice.html#borderColor-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="borderColor" type="QColor" signature="QColor borderColor()"/>
            <function name="borderColorChanged" fullname="QPieSlice::borderColorChanged" href="qpieslice.html#borderColorChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="borderColor" type="void" signature="void borderColorChanged()"/>
            <function name="borderWidth" fullname="QPieSlice::borderWidth" href="qpieslice.html#borderWidth-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="borderWidth" type="int" signature="int borderWidth()"/>
            <function name="borderWidthChanged" fullname="QPieSlice::borderWidthChanged" href="qpieslice.html#borderWidthChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="borderWidth" type="void" signature="void borderWidthChanged()"/>
            <function name="brush" fullname="QPieSlice::brush" href="qpieslice.html#brush-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="brush" type="QBrush" signature="QBrush brush() const"/>
            <function name="brushChanged" fullname="QPieSlice::brushChanged" href="qpieslice.html#brushChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="brush" type="void" signature="void brushChanged()"/>
            <function name="clicked" fullname="QPieSlice::clicked" href="qpieslice.html#clicked" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" type="void" signature="void clicked()"/>
            <function name="color" fullname="QPieSlice::color" href="qpieslice.html#color-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="color" type="QColor" signature="QColor color()"/>
            <function name="colorChanged" fullname="QPieSlice::colorChanged" href="qpieslice.html#colorChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="color" type="void" signature="void colorChanged()"/>
            <function name="doubleClicked" fullname="QPieSlice::doubleClicked" href="qpieslice.html#doubleClicked" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" type="void" signature="void doubleClicked()"/>
            <function name="explodeDistanceFactor" fullname="QPieSlice::explodeDistanceFactor" href="qpieslice.html#explodeDistanceFactor-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="explodeDistanceFactor" type="qreal" signature="qreal explodeDistanceFactor() const"/>
            <function name="hovered" fullname="QPieSlice::hovered" href="qpieslice.html#hovered" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" type="void" signature="void hovered(bool state)">
                <parameter type="bool" name="state" default=""/>
            </function>
            <function name="isExploded" fullname="QPieSlice::isExploded" href="qpieslice.html#exploded-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="exploded" type="bool" signature="bool isExploded() const"/>
            <function name="isLabelVisible" fullname="QPieSlice::isLabelVisible" href="qpieslice.html#labelVisible-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="labelVisible" type="bool" signature="bool isLabelVisible() const"/>
            <function name="label" fullname="QPieSlice::label" href="qpieslice.html#label-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="label" type="QString" signature="QString label() const"/>
            <function name="labelArmLengthFactor" fullname="QPieSlice::labelArmLengthFactor" href="qpieslice.html#labelArmLengthFactor-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="labelArmLengthFactor" type="qreal" signature="qreal labelArmLengthFactor() const"/>
            <function name="labelBrush" fullname="QPieSlice::labelBrush" href="qpieslice.html#labelBrush-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="labelBrush" type="QBrush" signature="QBrush labelBrush() const"/>
            <function name="labelBrushChanged" fullname="QPieSlice::labelBrushChanged" href="qpieslice.html#labelBrushChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="labelBrush" type="void" signature="void labelBrushChanged()"/>
            <function name="labelChanged" fullname="QPieSlice::labelChanged" href="qpieslice.html#labelChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="label" type="void" signature="void labelChanged()"/>
            <function name="labelColor" fullname="QPieSlice::labelColor" href="qpieslice.html#labelColor-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="labelColor" type="QColor" signature="QColor labelColor()"/>
            <function name="labelColorChanged" fullname="QPieSlice::labelColorChanged" href="qpieslice.html#labelColorChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="labelColor" type="void" signature="void labelColorChanged()"/>
            <function name="labelFont" fullname="QPieSlice::labelFont" href="qpieslice.html#labelFont-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="labelFont" type="QFont" signature="QFont labelFont() const"/>
            <function name="labelFontChanged" fullname="QPieSlice::labelFontChanged" href="qpieslice.html#labelFontChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="labelFont" type="void" signature="void labelFontChanged()"/>
            <function name="labelPosition" fullname="QPieSlice::labelPosition" href="qpieslice.html#labelPosition-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="labelPosition" type="QPieSlice::LabelPosition" signature="QPieSlice::LabelPosition labelPosition()"/>
            <function name="labelVisibleChanged" fullname="QPieSlice::labelVisibleChanged" href="qpieslice.html#labelVisibleChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="labelVisible" type="void" signature="void labelVisibleChanged()"/>
            <function name="pen" fullname="QPieSlice::pen" href="qpieslice.html#pen-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="pen" type="QPen" signature="QPen pen() const"/>
            <function name="penChanged" fullname="QPieSlice::penChanged" href="qpieslice.html#penChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="pen" type="void" signature="void penChanged()"/>
            <function name="percentage" fullname="QPieSlice::percentage" href="qpieslice.html#percentage-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="percentage" type="qreal" signature="qreal percentage() const"/>
            <function name="percentageChanged" fullname="QPieSlice::percentageChanged" href="qpieslice.html#percentageChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="percentage" type="void" signature="void percentageChanged()"/>
            <function name="pressed" fullname="QPieSlice::pressed" href="qpieslice.html#pressed" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" type="void" signature="void pressed()"/>
            <function name="released" fullname="QPieSlice::released" href="qpieslice.html#released" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" type="void" signature="void released()"/>
            <function name="series" fullname="QPieSlice::series" href="qpieslice.html#series" status="active" access="public" location="qpieslice.h" documented="true" meta="plain" const="true" type="QPieSeries *" signature="QPieSeries * series() const"/>
            <function name="setBorderColor" fullname="QPieSlice::setBorderColor" href="qpieslice.html#borderColor-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="borderColor" type="void" signature="void setBorderColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setBorderWidth" fullname="QPieSlice::setBorderWidth" href="qpieslice.html#borderWidth-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="borderWidth" type="void" signature="void setBorderWidth(int width)">
                <parameter type="int" name="width" default=""/>
            </function>
            <function name="setBrush" fullname="QPieSlice::setBrush" href="qpieslice.html#brush-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="brush" type="void" signature="void setBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setColor" fullname="QPieSlice::setColor" href="qpieslice.html#color-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="color" type="void" signature="void setColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setExplodeDistanceFactor" fullname="QPieSlice::setExplodeDistanceFactor" href="qpieslice.html#explodeDistanceFactor-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="explodeDistanceFactor" type="void" signature="void setExplodeDistanceFactor(qreal factor)">
                <parameter type="qreal" name="factor" default=""/>
            </function>
            <function name="setExploded" fullname="QPieSlice::setExploded" href="qpieslice.html#exploded-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="exploded" type="void" signature="void setExploded(bool exploded)">
                <parameter type="bool" name="exploded" default="true"/>
            </function>
            <function name="setLabel" fullname="QPieSlice::setLabel" href="qpieslice.html#label-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="label" type="void" signature="void setLabel(QString label)">
                <parameter type="QString" name="label" default=""/>
            </function>
            <function name="setLabelArmLengthFactor" fullname="QPieSlice::setLabelArmLengthFactor" href="qpieslice.html#labelArmLengthFactor-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="labelArmLengthFactor" type="void" signature="void setLabelArmLengthFactor(qreal factor)">
                <parameter type="qreal" name="factor" default=""/>
            </function>
            <function name="setLabelBrush" fullname="QPieSlice::setLabelBrush" href="qpieslice.html#labelBrush-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="labelBrush" type="void" signature="void setLabelBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setLabelColor" fullname="QPieSlice::setLabelColor" href="qpieslice.html#labelColor-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="labelColor" type="void" signature="void setLabelColor(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="setLabelFont" fullname="QPieSlice::setLabelFont" href="qpieslice.html#labelFont-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="labelFont" type="void" signature="void setLabelFont(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="setLabelPosition" fullname="QPieSlice::setLabelPosition" href="qpieslice.html#labelPosition-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="labelPosition" type="void" signature="void setLabelPosition(QPieSlice::LabelPosition position)">
                <parameter type="QPieSlice::LabelPosition" name="position" default=""/>
            </function>
            <function name="setLabelVisible" fullname="QPieSlice::setLabelVisible" href="qpieslice.html#labelVisible-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="labelVisible" type="void" signature="void setLabelVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setPen" fullname="QPieSlice::setPen" href="qpieslice.html#pen-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="pen" type="void" signature="void setPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setValue" fullname="QPieSlice::setValue" href="qpieslice.html#value-prop" status="active" access="public" location="qpieslice.h" meta="plain" associated-property="value" type="void" signature="void setValue(qreal value)">
                <parameter type="qreal" name="value" default=""/>
            </function>
            <function name="startAngle" fullname="QPieSlice::startAngle" href="qpieslice.html#startAngle-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="startAngle" type="qreal" signature="qreal startAngle() const"/>
            <function name="startAngleChanged" fullname="QPieSlice::startAngleChanged" href="qpieslice.html#startAngleChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="startAngle" type="void" signature="void startAngleChanged()"/>
            <function name="value" fullname="QPieSlice::value" href="qpieslice.html#value-prop" status="active" access="public" location="qpieslice.h" meta="plain" const="true" associated-property="value" type="qreal" signature="qreal value() const"/>
            <function name="valueChanged" fullname="QPieSlice::valueChanged" href="qpieslice.html#valueChanged" status="active" access="public" location="qpieslice.h" documented="true" meta="signal" associated-property="value" type="void" signature="void valueChanged()"/>
            <function name="~QPieSlice" fullname="QPieSlice::~QPieSlice" href="qpieslice.html#dtor.QPieSlice" status="active" access="public" location="qpieslice.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QPieSlice()"/>
            <enum name="LabelPosition" fullname="QPieSlice::LabelPosition" href="qpieslice.html#LabelPosition-enum" status="active" access="public" location="qpieslice.h" documented="true">
                <value name="LabelOutside" value="0"/>
                <value name="LabelInsideHorizontal" value="1"/>
                <value name="LabelInsideTangential" value="2"/>
                <value name="LabelInsideNormal" value="3"/>
            </enum>
            <property name="angleSpan" fullname="QPieSlice::angleSpan" href="qpieslice.html#angleSpan-prop" status="active" access="public" location="qpieslice.h" documented="true" writable="false" brief="Span of the slice in degrees. A full pie is 360 degrees, where 0 degrees is at 12 a'clock. Updated automatically once the slice is added to the series">
                <getter name="angleSpan"/>
                <notifier name="angleSpanChanged"/>
            </property>
            <property name="borderColor" fullname="QPieSlice::borderColor" href="qpieslice.html#borderColor-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Color used to draw the slice border. This is a convenience property for modifying the slice pen">
                <getter name="borderColor"/>
                <setter name="setBorderColor"/>
                <notifier name="borderColorChanged"/>
            </property>
            <property name="borderWidth" fullname="QPieSlice::borderWidth" href="qpieslice.html#borderWidth-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Width of the slice border. This is a convenience property for modifying the slice pen">
                <getter name="borderWidth"/>
                <setter name="setBorderWidth"/>
                <notifier name="borderWidthChanged"/>
            </property>
            <property name="brush" fullname="QPieSlice::brush" href="qpieslice.html#brush-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Used to fill the slice">
                <getter name="brush"/>
                <setter name="setBrush"/>
                <notifier name="brushChanged"/>
            </property>
            <property name="color" fullname="QPieSlice::color" href="qpieslice.html#color-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Fill (brush) color of the slice. This is a convenience property for modifying the slice brush">
                <getter name="color"/>
                <setter name="setColor"/>
                <notifier name="colorChanged"/>
            </property>
            <property name="explodeDistanceFactor" fullname="QPieSlice::explodeDistanceFactor" href="qpieslice.html#explodeDistanceFactor-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Determines how far away from the pie the slice is exploded">
                <getter name="explodeDistanceFactor"/>
                <setter name="setExplodeDistanceFactor"/>
            </property>
            <property name="exploded" fullname="QPieSlice::exploded" href="qpieslice.html#exploded-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Whether the slice is separated from the pie">
                <getter name="isExploded"/>
                <setter name="setExploded"/>
            </property>
            <property name="label" fullname="QPieSlice::label" href="qpieslice.html#label-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Of the slice">
                <getter name="label"/>
                <setter name="setLabel"/>
                <notifier name="labelChanged"/>
            </property>
            <property name="labelArmLengthFactor" fullname="QPieSlice::labelArmLengthFactor" href="qpieslice.html#labelArmLengthFactor-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Length of the label arm. The factor is relative to the pie radius. For example:">
                <getter name="labelArmLengthFactor"/>
                <setter name="setLabelArmLengthFactor"/>
            </property>
            <property name="labelBrush" fullname="QPieSlice::labelBrush" href="qpieslice.html#labelBrush-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Brush used to draw the label and label arm of the slice">
                <getter name="labelBrush"/>
                <setter name="setLabelBrush"/>
                <notifier name="labelBrushChanged"/>
            </property>
            <property name="labelColor" fullname="QPieSlice::labelColor" href="qpieslice.html#labelColor-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Color used to draw the slice label. This is a convenience property for modifying the slice label brush">
                <getter name="labelColor"/>
                <setter name="setLabelColor"/>
                <notifier name="labelColorChanged"/>
            </property>
            <property name="labelFont" fullname="QPieSlice::labelFont" href="qpieslice.html#labelFont-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Font used for drawing the label text">
                <getter name="labelFont"/>
                <setter name="setLabelFont"/>
                <notifier name="labelFontChanged"/>
            </property>
            <property name="labelPosition" fullname="QPieSlice::labelPosition" href="qpieslice.html#labelPosition-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Position of the slice label">
                <getter name="labelPosition"/>
                <setter name="setLabelPosition"/>
            </property>
            <property name="labelVisible" fullname="QPieSlice::labelVisible" href="qpieslice.html#labelVisible-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Visibility of the slice label. By default, the label is not visible">
                <getter name="isLabelVisible"/>
                <setter name="setLabelVisible"/>
                <notifier name="labelVisibleChanged"/>
            </property>
            <property name="pen" fullname="QPieSlice::pen" href="qpieslice.html#pen-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Used to draw the slice border">
                <getter name="pen"/>
                <setter name="setPen"/>
                <notifier name="penChanged"/>
            </property>
            <property name="percentage" fullname="QPieSlice::percentage" href="qpieslice.html#percentage-prop" status="active" access="public" location="qpieslice.h" documented="true" writable="false" brief="Of the slice compared to the sum of all slices in the series. The actual value ranges from 0.0 to 1.0. Updated automatically once the slice is added to the series">
                <getter name="percentage"/>
                <notifier name="percentageChanged"/>
            </property>
            <property name="startAngle" fullname="QPieSlice::startAngle" href="qpieslice.html#startAngle-prop" status="active" access="public" location="qpieslice.h" documented="true" writable="false" brief="Starting angle of this slice in the series it belongs to. A full pie is 360 degrees, where 0 degrees is at 12 a'clock. Updated automatically once the slice is added to the series">
                <getter name="startAngle"/>
                <notifier name="startAngleChanged"/>
            </property>
            <property name="value" fullname="QPieSlice::value" href="qpieslice.html#value-prop" status="active" access="public" location="qpieslice.h" documented="true" brief="Of the slice">
                <getter name="value"/>
                <setter name="setValue"/>
                <notifier name="valueChanged"/>
            </property>
        </class>
        <class name="QPolarChart" href="qpolarchart.html" status="active" access="public" location="qpolarchart.h" documented="true" bases="QChart" module="QtCharts" brief="Presents data in polar charts">
            <function name="QPolarChart" fullname="QPolarChart::QPolarChart" href="qpolarchart.html#QPolarChart" status="active" access="public" location="qpolarchart.h" documented="true" meta="constructor" explicit="true" signature="QPolarChart(QGraphicsItem *parent, Qt::WindowFlags wFlags)">
                <parameter type="QGraphicsItem *" name="parent" default="nullptr"/>
                <parameter type="Qt::WindowFlags" name="wFlags" default="Qt::WindowFlags()"/>
            </function>
            <function name="addAxis" fullname="QPolarChart::addAxis" href="qpolarchart.html#addAxis" status="active" access="public" location="qpolarchart.h" documented="true" meta="plain" type="void" signature="void addAxis(QAbstractAxis *axis, QPolarChart::PolarOrientation polarOrientation)">
                <parameter type="QAbstractAxis *" name="axis" default=""/>
                <parameter type="QPolarChart::PolarOrientation" name="polarOrientation" default=""/>
            </function>
            <function name="axes" fullname="QPolarChart::axes" href="qpolarchart.html#axes" status="active" access="public" location="qpolarchart.h" documented="true" meta="plain" const="true" type="QList&lt;QAbstractAxis *&gt;" signature="QList&lt;QAbstractAxis *&gt; axes(QPolarChart::PolarOrientations polarOrientation, QAbstractSeries *series) const">
                <parameter type="QPolarChart::PolarOrientations" name="polarOrientation" default="PolarOrientations(PolarOrientationRadial | PolarOrientationAngular)"/>
                <parameter type="QAbstractSeries *" name="series" default="nullptr"/>
            </function>
            <function name="axisPolarOrientation" fullname="QPolarChart::axisPolarOrientation" href="qpolarchart.html#axisPolarOrientation" status="active" access="public" location="qpolarchart.h" documented="true" meta="plain" static="true" type="QPolarChart::PolarOrientation" signature="QPolarChart::PolarOrientation axisPolarOrientation(QAbstractAxis *axis)">
                <parameter type="QAbstractAxis *" name="axis" default=""/>
            </function>
            <function name="~QPolarChart" fullname="QPolarChart::~QPolarChart" href="qpolarchart.html#dtor.QPolarChart" status="active" access="public" location="qpolarchart.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QPolarChart()"/>
            <enum name="PolarOrientation" fullname="QPolarChart::PolarOrientation" href="qpolarchart.html#PolarOrientation-enum" status="active" access="public" location="qpolarchart.h" documented="true" typedef="QPolarChart::PolarOrientations">
                <value name="PolarOrientationRadial" value="0x1"/>
                <value name="PolarOrientationAngular" value="0x2"/>
            </enum>
            <typedef name="PolarOrientations" fullname="QPolarChart::PolarOrientations" href="qpolarchart.html#PolarOrientation-enum" status="active" access="public" location="qpolarchart.h" enum="QPolarChart::PolarOrientation"/>
        </class>
        <class name="QScatterSeries" href="qscatterseries.html" status="active" access="public" location="qscatterseries.h" documented="true" bases="QXYSeries" module="QtCharts" brief="Presents data in scatter charts">
            <function name="QScatterSeries" fullname="QScatterSeries::QScatterSeries" href="qscatterseries.html#QScatterSeries" status="active" access="public" location="qscatterseries.h" documented="true" meta="constructor" explicit="true" signature="QScatterSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="borderColor" fullname="QScatterSeries::borderColor" href="qscatterseries.html#borderColor-prop" status="active" access="public" location="qscatterseries.h" meta="plain" const="true" associated-property="borderColor" type="QColor" signature="QColor borderColor() const"/>
            <function name="borderColorChanged" fullname="QScatterSeries::borderColorChanged" href="qscatterseries.html#borderColorChanged" status="active" access="public" location="qscatterseries.h" documented="true" meta="signal" associated-property="borderColor" type="void" signature="void borderColorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="brush" fullname="QScatterSeries::brush" href="qscatterseries.html#brush-prop" status="active" access="public" location="qscatterseries.h" meta="plain" const="true" associated-property="brush" type="QBrush" signature="QBrush brush() const"/>
            <function name="color" fullname="QScatterSeries::color" href="qscatterseries.html#color-prop" status="active" access="public" location="qscatterseries.h" meta="plain" virtual="virtual" const="true" override="true" associated-property="color" type="QColor" signature="QColor color() const override"/>
            <function name="colorChanged" fullname="QScatterSeries::colorChanged" href="qscatterseries.html#colorChanged" status="active" access="public" location="qscatterseries.h" documented="true" meta="signal" associated-property="color" type="void" signature="void colorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="markerShape" fullname="QScatterSeries::markerShape" href="qscatterseries.html#markerShape-prop" status="active" access="public" location="qscatterseries.h" meta="plain" const="true" associated-property="markerShape" type="QScatterSeries::MarkerShape" signature="QScatterSeries::MarkerShape markerShape() const"/>
            <function name="markerShapeChanged" fullname="QScatterSeries::markerShapeChanged" href="qscatterseries.html#markerShapeChanged" status="active" access="public" location="qscatterseries.h" documented="true" meta="signal" associated-property="markerShape" type="void" signature="void markerShapeChanged(QScatterSeries::MarkerShape shape)">
                <parameter type="QScatterSeries::MarkerShape" name="shape" default=""/>
            </function>
            <function name="markerSize" fullname="QScatterSeries::markerSize" href="qscatterseries.html#markerSize-prop" status="active" access="public" location="qscatterseries.h" meta="plain" const="true" associated-property="markerSize" type="qreal" signature="qreal markerSize() const"/>
            <function name="markerSizeChanged" fullname="QScatterSeries::markerSizeChanged" href="qscatterseries.html#markerSizeChanged" status="active" access="public" location="qscatterseries.h" documented="true" meta="signal" associated-property="markerSize" type="void" signature="void markerSizeChanged(qreal size)">
                <parameter type="qreal" name="size" default=""/>
            </function>
            <function name="setBorderColor" fullname="QScatterSeries::setBorderColor" href="qscatterseries.html#borderColor-prop" status="active" access="public" location="qscatterseries.h" meta="plain" associated-property="borderColor" type="void" signature="void setBorderColor(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="setBrush" fullname="QScatterSeries::setBrush" href="qscatterseries.html#setBrush" status="active" access="public" location="qscatterseries.h" documented="true" meta="plain" virtual="virtual" override="true" associated-property="brush" type="void" signature="void setBrush(const QBrush &amp;brush) override">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setColor" fullname="QScatterSeries::setColor" href="qscatterseries.html#color-prop" status="active" access="public" location="qscatterseries.h" meta="plain" virtual="virtual" override="true" associated-property="color" type="void" signature="void setColor(const QColor &amp;color) override">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="setMarkerShape" fullname="QScatterSeries::setMarkerShape" href="qscatterseries.html#markerShape-prop" status="active" access="public" location="qscatterseries.h" meta="plain" associated-property="markerShape" type="void" signature="void setMarkerShape(QScatterSeries::MarkerShape shape)">
                <parameter type="QScatterSeries::MarkerShape" name="shape" default=""/>
            </function>
            <function name="setMarkerSize" fullname="QScatterSeries::setMarkerSize" href="qscatterseries.html#markerSize-prop" status="active" access="public" location="qscatterseries.h" meta="plain" associated-property="markerSize" type="void" signature="void setMarkerSize(qreal size)">
                <parameter type="qreal" name="size" default=""/>
            </function>
            <function name="setPen" fullname="QScatterSeries::setPen" href="qscatterseries.html#setPen" status="active" access="public" location="qscatterseries.h" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void setPen(const QPen &amp;pen) override">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="type" fullname="QScatterSeries::type" href="qscatterseries.html#type" status="active" access="public" location="qscatterseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="~QScatterSeries" fullname="QScatterSeries::~QScatterSeries" href="qscatterseries.html#dtor.QScatterSeries" status="active" access="public" location="qscatterseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QScatterSeries()"/>
            <enum name="MarkerShape" fullname="QScatterSeries::MarkerShape" href="qscatterseries.html#MarkerShape-enum" status="active" access="public" location="qscatterseries.h" documented="true">
                <value name="MarkerShapeCircle" value="0"/>
                <value name="MarkerShapeRectangle" value="1"/>
                <value name="MarkerShapeRotatedRectangle" value="2"/>
                <value name="MarkerShapeTriangle" value="3"/>
                <value name="MarkerShapeStar" value="4"/>
                <value name="MarkerShapePentagon" value="5"/>
            </enum>
            <property name="borderColor" fullname="QScatterSeries::borderColor" href="qscatterseries.html#borderColor-prop" status="active" access="public" location="qscatterseries.h" documented="true" brief="Color used to draw the marker borders">
                <getter name="borderColor"/>
                <setter name="setBorderColor"/>
                <notifier name="borderColorChanged"/>
            </property>
            <property name="brush" fullname="QScatterSeries::brush" href="qscatterseries.html#brush-prop" status="active" access="public" location="qscatterseries.h" documented="true" brief="Used to draw the scatter series markers">
                <getter name="brush"/>
                <setter name="setBrush"/>
            </property>
            <property name="color" fullname="QScatterSeries::color" href="qscatterseries.html#color-prop" status="active" access="public" location="qscatterseries.h" documented="true" brief="Used to fill the series markers">
                <getter name="color"/>
                <setter name="setColor"/>
                <notifier name="colorChanged"/>
            </property>
            <property name="markerShape" fullname="QScatterSeries::markerShape" href="qscatterseries.html#markerShape-prop" status="active" access="public" location="qscatterseries.h" documented="true" brief="Shape of the marker used to render the points in the series">
                <getter name="markerShape"/>
                <setter name="setMarkerShape"/>
                <notifier name="markerShapeChanged"/>
            </property>
            <property name="markerSize" fullname="QScatterSeries::markerSize" href="qscatterseries.html#markerSize-prop" status="active" access="public" location="qscatterseries.h" documented="true" brief="Size of the marker used to render the points in the series">
                <getter name="markerSize"/>
                <setter name="setMarkerSize"/>
                <notifier name="markerSizeChanged"/>
            </property>
        </class>
        <class name="QSplineSeries" href="qsplineseries.html" status="active" access="public" location="qsplineseries.h" documented="true" bases="QLineSeries" module="QtCharts" brief="Presents data as spline charts">
            <function name="QSplineSeries" fullname="QSplineSeries::QSplineSeries" href="qsplineseries.html#QSplineSeries" status="active" access="public" location="qsplineseries.h" documented="true" meta="constructor" explicit="true" signature="QSplineSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="type" fullname="QSplineSeries::type" href="qsplineseries.html#type" status="active" access="public" location="qsplineseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="~QSplineSeries" fullname="QSplineSeries::~QSplineSeries" href="qsplineseries.html#dtor.QSplineSeries" status="active" access="public" location="qsplineseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QSplineSeries()"/>
        </class>
        <class name="QStackedBarSeries" href="qstackedbarseries.html" status="active" access="public" location="qstackedbarseries.h" documented="true" bases="QAbstractBarSeries" module="QtCharts" brief="Presents a series of data as vertically stacked bars, with one bar per category">
            <function name="QStackedBarSeries" fullname="QStackedBarSeries::QStackedBarSeries" href="qstackedbarseries.html#QStackedBarSeries" status="active" access="public" location="qstackedbarseries.h" documented="true" meta="constructor" explicit="true" signature="QStackedBarSeries(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="type" fullname="QStackedBarSeries::type" href="qstackedbarseries.html#type" status="active" access="public" location="qstackedbarseries.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractSeries::SeriesType" signature="QAbstractSeries::SeriesType type() const override"/>
            <function name="~QStackedBarSeries" fullname="QStackedBarSeries::~QStackedBarSeries" href="qstackedbarseries.html#dtor.QStackedBarSeries" status="active" access="public" location="qstackedbarseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QStackedBarSeries()"/>
        </class>
        <class name="QVBarModelMapper" href="qvbarmodelmapper.html" status="active" access="public" location="qvbarmodelmapper.h" documented="true" module="QtCharts" brief="Vertical model mapper for bar series">
            <function name="QVBarModelMapper" fullname="QVBarModelMapper::QVBarModelMapper" href="qvbarmodelmapper.html#QVBarModelMapper" status="active" access="public" location="qvbarmodelmapper.h" documented="true" meta="constructor" explicit="true" signature="QVBarModelMapper(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="firstBarSetColumn" fullname="QVBarModelMapper::firstBarSetColumn" href="qvbarmodelmapper.html#firstBarSetColumn-prop" status="active" access="public" location="qvbarmodelmapper.h" meta="plain" const="true" associated-property="firstBarSetColumn" type="int" signature="int firstBarSetColumn() const"/>
            <function name="firstBarSetColumnChanged" fullname="QVBarModelMapper::firstBarSetColumnChanged" href="qvbarmodelmapper.html#firstBarSetColumnChanged" status="active" access="public" location="qvbarmodelmapper.h" documented="true" meta="signal" associated-property="firstBarSetColumn" type="void" signature="void firstBarSetColumnChanged()"/>
            <function name="firstRow" fullname="QVBarModelMapper::firstRow" href="qvbarmodelmapper.html#firstRow-prop" status="active" access="public" location="qvbarmodelmapper.h" meta="plain" const="true" associated-property="firstRow" type="int" signature="int firstRow() const"/>
            <function name="firstRowChanged" fullname="QVBarModelMapper::firstRowChanged" href="qvbarmodelmapper.html#firstRowChanged" status="active" access="public" location="qvbarmodelmapper.h" documented="true" meta="signal" associated-property="firstRow" type="void" signature="void firstRowChanged()"/>
            <function name="lastBarSetColumn" fullname="QVBarModelMapper::lastBarSetColumn" href="qvbarmodelmapper.html#lastBarSetColumn-prop" status="active" access="public" location="qvbarmodelmapper.h" meta="plain" const="true" associated-property="lastBarSetColumn" type="int" signature="int lastBarSetColumn() const"/>
            <function name="lastBarSetColumnChanged" fullname="QVBarModelMapper::lastBarSetColumnChanged" href="qvbarmodelmapper.html#lastBarSetColumnChanged" status="active" access="public" location="qvbarmodelmapper.h" documented="true" meta="signal" associated-property="lastBarSetColumn" type="void" signature="void lastBarSetColumnChanged()"/>
            <function name="model" fullname="QVBarModelMapper::model" href="qvbarmodelmapper.html#model-prop" status="active" access="public" location="qvbarmodelmapper.h" meta="plain" const="true" associated-property="model" type="QAbstractItemModel *" signature="QAbstractItemModel * model() const"/>
            <function name="modelReplaced" fullname="QVBarModelMapper::modelReplaced" href="qvbarmodelmapper.html#modelReplaced" status="active" access="public" location="qvbarmodelmapper.h" documented="true" meta="signal" associated-property="model" type="void" signature="void modelReplaced()"/>
            <function name="rowCount" fullname="QVBarModelMapper::rowCount" href="qvbarmodelmapper.html#rowCount-prop" status="active" access="public" location="qvbarmodelmapper.h" meta="plain" const="true" associated-property="rowCount" type="int" signature="int rowCount() const"/>
            <function name="rowCountChanged" fullname="QVBarModelMapper::rowCountChanged" href="qvbarmodelmapper.html#rowCountChanged" status="active" access="public" location="qvbarmodelmapper.h" documented="true" meta="signal" associated-property="rowCount" type="void" signature="void rowCountChanged()"/>
            <function name="series" fullname="QVBarModelMapper::series" href="qvbarmodelmapper.html#series-prop" status="active" access="public" location="qvbarmodelmapper.h" meta="plain" const="true" associated-property="series" type="QAbstractBarSeries *" signature="QAbstractBarSeries * series() const"/>
            <function name="seriesReplaced" fullname="QVBarModelMapper::seriesReplaced" href="qvbarmodelmapper.html#seriesReplaced" status="active" access="public" location="qvbarmodelmapper.h" documented="true" meta="signal" associated-property="series" type="void" signature="void seriesReplaced()"/>
            <function name="setFirstBarSetColumn" fullname="QVBarModelMapper::setFirstBarSetColumn" href="qvbarmodelmapper.html#firstBarSetColumn-prop" status="active" access="public" location="qvbarmodelmapper.h" meta="plain" associated-property="firstBarSetColumn" type="void" signature="void setFirstBarSetColumn(int firstBarSetColumn)">
                <parameter type="int" name="firstBarSetColumn" default=""/>
            </function>
            <function name="setFirstRow" fullname="QVBarModelMapper::setFirstRow" href="qvbarmodelmapper.html#firstRow-prop" status="active" access="public" location="qvbarmodelmapper.h" meta="plain" associated-property="firstRow" type="void" signature="void setFirstRow(int firstRow)">
                <parameter type="int" name="firstRow" default=""/>
            </function>
            <function name="setLastBarSetColumn" fullname="QVBarModelMapper::setLastBarSetColumn" href="qvbarmodelmapper.html#lastBarSetColumn-prop" status="active" access="public" location="qvbarmodelmapper.h" meta="plain" associated-property="lastBarSetColumn" type="void" signature="void setLastBarSetColumn(int lastBarSetColumn)">
                <parameter type="int" name="lastBarSetColumn" default=""/>
            </function>
            <function name="setModel" fullname="QVBarModelMapper::setModel" href="qvbarmodelmapper.html#model-prop" status="active" access="public" location="qvbarmodelmapper.h" meta="plain" associated-property="model" type="void" signature="void setModel(QAbstractItemModel *model)">
                <parameter type="QAbstractItemModel *" name="model" default=""/>
            </function>
            <function name="setRowCount" fullname="QVBarModelMapper::setRowCount" href="qvbarmodelmapper.html#rowCount-prop" status="active" access="public" location="qvbarmodelmapper.h" meta="plain" associated-property="rowCount" type="void" signature="void setRowCount(int rowCount)">
                <parameter type="int" name="rowCount" default=""/>
            </function>
            <function name="setSeries" fullname="QVBarModelMapper::setSeries" href="qvbarmodelmapper.html#series-prop" status="active" access="public" location="qvbarmodelmapper.h" meta="plain" associated-property="series" type="void" signature="void setSeries(QAbstractBarSeries *series)">
                <parameter type="QAbstractBarSeries *" name="series" default=""/>
            </function>
            <property name="firstBarSetColumn" fullname="QVBarModelMapper::firstBarSetColumn" href="qvbarmodelmapper.html#firstBarSetColumn-prop" status="active" access="public" location="qvbarmodelmapper.h" documented="true" brief="Column of the model that is used as the data source for the first bar set">
                <getter name="firstBarSetColumn"/>
                <setter name="setFirstBarSetColumn"/>
                <notifier name="firstBarSetColumnChanged"/>
            </property>
            <property name="firstRow" fullname="QVBarModelMapper::firstRow" href="qvbarmodelmapper.html#firstRow-prop" status="active" access="public" location="qvbarmodelmapper.h" documented="true" brief="Row of the model that contains the first values of the bar sets in the bar series">
                <getter name="firstRow"/>
                <setter name="setFirstRow"/>
                <notifier name="firstRowChanged"/>
            </property>
            <property name="lastBarSetColumn" fullname="QVBarModelMapper::lastBarSetColumn" href="qvbarmodelmapper.html#lastBarSetColumn-prop" status="active" access="public" location="qvbarmodelmapper.h" documented="true" brief="Column of the model that is used as the data source for the last bar set">
                <getter name="lastBarSetColumn"/>
                <setter name="setLastBarSetColumn"/>
                <notifier name="lastBarSetColumnChanged"/>
            </property>
            <property name="model" fullname="QVBarModelMapper::model" href="qvbarmodelmapper.html#model-prop" status="active" access="public" location="qvbarmodelmapper.h" documented="true" brief="Data model that is used by the mapper">
                <getter name="model"/>
                <setter name="setModel"/>
                <notifier name="modelReplaced"/>
            </property>
            <property name="rowCount" fullname="QVBarModelMapper::rowCount" href="qvbarmodelmapper.html#rowCount-prop" status="active" access="public" location="qvbarmodelmapper.h" documented="true" brief="Number of rows of the model that are mapped as the data for the bar series">
                <getter name="rowCount"/>
                <setter name="setRowCount"/>
                <notifier name="rowCountChanged"/>
            </property>
            <property name="series" fullname="QVBarModelMapper::series" href="qvbarmodelmapper.html#series-prop" status="active" access="public" location="qvbarmodelmapper.h" documented="true" brief="Bar series that is used by the mapper">
                <getter name="series"/>
                <setter name="setSeries"/>
                <notifier name="seriesReplaced"/>
            </property>
        </class>
        <class name="QVBoxPlotModelMapper" href="qvboxplotmodelmapper.html" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" module="QtCharts" brief="Vertical model mapper for box plot series">
            <function name="QVBoxPlotModelMapper" fullname="QVBoxPlotModelMapper::QVBoxPlotModelMapper" href="qvboxplotmodelmapper.html#QVBoxPlotModelMapper" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" meta="constructor" explicit="true" signature="QVBoxPlotModelMapper(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="firstBoxSetColumn" fullname="QVBoxPlotModelMapper::firstBoxSetColumn" href="qvboxplotmodelmapper.html#firstBoxSetColumn-prop" status="active" access="public" location="qvboxplotmodelmapper.h" meta="plain" const="true" associated-property="firstBoxSetColumn" type="int" signature="int firstBoxSetColumn() const"/>
            <function name="firstBoxSetColumnChanged" fullname="QVBoxPlotModelMapper::firstBoxSetColumnChanged" href="qvboxplotmodelmapper.html#firstBoxSetColumnChanged" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" meta="signal" associated-property="firstBoxSetColumn" type="void" signature="void firstBoxSetColumnChanged()"/>
            <function name="firstRow" fullname="QVBoxPlotModelMapper::firstRow" href="qvboxplotmodelmapper.html#firstRow-prop" status="active" access="public" location="qvboxplotmodelmapper.h" meta="plain" const="true" associated-property="firstRow" type="int" signature="int firstRow() const"/>
            <function name="firstRowChanged" fullname="QVBoxPlotModelMapper::firstRowChanged" href="qvboxplotmodelmapper.html#firstRowChanged" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" meta="signal" associated-property="firstRow" type="void" signature="void firstRowChanged()"/>
            <function name="lastBoxSetColumn" fullname="QVBoxPlotModelMapper::lastBoxSetColumn" href="qvboxplotmodelmapper.html#lastBoxSetColumn-prop" status="active" access="public" location="qvboxplotmodelmapper.h" meta="plain" const="true" associated-property="lastBoxSetColumn" type="int" signature="int lastBoxSetColumn() const"/>
            <function name="lastBoxSetColumnChanged" fullname="QVBoxPlotModelMapper::lastBoxSetColumnChanged" href="qvboxplotmodelmapper.html#lastBoxSetColumnChanged" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" meta="signal" associated-property="lastBoxSetColumn" type="void" signature="void lastBoxSetColumnChanged()"/>
            <function name="model" fullname="QVBoxPlotModelMapper::model" href="qvboxplotmodelmapper.html#model-prop" status="active" access="public" location="qvboxplotmodelmapper.h" meta="plain" const="true" associated-property="model" type="QAbstractItemModel *" signature="QAbstractItemModel * model() const"/>
            <function name="modelReplaced" fullname="QVBoxPlotModelMapper::modelReplaced" href="qvboxplotmodelmapper.html#modelReplaced" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" meta="signal" associated-property="model" type="void" signature="void modelReplaced()"/>
            <function name="rowCount" fullname="QVBoxPlotModelMapper::rowCount" href="qvboxplotmodelmapper.html#rowCount-prop" status="active" access="public" location="qvboxplotmodelmapper.h" meta="plain" const="true" associated-property="rowCount" type="int" signature="int rowCount() const"/>
            <function name="rowCountChanged" fullname="QVBoxPlotModelMapper::rowCountChanged" href="qvboxplotmodelmapper.html#rowCountChanged" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" meta="signal" associated-property="rowCount" type="void" signature="void rowCountChanged()"/>
            <function name="series" fullname="QVBoxPlotModelMapper::series" href="qvboxplotmodelmapper.html#series-prop" status="active" access="public" location="qvboxplotmodelmapper.h" meta="plain" const="true" associated-property="series" type="QBoxPlotSeries *" signature="QBoxPlotSeries * series() const"/>
            <function name="seriesReplaced" fullname="QVBoxPlotModelMapper::seriesReplaced" href="qvboxplotmodelmapper.html#seriesReplaced" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" meta="signal" associated-property="series" type="void" signature="void seriesReplaced()"/>
            <function name="setFirstBoxSetColumn" fullname="QVBoxPlotModelMapper::setFirstBoxSetColumn" href="qvboxplotmodelmapper.html#firstBoxSetColumn-prop" status="active" access="public" location="qvboxplotmodelmapper.h" meta="plain" associated-property="firstBoxSetColumn" type="void" signature="void setFirstBoxSetColumn(int firstBoxSetColumn)">
                <parameter type="int" name="firstBoxSetColumn" default=""/>
            </function>
            <function name="setFirstRow" fullname="QVBoxPlotModelMapper::setFirstRow" href="qvboxplotmodelmapper.html#firstRow-prop" status="active" access="public" location="qvboxplotmodelmapper.h" meta="plain" associated-property="firstRow" type="void" signature="void setFirstRow(int firstRow)">
                <parameter type="int" name="firstRow" default=""/>
            </function>
            <function name="setLastBoxSetColumn" fullname="QVBoxPlotModelMapper::setLastBoxSetColumn" href="qvboxplotmodelmapper.html#lastBoxSetColumn-prop" status="active" access="public" location="qvboxplotmodelmapper.h" meta="plain" associated-property="lastBoxSetColumn" type="void" signature="void setLastBoxSetColumn(int lastBoxSetColumn)">
                <parameter type="int" name="lastBoxSetColumn" default=""/>
            </function>
            <function name="setModel" fullname="QVBoxPlotModelMapper::setModel" href="qvboxplotmodelmapper.html#model-prop" status="active" access="public" location="qvboxplotmodelmapper.h" meta="plain" associated-property="model" type="void" signature="void setModel(QAbstractItemModel *model)">
                <parameter type="QAbstractItemModel *" name="model" default=""/>
            </function>
            <function name="setRowCount" fullname="QVBoxPlotModelMapper::setRowCount" href="qvboxplotmodelmapper.html#rowCount-prop" status="active" access="public" location="qvboxplotmodelmapper.h" meta="plain" associated-property="rowCount" type="void" signature="void setRowCount(int rowCount)">
                <parameter type="int" name="rowCount" default=""/>
            </function>
            <function name="setSeries" fullname="QVBoxPlotModelMapper::setSeries" href="qvboxplotmodelmapper.html#series-prop" status="active" access="public" location="qvboxplotmodelmapper.h" meta="plain" associated-property="series" type="void" signature="void setSeries(QBoxPlotSeries *series)">
                <parameter type="QBoxPlotSeries *" name="series" default=""/>
            </function>
            <property name="firstBoxSetColumn" fullname="QVBoxPlotModelMapper::firstBoxSetColumn" href="qvboxplotmodelmapper.html#firstBoxSetColumn-prop" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" brief="Column of the model that is used as the data source for the first box-and-whiskers item">
                <getter name="firstBoxSetColumn"/>
                <setter name="setFirstBoxSetColumn"/>
                <notifier name="firstBoxSetColumnChanged"/>
            </property>
            <property name="firstRow" fullname="QVBoxPlotModelMapper::firstRow" href="qvboxplotmodelmapper.html#firstRow-prop" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" brief="Row of the model that contains the first values of the box-and-whiskers items in the box plot series">
                <getter name="firstRow"/>
                <setter name="setFirstRow"/>
                <notifier name="firstRowChanged"/>
            </property>
            <property name="lastBoxSetColumn" fullname="QVBoxPlotModelMapper::lastBoxSetColumn" href="qvboxplotmodelmapper.html#lastBoxSetColumn-prop" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" brief="Column of the model that is used as the data source for the last box-and-whiskers item">
                <getter name="lastBoxSetColumn"/>
                <setter name="setLastBoxSetColumn"/>
                <notifier name="lastBoxSetColumnChanged"/>
            </property>
            <property name="model" fullname="QVBoxPlotModelMapper::model" href="qvboxplotmodelmapper.html#model-prop" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" brief="That is used by the mapper">
                <getter name="model"/>
                <setter name="setModel"/>
                <notifier name="modelReplaced"/>
            </property>
            <property name="rowCount" fullname="QVBoxPlotModelMapper::rowCount" href="qvboxplotmodelmapper.html#rowCount-prop" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" brief="Number of rows of the model that are mapped as the data for the box plot series">
                <getter name="rowCount"/>
                <setter name="setRowCount"/>
                <notifier name="rowCountChanged"/>
            </property>
            <property name="series" fullname="QVBoxPlotModelMapper::series" href="qvboxplotmodelmapper.html#series-prop" status="active" access="public" location="qvboxplotmodelmapper.h" documented="true" brief="Box plot series that is used by the mapper">
                <getter name="series"/>
                <setter name="setSeries"/>
                <notifier name="seriesReplaced"/>
            </property>
        </class>
        <class name="QVCandlestickModelMapper" href="qvcandlestickmodelmapper.html" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" bases="QCandlestickModelMapper" module="QtCharts" brief="Vertical model mapper for a candlestick series">
            <function name="QVCandlestickModelMapper" fullname="QVCandlestickModelMapper::QVCandlestickModelMapper" href="qvcandlestickmodelmapper.html#QVCandlestickModelMapper" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" meta="constructor" explicit="true" signature="QVCandlestickModelMapper(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="closeRow" fullname="QVCandlestickModelMapper::closeRow" href="qvcandlestickmodelmapper.html#closeRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" const="true" associated-property="closeRow" type="int" signature="int closeRow() const"/>
            <function name="closeRowChanged" fullname="QVCandlestickModelMapper::closeRowChanged" href="qvcandlestickmodelmapper.html#closeRowChanged" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="closeRow" type="void" brief="Emitted when the row of the model that contains close values is changed" signature="void closeRowChanged()"/>
            <function name="firstSetColumn" fullname="QVCandlestickModelMapper::firstSetColumn" href="qvcandlestickmodelmapper.html#firstSetColumn-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" const="true" associated-property="firstSetColumn" type="int" signature="int firstSetColumn() const"/>
            <function name="firstSetColumnChanged" fullname="QVCandlestickModelMapper::firstSetColumnChanged" href="qvcandlestickmodelmapper.html#firstSetColumnChanged" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="firstSetColumn" type="void" brief="Emitted when the column of the model that contains the data of the first item is changed" signature="void firstSetColumnChanged()"/>
            <function name="highRow" fullname="QVCandlestickModelMapper::highRow" href="qvcandlestickmodelmapper.html#highRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" const="true" associated-property="highRow" type="int" signature="int highRow() const"/>
            <function name="highRowChanged" fullname="QVCandlestickModelMapper::highRowChanged" href="qvcandlestickmodelmapper.html#highRowChanged" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="highRow" type="void" brief="Emitted when the row of the model that contains high values is changed" signature="void highRowChanged()"/>
            <function name="lastSetColumn" fullname="QVCandlestickModelMapper::lastSetColumn" href="qvcandlestickmodelmapper.html#lastSetColumn-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" const="true" associated-property="lastSetColumn" type="int" signature="int lastSetColumn() const"/>
            <function name="lastSetColumnChanged" fullname="QVCandlestickModelMapper::lastSetColumnChanged" href="qvcandlestickmodelmapper.html#lastSetColumnChanged" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="lastSetColumn" type="void" brief="Emitted when the column of the model that contains the data of the last item is changed" signature="void lastSetColumnChanged()"/>
            <function name="lowRow" fullname="QVCandlestickModelMapper::lowRow" href="qvcandlestickmodelmapper.html#lowRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" const="true" associated-property="lowRow" type="int" signature="int lowRow() const"/>
            <function name="lowRowChanged" fullname="QVCandlestickModelMapper::lowRowChanged" href="qvcandlestickmodelmapper.html#lowRowChanged" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="lowRow" type="void" brief="Emitted when the row of the model that contains low values is changed" signature="void lowRowChanged()"/>
            <function name="openRow" fullname="QVCandlestickModelMapper::openRow" href="qvcandlestickmodelmapper.html#openRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" const="true" associated-property="openRow" type="int" signature="int openRow() const"/>
            <function name="openRowChanged" fullname="QVCandlestickModelMapper::openRowChanged" href="qvcandlestickmodelmapper.html#openRowChanged" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="openRow" type="void" brief="Emitted when the row of the model that contains open values is changed" signature="void openRowChanged()"/>
            <function name="orientation" fullname="QVCandlestickModelMapper::orientation" href="qvcandlestickmodelmapper.html#orientation" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="Qt::Orientation" signature="Qt::Orientation orientation() const override"/>
            <function name="setCloseRow" fullname="QVCandlestickModelMapper::setCloseRow" href="qvcandlestickmodelmapper.html#closeRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" associated-property="closeRow" type="void" signature="void setCloseRow(int closeRow)">
                <parameter type="int" name="closeRow" default=""/>
            </function>
            <function name="setFirstSetColumn" fullname="QVCandlestickModelMapper::setFirstSetColumn" href="qvcandlestickmodelmapper.html#firstSetColumn-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" associated-property="firstSetColumn" type="void" signature="void setFirstSetColumn(int firstSetColumn)">
                <parameter type="int" name="firstSetColumn" default=""/>
            </function>
            <function name="setHighRow" fullname="QVCandlestickModelMapper::setHighRow" href="qvcandlestickmodelmapper.html#highRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" associated-property="highRow" type="void" signature="void setHighRow(int highRow)">
                <parameter type="int" name="highRow" default=""/>
            </function>
            <function name="setLastSetColumn" fullname="QVCandlestickModelMapper::setLastSetColumn" href="qvcandlestickmodelmapper.html#lastSetColumn-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" associated-property="lastSetColumn" type="void" signature="void setLastSetColumn(int lastSetColumn)">
                <parameter type="int" name="lastSetColumn" default=""/>
            </function>
            <function name="setLowRow" fullname="QVCandlestickModelMapper::setLowRow" href="qvcandlestickmodelmapper.html#lowRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" associated-property="lowRow" type="void" signature="void setLowRow(int lowRow)">
                <parameter type="int" name="lowRow" default=""/>
            </function>
            <function name="setOpenRow" fullname="QVCandlestickModelMapper::setOpenRow" href="qvcandlestickmodelmapper.html#openRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" associated-property="openRow" type="void" signature="void setOpenRow(int openRow)">
                <parameter type="int" name="openRow" default=""/>
            </function>
            <function name="setTimestampRow" fullname="QVCandlestickModelMapper::setTimestampRow" href="qvcandlestickmodelmapper.html#timestampRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" associated-property="timestampRow" type="void" signature="void setTimestampRow(int timestampRow)">
                <parameter type="int" name="timestampRow" default=""/>
            </function>
            <function name="timestampRow" fullname="QVCandlestickModelMapper::timestampRow" href="qvcandlestickmodelmapper.html#timestampRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" meta="plain" const="true" associated-property="timestampRow" type="int" signature="int timestampRow() const"/>
            <function name="timestampRowChanged" fullname="QVCandlestickModelMapper::timestampRowChanged" href="qvcandlestickmodelmapper.html#timestampRowChanged" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" meta="signal" associated-property="timestampRow" type="void" brief="Emitted when the row of the model that contains timestamp values is changed" signature="void timestampRowChanged()"/>
            <property name="closeRow" fullname="QVCandlestickModelMapper::closeRow" href="qvcandlestickmodelmapper.html#closeRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" brief="Row of the model that contains the close values of the candlestick items in the series">
                <getter name="closeRow"/>
                <setter name="setCloseRow"/>
                <notifier name="closeRowChanged"/>
            </property>
            <property name="firstSetColumn" fullname="QVCandlestickModelMapper::firstSetColumn" href="qvcandlestickmodelmapper.html#firstSetColumn-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" brief="Column of the model that is used as the data source for the first item">
                <getter name="firstSetColumn"/>
                <setter name="setFirstSetColumn"/>
                <notifier name="firstSetColumnChanged"/>
            </property>
            <property name="highRow" fullname="QVCandlestickModelMapper::highRow" href="qvcandlestickmodelmapper.html#highRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" brief="Row of the model that contains the high values of the candlestick items in the series">
                <getter name="highRow"/>
                <setter name="setHighRow"/>
                <notifier name="highRowChanged"/>
            </property>
            <property name="lastSetColumn" fullname="QVCandlestickModelMapper::lastSetColumn" href="qvcandlestickmodelmapper.html#lastSetColumn-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" brief="Column of the model that is used as the data source for the last item">
                <getter name="lastSetColumn"/>
                <setter name="setLastSetColumn"/>
                <notifier name="lastSetColumnChanged"/>
            </property>
            <property name="lowRow" fullname="QVCandlestickModelMapper::lowRow" href="qvcandlestickmodelmapper.html#lowRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" brief="Row of the model that contains the low values of the candlestick items in the series">
                <getter name="lowRow"/>
                <setter name="setLowRow"/>
                <notifier name="lowRowChanged"/>
            </property>
            <property name="openRow" fullname="QVCandlestickModelMapper::openRow" href="qvcandlestickmodelmapper.html#openRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" brief="Row of the model that contains the open values of the candlestick items in the series">
                <getter name="openRow"/>
                <setter name="setOpenRow"/>
                <notifier name="openRowChanged"/>
            </property>
            <property name="timestampRow" fullname="QVCandlestickModelMapper::timestampRow" href="qvcandlestickmodelmapper.html#timestampRow-prop" status="active" access="public" location="qvcandlestickmodelmapper.h" documented="true" brief="Row of the model that contains the timestamp values of the candlestick items in the series">
                <getter name="timestampRow"/>
                <setter name="setTimestampRow"/>
                <notifier name="timestampRowChanged"/>
            </property>
        </class>
        <class name="QVPieModelMapper" href="qvpiemodelmapper.html" status="active" access="public" location="qvpiemodelmapper.h" documented="true" bases="QPieModelMapper" module="QtCharts" brief="Vertical model mapper for pie series">
            <function name="QVPieModelMapper" fullname="QVPieModelMapper::QVPieModelMapper" href="qvpiemodelmapper.html#QVPieModelMapper" status="active" access="public" location="qvpiemodelmapper.h" documented="true" meta="constructor" explicit="true" signature="QVPieModelMapper(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="firstRow" fullname="QVPieModelMapper::firstRow" href="qvpiemodelmapper.html#firstRow-prop" status="active" access="public" location="qvpiemodelmapper.h" meta="plain" const="true" associated-property="firstRow" type="int" signature="int firstRow() const"/>
            <function name="firstRowChanged" fullname="QVPieModelMapper::firstRowChanged" href="qvpiemodelmapper.html#firstRowChanged" status="active" access="public" location="qvpiemodelmapper.h" documented="true" meta="signal" associated-property="firstRow" type="void" signature="void firstRowChanged()"/>
            <function name="labelsColumn" fullname="QVPieModelMapper::labelsColumn" href="qvpiemodelmapper.html#labelsColumn" status="active" access="public" location="qvpiemodelmapper.h" documented="true" meta="plain" const="true" associated-property="labelsColumn" type="int" signature="int labelsColumn() const"/>
            <function name="labelsColumnChanged" fullname="QVPieModelMapper::labelsColumnChanged" href="qvpiemodelmapper.html#labelsColumnChanged" status="active" access="public" location="qvpiemodelmapper.h" documented="true" meta="signal" associated-property="labelsColumn" type="void" signature="void labelsColumnChanged()"/>
            <function name="model" fullname="QVPieModelMapper::model" href="qvpiemodelmapper.html#model-prop" status="active" access="public" location="qvpiemodelmapper.h" meta="plain" const="true" associated-property="model" type="QAbstractItemModel *" signature="QAbstractItemModel * model() const"/>
            <function name="modelReplaced" fullname="QVPieModelMapper::modelReplaced" href="qvpiemodelmapper.html#modelReplaced" status="active" access="public" location="qvpiemodelmapper.h" documented="true" meta="signal" associated-property="model" type="void" signature="void modelReplaced()"/>
            <function name="rowCount" fullname="QVPieModelMapper::rowCount" href="qvpiemodelmapper.html#rowCount-prop" status="active" access="public" location="qvpiemodelmapper.h" meta="plain" const="true" associated-property="rowCount" type="int" signature="int rowCount() const"/>
            <function name="rowCountChanged" fullname="QVPieModelMapper::rowCountChanged" href="qvpiemodelmapper.html#rowCountChanged" status="active" access="public" location="qvpiemodelmapper.h" documented="true" meta="signal" associated-property="rowCount" type="void" signature="void rowCountChanged()"/>
            <function name="series" fullname="QVPieModelMapper::series" href="qvpiemodelmapper.html#series-prop" status="active" access="public" location="qvpiemodelmapper.h" meta="plain" const="true" associated-property="series" type="QPieSeries *" signature="QPieSeries * series() const"/>
            <function name="seriesReplaced" fullname="QVPieModelMapper::seriesReplaced" href="qvpiemodelmapper.html#seriesReplaced" status="active" access="public" location="qvpiemodelmapper.h" documented="true" meta="signal" associated-property="series" type="void" signature="void seriesReplaced()"/>
            <function name="setFirstRow" fullname="QVPieModelMapper::setFirstRow" href="qvpiemodelmapper.html#firstRow-prop" status="active" access="public" location="qvpiemodelmapper.h" meta="plain" associated-property="firstRow" type="void" signature="void setFirstRow(int firstRow)">
                <parameter type="int" name="firstRow" default=""/>
            </function>
            <function name="setLabelsColumn" fullname="QVPieModelMapper::setLabelsColumn" href="qvpiemodelmapper.html#setLabelsColumn" status="active" access="public" location="qvpiemodelmapper.h" documented="true" meta="plain" associated-property="labelsColumn" type="void" signature="void setLabelsColumn(int labelsColumn)">
                <parameter type="int" name="labelsColumn" default=""/>
            </function>
            <function name="setModel" fullname="QVPieModelMapper::setModel" href="qvpiemodelmapper.html#model-prop" status="active" access="public" location="qvpiemodelmapper.h" meta="plain" associated-property="model" type="void" signature="void setModel(QAbstractItemModel *model)">
                <parameter type="QAbstractItemModel *" name="model" default=""/>
            </function>
            <function name="setRowCount" fullname="QVPieModelMapper::setRowCount" href="qvpiemodelmapper.html#rowCount-prop" status="active" access="public" location="qvpiemodelmapper.h" meta="plain" associated-property="rowCount" type="void" signature="void setRowCount(int rowCount)">
                <parameter type="int" name="rowCount" default=""/>
            </function>
            <function name="setSeries" fullname="QVPieModelMapper::setSeries" href="qvpiemodelmapper.html#series-prop" status="active" access="public" location="qvpiemodelmapper.h" meta="plain" associated-property="series" type="void" signature="void setSeries(QPieSeries *series)">
                <parameter type="QPieSeries *" name="series" default=""/>
            </function>
            <function name="setValuesColumn" fullname="QVPieModelMapper::setValuesColumn" href="qvpiemodelmapper.html#setValuesColumn" status="active" access="public" location="qvpiemodelmapper.h" documented="true" meta="plain" associated-property="valuesColumn" type="void" signature="void setValuesColumn(int valuesColumn)">
                <parameter type="int" name="valuesColumn" default=""/>
            </function>
            <function name="valuesColumn" fullname="QVPieModelMapper::valuesColumn" href="qvpiemodelmapper.html#valuesColumn" status="active" access="public" location="qvpiemodelmapper.h" documented="true" meta="plain" const="true" associated-property="valuesColumn" type="int" signature="int valuesColumn() const"/>
            <function name="valuesColumnChanged" fullname="QVPieModelMapper::valuesColumnChanged" href="qvpiemodelmapper.html#valuesColumnChanged" status="active" access="public" location="qvpiemodelmapper.h" documented="true" meta="signal" associated-property="valuesColumn" type="void" signature="void valuesColumnChanged()"/>
            <property name="firstRow" fullname="QVPieModelMapper::firstRow" href="qvpiemodelmapper.html#firstRow-prop" status="active" access="public" location="qvpiemodelmapper.h" documented="true" brief="Row of the model that contains the first slice value">
                <getter name="firstRow"/>
                <setter name="setFirstRow"/>
                <notifier name="firstRowChanged"/>
            </property>
            <property name="labelsColumn" fullname="QVPieModelMapper::labelsColumn" href="qvpiemodelmapper.html#labelsColumn-prop" status="active" access="public" location="qvpiemodelmapper.h" documented="true" brief="Column of the model that is kept in sync with the labels of the pie's slices">
                <getter name="labelsColumn"/>
                <setter name="setLabelsColumn"/>
                <notifier name="labelsColumnChanged"/>
            </property>
            <property name="model" fullname="QVPieModelMapper::model" href="qvpiemodelmapper.html#model-prop" status="active" access="public" location="qvpiemodelmapper.h" documented="true" brief="That is used by the mapper">
                <getter name="model"/>
                <setter name="setModel"/>
                <notifier name="modelReplaced"/>
            </property>
            <property name="rowCount" fullname="QVPieModelMapper::rowCount" href="qvpiemodelmapper.html#rowCount-prop" status="active" access="public" location="qvpiemodelmapper.h" documented="true" brief="Number of rows of the model that are mapped as the data for a pie series">
                <getter name="rowCount"/>
                <setter name="setRowCount"/>
                <notifier name="rowCountChanged"/>
            </property>
            <property name="series" fullname="QVPieModelMapper::series" href="qvpiemodelmapper.html#series-prop" status="active" access="public" location="qvpiemodelmapper.h" documented="true" brief="Pie series that is used by the mapper">
                <getter name="series"/>
                <setter name="setSeries"/>
                <notifier name="seriesReplaced"/>
            </property>
            <property name="valuesColumn" fullname="QVPieModelMapper::valuesColumn" href="qvpiemodelmapper.html#valuesColumn-prop" status="active" access="public" location="qvpiemodelmapper.h" documented="true" brief="Column of the model that is kept in sync with the values of the pie's slices">
                <getter name="valuesColumn"/>
                <setter name="setValuesColumn"/>
                <notifier name="valuesColumnChanged"/>
            </property>
        </class>
        <class name="QVXYModelMapper" href="qvxymodelmapper.html" status="active" access="public" location="qvxymodelmapper.h" documented="true" bases="QXYModelMapper" module="QtCharts" brief="Vertical model mapper for line, spline, and scatter series">
            <function name="QVXYModelMapper" fullname="QVXYModelMapper::QVXYModelMapper" href="qvxymodelmapper.html#QVXYModelMapper" status="active" access="public" location="qvxymodelmapper.h" documented="true" meta="constructor" explicit="true" signature="QVXYModelMapper(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="firstRow" fullname="QVXYModelMapper::firstRow" href="qvxymodelmapper.html#firstRow-prop" status="active" access="public" location="qvxymodelmapper.h" meta="plain" const="true" associated-property="firstRow" type="int" signature="int firstRow() const"/>
            <function name="firstRowChanged" fullname="QVXYModelMapper::firstRowChanged" href="qvxymodelmapper.html#firstRowChanged" status="active" access="public" location="qvxymodelmapper.h" documented="true" meta="signal" associated-property="firstRow" type="void" signature="void firstRowChanged()"/>
            <function name="model" fullname="QVXYModelMapper::model" href="qvxymodelmapper.html#model-prop" status="active" access="public" location="qvxymodelmapper.h" meta="plain" const="true" associated-property="model" type="QAbstractItemModel *" signature="QAbstractItemModel * model() const"/>
            <function name="modelReplaced" fullname="QVXYModelMapper::modelReplaced" href="qvxymodelmapper.html#modelReplaced" status="active" access="public" location="qvxymodelmapper.h" documented="true" meta="signal" associated-property="model" type="void" signature="void modelReplaced()"/>
            <function name="rowCount" fullname="QVXYModelMapper::rowCount" href="qvxymodelmapper.html#rowCount-prop" status="active" access="public" location="qvxymodelmapper.h" meta="plain" const="true" associated-property="rowCount" type="int" signature="int rowCount() const"/>
            <function name="rowCountChanged" fullname="QVXYModelMapper::rowCountChanged" href="qvxymodelmapper.html#rowCountChanged" status="active" access="public" location="qvxymodelmapper.h" documented="true" meta="signal" associated-property="rowCount" type="void" signature="void rowCountChanged()"/>
            <function name="series" fullname="QVXYModelMapper::series" href="qvxymodelmapper.html#series-prop" status="active" access="public" location="qvxymodelmapper.h" meta="plain" const="true" associated-property="series" type="QXYSeries *" signature="QXYSeries * series() const"/>
            <function name="seriesReplaced" fullname="QVXYModelMapper::seriesReplaced" href="qvxymodelmapper.html#seriesReplaced" status="active" access="public" location="qvxymodelmapper.h" documented="true" meta="signal" associated-property="series" type="void" signature="void seriesReplaced()"/>
            <function name="setFirstRow" fullname="QVXYModelMapper::setFirstRow" href="qvxymodelmapper.html#firstRow-prop" status="active" access="public" location="qvxymodelmapper.h" meta="plain" associated-property="firstRow" type="void" signature="void setFirstRow(int firstRow)">
                <parameter type="int" name="firstRow" default=""/>
            </function>
            <function name="setModel" fullname="QVXYModelMapper::setModel" href="qvxymodelmapper.html#model-prop" status="active" access="public" location="qvxymodelmapper.h" meta="plain" associated-property="model" type="void" signature="void setModel(QAbstractItemModel *model)">
                <parameter type="QAbstractItemModel *" name="model" default=""/>
            </function>
            <function name="setRowCount" fullname="QVXYModelMapper::setRowCount" href="qvxymodelmapper.html#rowCount-prop" status="active" access="public" location="qvxymodelmapper.h" meta="plain" associated-property="rowCount" type="void" signature="void setRowCount(int rowCount)">
                <parameter type="int" name="rowCount" default=""/>
            </function>
            <function name="setSeries" fullname="QVXYModelMapper::setSeries" href="qvxymodelmapper.html#series-prop" status="active" access="public" location="qvxymodelmapper.h" meta="plain" associated-property="series" type="void" signature="void setSeries(QXYSeries *series)">
                <parameter type="QXYSeries *" name="series" default=""/>
            </function>
            <function name="setXColumn" fullname="QVXYModelMapper::setXColumn" href="qvxymodelmapper.html#xColumn-prop" status="active" access="public" location="qvxymodelmapper.h" meta="plain" associated-property="xColumn" type="void" signature="void setXColumn(int xColumn)">
                <parameter type="int" name="xColumn" default=""/>
            </function>
            <function name="setYColumn" fullname="QVXYModelMapper::setYColumn" href="qvxymodelmapper.html#yColumn-prop" status="active" access="public" location="qvxymodelmapper.h" meta="plain" associated-property="yColumn" type="void" signature="void setYColumn(int yColumn)">
                <parameter type="int" name="yColumn" default=""/>
            </function>
            <function name="xColumn" fullname="QVXYModelMapper::xColumn" href="qvxymodelmapper.html#xColumn-prop" status="active" access="public" location="qvxymodelmapper.h" meta="plain" const="true" associated-property="xColumn" type="int" signature="int xColumn() const"/>
            <function name="xColumnChanged" fullname="QVXYModelMapper::xColumnChanged" href="qvxymodelmapper.html#xColumnChanged" status="active" access="public" location="qvxymodelmapper.h" documented="true" meta="signal" associated-property="xColumn" type="void" signature="void xColumnChanged()"/>
            <function name="yColumn" fullname="QVXYModelMapper::yColumn" href="qvxymodelmapper.html#yColumn-prop" status="active" access="public" location="qvxymodelmapper.h" meta="plain" const="true" associated-property="yColumn" type="int" signature="int yColumn() const"/>
            <function name="yColumnChanged" fullname="QVXYModelMapper::yColumnChanged" href="qvxymodelmapper.html#yColumnChanged" status="active" access="public" location="qvxymodelmapper.h" documented="true" meta="signal" associated-property="yColumn" type="void" signature="void yColumnChanged()"/>
            <property name="firstRow" fullname="QVXYModelMapper::firstRow" href="qvxymodelmapper.html#firstRow-prop" status="active" access="public" location="qvxymodelmapper.h" documented="true" brief="Row of the model that contains the data for the first point of the series">
                <getter name="firstRow"/>
                <setter name="setFirstRow"/>
                <notifier name="firstRowChanged"/>
            </property>
            <property name="model" fullname="QVXYModelMapper::model" href="qvxymodelmapper.html#model-prop" status="active" access="public" location="qvxymodelmapper.h" documented="true" brief="That is used by the mapper">
                <getter name="model"/>
                <setter name="setModel"/>
                <notifier name="modelReplaced"/>
            </property>
            <property name="rowCount" fullname="QVXYModelMapper::rowCount" href="qvxymodelmapper.html#rowCount-prop" status="active" access="public" location="qvxymodelmapper.h" documented="true" brief="Number of rows of the model that are mapped as the data for series">
                <getter name="rowCount"/>
                <setter name="setRowCount"/>
                <notifier name="rowCountChanged"/>
            </property>
            <property name="series" fullname="QVXYModelMapper::series" href="qvxymodelmapper.html#series-prop" status="active" access="public" location="qvxymodelmapper.h" documented="true" brief="That is used by the mapper">
                <getter name="series"/>
                <setter name="setSeries"/>
                <notifier name="seriesReplaced"/>
            </property>
            <property name="xColumn" fullname="QVXYModelMapper::xColumn" href="qvxymodelmapper.html#xColumn-prop" status="active" access="public" location="qvxymodelmapper.h" documented="true" brief="Column of the model that contains the x-coordinates of data points">
                <getter name="xColumn"/>
                <setter name="setXColumn"/>
                <notifier name="xColumnChanged"/>
            </property>
            <property name="yColumn" fullname="QVXYModelMapper::yColumn" href="qvxymodelmapper.html#yColumn-prop" status="active" access="public" location="qvxymodelmapper.h" documented="true" brief="Column of the model that contains the y-coordinates of data points">
                <getter name="yColumn"/>
                <setter name="setYColumn"/>
                <notifier name="yColumnChanged"/>
            </property>
        </class>
        <class name="QValueAxis" href="qvalueaxis.html" status="active" access="public" location="qvalueaxis.h" documented="true" bases="QAbstractAxis" module="QtCharts" brief="Adds values to a chart's axes">
            <function name="QValueAxis" fullname="QValueAxis::QValueAxis" href="qvalueaxis.html#QValueAxis" status="active" access="public" location="qvalueaxis.h" documented="true" meta="constructor" explicit="true" signature="QValueAxis(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="applyNiceNumbers" fullname="QValueAxis::applyNiceNumbers" href="qvalueaxis.html#applyNiceNumbers" status="active" access="public" location="qvalueaxis.h" documented="true" meta="slot" type="void" signature="void applyNiceNumbers()"/>
            <function name="labelFormat" fullname="QValueAxis::labelFormat" href="qvalueaxis.html#labelFormat-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" const="true" associated-property="labelFormat" type="QString" signature="QString labelFormat() const"/>
            <function name="labelFormatChanged" fullname="QValueAxis::labelFormatChanged" href="qvalueaxis.html#labelFormatChanged" status="active" access="public" location="qvalueaxis.h" documented="true" meta="signal" associated-property="labelFormat" type="void" signature="void labelFormatChanged(const QString &amp;format)">
                <parameter type="const QString &amp;" name="format" default=""/>
            </function>
            <function name="max" fullname="QValueAxis::max" href="qvalueaxis.html#max-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" const="true" associated-property="max" type="qreal" signature="qreal max() const"/>
            <function name="maxChanged" fullname="QValueAxis::maxChanged" href="qvalueaxis.html#maxChanged" status="active" access="public" location="qvalueaxis.h" documented="true" meta="signal" associated-property="max" type="void" signature="void maxChanged(qreal max)">
                <parameter type="qreal" name="max" default=""/>
            </function>
            <function name="min" fullname="QValueAxis::min" href="qvalueaxis.html#min-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" const="true" associated-property="min" type="qreal" signature="qreal min() const"/>
            <function name="minChanged" fullname="QValueAxis::minChanged" href="qvalueaxis.html#minChanged" status="active" access="public" location="qvalueaxis.h" documented="true" meta="signal" associated-property="min" type="void" signature="void minChanged(qreal min)">
                <parameter type="qreal" name="min" default=""/>
            </function>
            <function name="minorTickCount" fullname="QValueAxis::minorTickCount" href="qvalueaxis.html#minorTickCount-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" const="true" associated-property="minorTickCount" type="int" signature="int minorTickCount() const"/>
            <function name="minorTickCountChanged" fullname="QValueAxis::minorTickCountChanged" href="qvalueaxis.html#minorTickCountChanged" status="active" access="public" location="qvalueaxis.h" documented="true" meta="signal" associated-property="minorTickCount" type="void" signature="void minorTickCountChanged(int minorTickCount)">
                <parameter type="int" name="minorTickCount" default=""/>
            </function>
            <function name="rangeChanged" fullname="QValueAxis::rangeChanged" href="qvalueaxis.html#rangeChanged" status="active" access="public" location="qvalueaxis.h" documented="true" meta="signal" type="void" signature="void rangeChanged(qreal min, qreal max)">
                <parameter type="qreal" name="min" default=""/>
                <parameter type="qreal" name="max" default=""/>
            </function>
            <function name="setLabelFormat" fullname="QValueAxis::setLabelFormat" href="qvalueaxis.html#labelFormat-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" associated-property="labelFormat" type="void" signature="void setLabelFormat(const QString &amp;format)">
                <parameter type="const QString &amp;" name="format" default=""/>
            </function>
            <function name="setMax" fullname="QValueAxis::setMax" href="qvalueaxis.html#max-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" associated-property="max" type="void" signature="void setMax(qreal max)">
                <parameter type="qreal" name="max" default=""/>
            </function>
            <function name="setMin" fullname="QValueAxis::setMin" href="qvalueaxis.html#min-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" associated-property="min" type="void" signature="void setMin(qreal min)">
                <parameter type="qreal" name="min" default=""/>
            </function>
            <function name="setMinorTickCount" fullname="QValueAxis::setMinorTickCount" href="qvalueaxis.html#minorTickCount-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" associated-property="minorTickCount" type="void" signature="void setMinorTickCount(int count)">
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="setRange" fullname="QValueAxis::setRange" href="qvalueaxis.html#setRange" status="active" access="public" location="qvalueaxis.h" documented="true" meta="plain" type="void" signature="void setRange(qreal min, qreal max)">
                <parameter type="qreal" name="min" default=""/>
                <parameter type="qreal" name="max" default=""/>
            </function>
            <function name="setTickAnchor" fullname="QValueAxis::setTickAnchor" href="qvalueaxis.html#tickAnchor-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" associated-property="tickAnchor" type="void" signature="void setTickAnchor(qreal anchor)">
                <parameter type="qreal" name="anchor" default=""/>
            </function>
            <function name="setTickCount" fullname="QValueAxis::setTickCount" href="qvalueaxis.html#tickCount-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" associated-property="tickCount" type="void" signature="void setTickCount(int count)">
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="setTickInterval" fullname="QValueAxis::setTickInterval" href="qvalueaxis.html#tickInterval-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" associated-property="tickInterval" type="void" signature="void setTickInterval(qreal insterval)">
                <parameter type="qreal" name="insterval" default=""/>
            </function>
            <function name="setTickType" fullname="QValueAxis::setTickType" href="qvalueaxis.html#tickType-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" associated-property="tickType" type="void" signature="void setTickType(QValueAxis::TickType type)">
                <parameter type="QValueAxis::TickType" name="type" default=""/>
            </function>
            <function name="tickAnchor" fullname="QValueAxis::tickAnchor" href="qvalueaxis.html#tickAnchor-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" const="true" associated-property="tickAnchor" type="qreal" signature="qreal tickAnchor() const"/>
            <function name="tickAnchorChanged" fullname="QValueAxis::tickAnchorChanged" href="qvalueaxis.html#tickAnchor-prop" status="active" access="public" location="qvalueaxis.h" meta="signal" associated-property="tickAnchor" type="void" signature="void tickAnchorChanged(qreal anchor)">
                <parameter type="qreal" name="anchor" default=""/>
            </function>
            <function name="tickCount" fullname="QValueAxis::tickCount" href="qvalueaxis.html#tickCount-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" const="true" associated-property="tickCount" type="int" signature="int tickCount() const"/>
            <function name="tickCountChanged" fullname="QValueAxis::tickCountChanged" href="qvalueaxis.html#tickCountChanged" status="active" access="public" location="qvalueaxis.h" documented="true" meta="signal" associated-property="tickCount" type="void" signature="void tickCountChanged(int tickCount)">
                <parameter type="int" name="tickCount" default=""/>
            </function>
            <function name="tickInterval" fullname="QValueAxis::tickInterval" href="qvalueaxis.html#tickInterval-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" const="true" associated-property="tickInterval" type="qreal" signature="qreal tickInterval() const"/>
            <function name="tickIntervalChanged" fullname="QValueAxis::tickIntervalChanged" href="qvalueaxis.html#tickInterval-prop" status="active" access="public" location="qvalueaxis.h" meta="signal" associated-property="tickInterval" type="void" signature="void tickIntervalChanged(qreal interval)">
                <parameter type="qreal" name="interval" default=""/>
            </function>
            <function name="tickType" fullname="QValueAxis::tickType" href="qvalueaxis.html#tickType-prop" status="active" access="public" location="qvalueaxis.h" meta="plain" const="true" associated-property="tickType" type="QValueAxis::TickType" signature="QValueAxis::TickType tickType() const"/>
            <function name="tickTypeChanged" fullname="QValueAxis::tickTypeChanged" href="qvalueaxis.html#tickType-prop" status="active" access="public" location="qvalueaxis.h" meta="signal" associated-property="tickType" type="void" signature="void tickTypeChanged(QValueAxis::TickType type)">
                <parameter type="QValueAxis::TickType" name="type" default=""/>
            </function>
            <function name="type" fullname="QValueAxis::type" href="qvalueaxis.html#type" status="active" access="public" location="qvalueaxis.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QAbstractAxis::AxisType" signature="QAbstractAxis::AxisType type() const override"/>
            <function name="~QValueAxis" fullname="QValueAxis::~QValueAxis" href="qvalueaxis.html#dtor.QValueAxis" status="active" access="public" location="qvalueaxis.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QValueAxis()"/>
            <enum name="TickType" fullname="QValueAxis::TickType" href="qvalueaxis.html#TickType-enum" status="active" access="public" location="qvalueaxis.h" documented="true">
                <value name="TicksDynamic" value="0"/>
                <value name="TicksFixed" value="1"/>
            </enum>
            <property name="labelFormat" fullname="QValueAxis::labelFormat" href="qvalueaxis.html#labelFormat-prop" status="active" access="public" location="qvalueaxis.h" documented="true" brief="Label format of the axis">
                <getter name="labelFormat"/>
                <setter name="setLabelFormat"/>
                <notifier name="labelFormatChanged"/>
            </property>
            <property name="max" fullname="QValueAxis::max" href="qvalueaxis.html#max-prop" status="active" access="public" location="qvalueaxis.h" documented="true" brief="Maximum value on the axis">
                <getter name="max"/>
                <setter name="setMax"/>
                <notifier name="maxChanged"/>
            </property>
            <property name="min" fullname="QValueAxis::min" href="qvalueaxis.html#min-prop" status="active" access="public" location="qvalueaxis.h" documented="true" brief="Minimum value on the axis">
                <getter name="min"/>
                <setter name="setMin"/>
                <notifier name="minChanged"/>
            </property>
            <property name="minorTickCount" fullname="QValueAxis::minorTickCount" href="qvalueaxis.html#minorTickCount-prop" status="active" access="public" location="qvalueaxis.h" documented="true" brief="Number of minor tick marks on the axis. This indicates how many grid lines are drawn between major ticks on the chart. Labels are not drawn for minor ticks. The default value is 0">
                <getter name="minorTickCount"/>
                <setter name="setMinorTickCount"/>
                <notifier name="minorTickCountChanged"/>
            </property>
            <property name="tickAnchor" fullname="QValueAxis::tickAnchor" href="qvalueaxis.html#tickAnchor-prop" status="active" access="public" location="qvalueaxis.h" documented="true" brief="Base value where the dynamically placed tick marks and labels are started from">
                <getter name="tickAnchor"/>
                <setter name="setTickAnchor"/>
                <notifier name="tickAnchorChanged"/>
            </property>
            <property name="tickCount" fullname="QValueAxis::tickCount" href="qvalueaxis.html#tickCount-prop" status="active" access="public" location="qvalueaxis.h" documented="true" brief="Number of tick marks on the axis. This indicates how many grid lines are drawn on the chart. The default value is 5, and the number cannot be less than 2">
                <getter name="tickCount"/>
                <setter name="setTickCount"/>
                <notifier name="tickCountChanged"/>
            </property>
            <property name="tickInterval" fullname="QValueAxis::tickInterval" href="qvalueaxis.html#tickInterval-prop" status="active" access="public" location="qvalueaxis.h" documented="true" brief="Interval between dynamically placed tick marks and labels">
                <getter name="tickInterval"/>
                <setter name="setTickInterval"/>
                <notifier name="tickIntervalChanged"/>
            </property>
            <property name="tickType" fullname="QValueAxis::tickType" href="qvalueaxis.html#tickType-prop" status="active" access="public" location="qvalueaxis.h" documented="true" brief="Positioning method of tick and labels">
                <getter name="tickType"/>
                <setter name="setTickType"/>
                <notifier name="tickTypeChanged"/>
            </property>
        </class>
        <class name="QXYLegendMarker" href="qxylegendmarker.html" status="active" access="public" location="qxylegendmarker.h" documented="true" bases="QLegendMarker" module="QtCharts" brief="Legend marker for a line, spline, or scatter series">
            <function name="series" fullname="QXYLegendMarker::series" href="qxylegendmarker.html#series" status="active" access="public" location="qxylegendmarker.h" documented="true" meta="plain" virtual="virtual" override="true" type="QXYSeries *" signature="QXYSeries * series() override"/>
            <function name="type" fullname="QXYLegendMarker::type" href="qxylegendmarker.html#type" status="active" access="public" location="qxylegendmarker.h" documented="true" meta="plain" virtual="virtual" override="true" type="QLegendMarker::LegendMarkerType" signature="QLegendMarker::LegendMarkerType type() override"/>
            <function name="~QXYLegendMarker" fullname="QXYLegendMarker::~QXYLegendMarker" href="qxylegendmarker.html#dtor.QXYLegendMarker" status="active" access="public" location="qxylegendmarker.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QXYLegendMarker()"/>
        </class>
        <class name="QXYSeries" href="qxyseries.html" status="active" access="public" location="qxyseries.h" documented="true" bases="QAbstractSeries" module="QtCharts" brief="Base class for line, spline, and scatter series">
            <function name="append" fullname="QXYSeries::append" href="qxyseries.html#append" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" type="void" signature="void append(qreal x, qreal y)">
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
            </function>
            <function name="append" fullname="QXYSeries::append" href="qxyseries.html#append-1" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void append(const QPointF &amp;point)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="append" fullname="QXYSeries::append" href="qxyseries.html#append-2" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" overload="true" overload-number="2" type="void" signature="void append(const QList&lt;QPointF&gt; &amp;points)">
                <parameter type="const QList&lt;QPointF&gt; &amp;" name="points" default=""/>
            </function>
            <function name="at" fullname="QXYSeries::at" href="qxyseries.html#at" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" const="true" type="const QPointF &amp;" signature="const QPointF &amp; at(int index) const">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="bestFitLineColor" fullname="QXYSeries::bestFitLineColor" href="qxyseries.html#bestFitLineColor-prop" status="active" access="public" location="qxyseries.h" meta="plain" const="true" associated-property="bestFitLineColor" type="QColor" signature="QColor bestFitLineColor() const"/>
            <function name="bestFitLineColorChanged" fullname="QXYSeries::bestFitLineColorChanged" href="qxyseries.html#bestFitLineColorChanged" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" associated-property="bestFitLineColor" type="void" signature="void bestFitLineColorChanged(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="bestFitLineEquation" fullname="QXYSeries::bestFitLineEquation" href="qxyseries.html#bestFitLineEquation" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" const="true" type="QPair&lt;qreal, qreal&gt;" signature="QPair&lt;qreal, qreal&gt; bestFitLineEquation(bool &amp;ok) const">
                <parameter type="bool &amp;" name="ok" default=""/>
            </function>
            <function name="bestFitLineVisibilityChanged" fullname="QXYSeries::bestFitLineVisibilityChanged" href="qxyseries.html#bestFitLineVisibilityChanged" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" associated-property="bestFitLineVisible" type="void" signature="void bestFitLineVisibilityChanged(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="bestFitLineVisible" fullname="QXYSeries::bestFitLineVisible" href="qxyseries.html#bestFitLineVisible-prop" status="active" access="public" location="qxyseries.h" meta="plain" const="true" associated-property="bestFitLineVisible" type="bool" signature="bool bestFitLineVisible() const"/>
            <function name="brush" fullname="QXYSeries::brush" href="qxyseries.html#brush" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" const="true" type="QBrush" signature="QBrush brush() const"/>
            <function name="clear" fullname="QXYSeries::clear" href="qxyseries.html#clear" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" type="void" signature="void clear()"/>
            <function name="clearPointConfiguration" fullname="QXYSeries::clearPointConfiguration" href="qxyseries.html#clearPointConfiguration" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void clearPointConfiguration(const int index)">
                <parameter type="const int" name="index" default=""/>
            </function>
            <function name="clearPointConfiguration" fullname="QXYSeries::clearPointConfiguration" href="qxyseries.html#clearPointConfiguration-1" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" overload="true" overload-number="1" type="void" signature="void clearPointConfiguration(const int index, const QXYSeries::PointConfiguration key)">
                <parameter type="const int" name="index" default=""/>
                <parameter type="const QXYSeries::PointConfiguration" name="key" default=""/>
            </function>
            <function name="clearPointsConfiguration" fullname="QXYSeries::clearPointsConfiguration" href="qxyseries.html#clearPointsConfiguration" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void clearPointsConfiguration()"/>
            <function name="clearPointsConfiguration" fullname="QXYSeries::clearPointsConfiguration" href="qxyseries.html#clearPointsConfiguration-1" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" overload="true" overload-number="1" type="void" signature="void clearPointsConfiguration(const QXYSeries::PointConfiguration key)">
                <parameter type="const QXYSeries::PointConfiguration" name="key" default=""/>
            </function>
            <function name="clicked" fullname="QXYSeries::clicked" href="qxyseries.html#clicked" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void clicked(const QPointF &amp;point)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="color" fullname="QXYSeries::color" href="qxyseries.html#color" status="active" access="public" location="qxyseries.h" meta="plain" virtual="virtual" const="true" associated-property="color,selectedColor" type="QColor" signature="QColor color() const"/>
            <function name="colorBy" fullname="QXYSeries::colorBy" href="qxyseries.html#colorBy" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void colorBy(const QList&lt;qreal&gt; &amp;sourceData, const QLinearGradient &amp;gradient)">
                <parameter type="const QList&lt;qreal&gt; &amp;" name="sourceData" default=""/>
                <parameter type="const QLinearGradient &amp;" name="gradient" default="QLinearGradient()"/>
            </function>
            <function name="colorChanged" fullname="QXYSeries::colorChanged" href="qxyseries.html#colorChanged" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" associated-property="color" type="void" signature="void colorChanged(QColor color)">
                <parameter type="QColor" name="color" default=""/>
            </function>
            <function name="count" fullname="QXYSeries::count" href="qxyseries.html#count" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" const="true" type="int" signature="int count() const"/>
            <function name="deselectAllPoints" fullname="QXYSeries::deselectAllPoints" href="qxyseries.html#deselectAllPoints" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void deselectAllPoints()"/>
            <function name="deselectPoint" fullname="QXYSeries::deselectPoint" href="qxyseries.html#deselectPoint" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void deselectPoint(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="deselectPoints" fullname="QXYSeries::deselectPoints" href="qxyseries.html#deselectPoints" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void deselectPoints(const QList&lt;int&gt; &amp;indexes)">
                <parameter type="const QList&lt;int&gt; &amp;" name="indexes" default=""/>
            </function>
            <function name="doubleClicked" fullname="QXYSeries::doubleClicked" href="qxyseries.html#doubleClicked" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void doubleClicked(const QPointF &amp;point)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="hovered" fullname="QXYSeries::hovered" href="qxyseries.html#hovered" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void hovered(const QPointF &amp;point, bool state)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
                <parameter type="bool" name="state" default=""/>
            </function>
            <function name="insert" fullname="QXYSeries::insert" href="qxyseries.html#insert" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" type="void" signature="void insert(int index, const QPointF &amp;point)">
                <parameter type="int" name="index" default=""/>
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="isPointSelected" fullname="QXYSeries::isPointSelected" href="qxyseries.html#isPointSelected" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="bool" signature="bool isPointSelected(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="lightMarker" fullname="QXYSeries::lightMarker" href="qxyseries.html#lightMarker" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" const="true" type="const QImage &amp;" signature="const QImage &amp; lightMarker() const"/>
            <function name="lightMarkerChanged" fullname="QXYSeries::lightMarkerChanged" href="qxyseries.html#lightMarkerChanged" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="signal" type="void" signature="void lightMarkerChanged(const QImage &amp;lightMarker)">
                <parameter type="const QImage &amp;" name="lightMarker" default=""/>
            </function>
            <function name="markerSize" fullname="QXYSeries::markerSize" href="qxyseries.html#markerSize" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" const="true" type="qreal" signature="qreal markerSize() const"/>
            <function name="markerSizeChanged" fullname="QXYSeries::markerSizeChanged" href="qxyseries.html#markerSizeChanged" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void markerSizeChanged(qreal size)">
                <parameter type="qreal" name="size" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QXYSeries::operator&lt;&lt;" href="qxyseries.html#operator-lt-lt" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" type="QXYSeries &amp;" signature="QXYSeries &amp; operator&lt;&lt;(const QPointF &amp;point)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QXYSeries::operator&lt;&lt;" href="qxyseries.html#operator-lt-lt-1" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" overload="true" overload-number="1" type="QXYSeries &amp;" signature="QXYSeries &amp; operator&lt;&lt;(const QList&lt;QPointF&gt; &amp;points)">
                <parameter type="const QList&lt;QPointF&gt; &amp;" name="points" default=""/>
            </function>
            <function name="pen" fullname="QXYSeries::pen" href="qxyseries.html#pen" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" const="true" type="QPen" signature="QPen pen() const"/>
            <function name="penChanged" fullname="QXYSeries::penChanged" href="qxyseries.html#penChanged" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void penChanged(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="pointAdded" fullname="QXYSeries::pointAdded" href="qxyseries.html#pointAdded" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void pointAdded(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="pointConfiguration" fullname="QXYSeries::pointConfiguration" href="qxyseries.html#pointConfiguration" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" const="true" type="QHash&lt;QXYSeries::PointConfiguration, QVariant&gt;" signature="QHash&lt;QXYSeries::PointConfiguration, QVariant&gt; pointConfiguration(const int index) const">
                <parameter type="const int" name="index" default=""/>
            </function>
            <function name="pointLabelsClipping" fullname="QXYSeries::pointLabelsClipping" href="qxyseries.html#pointLabelsClipping-prop" status="active" access="public" location="qxyseries.h" meta="plain" const="true" associated-property="pointLabelsClipping" type="bool" signature="bool pointLabelsClipping() const"/>
            <function name="pointLabelsClippingChanged" fullname="QXYSeries::pointLabelsClippingChanged" href="qxyseries.html#pointLabelsClippingChanged" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" associated-property="pointLabelsClipping" type="void" signature="void pointLabelsClippingChanged(bool clipping)">
                <parameter type="bool" name="clipping" default=""/>
            </function>
            <function name="pointLabelsColor" fullname="QXYSeries::pointLabelsColor" href="qxyseries.html#pointLabelsColor-prop" status="active" access="public" location="qxyseries.h" meta="plain" const="true" associated-property="pointLabelsColor" type="QColor" signature="QColor pointLabelsColor() const"/>
            <function name="pointLabelsColorChanged" fullname="QXYSeries::pointLabelsColorChanged" href="qxyseries.html#pointLabelsColorChanged" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" associated-property="pointLabelsColor" type="void" signature="void pointLabelsColorChanged(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="pointLabelsFont" fullname="QXYSeries::pointLabelsFont" href="qxyseries.html#pointLabelsFont-prop" status="active" access="public" location="qxyseries.h" meta="plain" const="true" associated-property="pointLabelsFont" type="QFont" signature="QFont pointLabelsFont() const"/>
            <function name="pointLabelsFontChanged" fullname="QXYSeries::pointLabelsFontChanged" href="qxyseries.html#pointLabelsFontChanged" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" associated-property="pointLabelsFont" type="void" signature="void pointLabelsFontChanged(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="pointLabelsFormat" fullname="QXYSeries::pointLabelsFormat" href="qxyseries.html#pointLabelsFormat-prop" status="active" access="public" location="qxyseries.h" meta="plain" const="true" associated-property="pointLabelsFormat" type="QString" signature="QString pointLabelsFormat() const"/>
            <function name="pointLabelsFormatChanged" fullname="QXYSeries::pointLabelsFormatChanged" href="qxyseries.html#pointLabelsFormatChanged" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" associated-property="pointLabelsFormat" type="void" signature="void pointLabelsFormatChanged(const QString &amp;format)">
                <parameter type="const QString &amp;" name="format" default=""/>
            </function>
            <function name="pointLabelsVisibilityChanged" fullname="QXYSeries::pointLabelsVisibilityChanged" href="qxyseries.html#pointLabelsVisibilityChanged" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" associated-property="pointLabelsVisible" type="void" signature="void pointLabelsVisibilityChanged(bool visible)">
                <parameter type="bool" name="visible" default=""/>
            </function>
            <function name="pointLabelsVisible" fullname="QXYSeries::pointLabelsVisible" href="qxyseries.html#pointLabelsVisible-prop" status="active" access="public" location="qxyseries.h" meta="plain" const="true" associated-property="pointLabelsVisible" type="bool" signature="bool pointLabelsVisible() const"/>
            <function name="pointRemoved" fullname="QXYSeries::pointRemoved" href="qxyseries.html#pointRemoved" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void pointRemoved(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="pointReplaced" fullname="QXYSeries::pointReplaced" href="qxyseries.html#pointReplaced" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void pointReplaced(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="points" fullname="QXYSeries::points" href="qxyseries.html#points" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" const="true" type="QList&lt;QPointF&gt;" signature="QList&lt;QPointF&gt; points() const"/>
            <function name="pointsConfiguration" fullname="QXYSeries::pointsConfiguration" href="qxyseries.html#pointsConfiguration" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" const="true" type="QHash&lt;int, QHash&lt;QXYSeries::PointConfiguration, QVariant&gt;&gt;" signature="QHash&lt;int, QHash&lt;QXYSeries::PointConfiguration, QVariant&gt;&gt; pointsConfiguration() const"/>
            <function name="pointsRemoved" fullname="QXYSeries::pointsRemoved" href="qxyseries.html#pointsRemoved" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void pointsRemoved(int index, int count)">
                <parameter type="int" name="index" default=""/>
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="pointsReplaced" fullname="QXYSeries::pointsReplaced" href="qxyseries.html#pointsReplaced" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void pointsReplaced()"/>
            <function name="pointsVector" fullname="QXYSeries::pointsVector" href="qxyseries-obsolete.html#pointsVector" status="deprecated" access="public" location="qxyseries.h" documented="true" meta="plain" const="true" type="QList&lt;QPointF&gt;" signature="QList&lt;QPointF&gt; pointsVector() const"/>
            <function name="pointsVisible" fullname="QXYSeries::pointsVisible" href="qxyseries.html#pointsVisible-prop" status="active" access="public" location="qxyseries.h" meta="plain" const="true" associated-property="pointsVisible" type="bool" signature="bool pointsVisible() const"/>
            <function name="pressed" fullname="QXYSeries::pressed" href="qxyseries.html#pressed" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void pressed(const QPointF &amp;point)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="released" fullname="QXYSeries::released" href="qxyseries.html#released" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void released(const QPointF &amp;point)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="remove" fullname="QXYSeries::remove" href="qxyseries.html#remove" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" type="void" signature="void remove(qreal x, qreal y)">
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
            </function>
            <function name="remove" fullname="QXYSeries::remove" href="qxyseries.html#remove-1" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void remove(const QPointF &amp;point)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="remove" fullname="QXYSeries::remove" href="qxyseries.html#remove-2" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" overload="true" overload-number="2" type="void" signature="void remove(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="removePoints" fullname="QXYSeries::removePoints" href="qxyseries.html#removePoints" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" type="void" signature="void removePoints(int index, int count)">
                <parameter type="int" name="index" default=""/>
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="replace" fullname="QXYSeries::replace" href="qxyseries.html#replace" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" type="void" signature="void replace(qreal oldX, qreal oldY, qreal newX, qreal newY)">
                <parameter type="qreal" name="oldX" default=""/>
                <parameter type="qreal" name="oldY" default=""/>
                <parameter type="qreal" name="newX" default=""/>
                <parameter type="qreal" name="newY" default=""/>
            </function>
            <function name="replace" fullname="QXYSeries::replace" href="qxyseries.html#replace-1" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void replace(const QPointF &amp;oldPoint, const QPointF &amp;newPoint)">
                <parameter type="const QPointF &amp;" name="oldPoint" default=""/>
                <parameter type="const QPointF &amp;" name="newPoint" default=""/>
            </function>
            <function name="replace" fullname="QXYSeries::replace" href="qxyseries.html#replace-2" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" overload="true" overload-number="2" type="void" signature="void replace(int index, qreal newX, qreal newY)">
                <parameter type="int" name="index" default=""/>
                <parameter type="qreal" name="newX" default=""/>
                <parameter type="qreal" name="newY" default=""/>
            </function>
            <function name="replace" fullname="QXYSeries::replace" href="qxyseries.html#replace-3" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" overload="true" overload-number="3" type="void" signature="void replace(int index, const QPointF &amp;newPoint)">
                <parameter type="int" name="index" default=""/>
                <parameter type="const QPointF &amp;" name="newPoint" default=""/>
            </function>
            <function name="replace" fullname="QXYSeries::replace" href="qxyseries.html#replace-4" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" overload="true" overload-number="4" type="void" signature="void replace(const QList&lt;QPointF&gt; &amp;points)">
                <parameter type="const QList&lt;QPointF&gt; &amp;" name="points" default=""/>
            </function>
            <function name="selectAllPoints" fullname="QXYSeries::selectAllPoints" href="qxyseries.html#selectAllPoints" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void selectAllPoints()"/>
            <function name="selectPoint" fullname="QXYSeries::selectPoint" href="qxyseries.html#selectPoint" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void selectPoint(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="selectPoints" fullname="QXYSeries::selectPoints" href="qxyseries.html#selectPoints" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void selectPoints(const QList&lt;int&gt; &amp;indexes)">
                <parameter type="const QList&lt;int&gt; &amp;" name="indexes" default=""/>
            </function>
            <function name="selectedColorChanged" fullname="QXYSeries::selectedColorChanged" href="qxyseries.html#selectedColor-prop" status="active" access="public" location="qxyseries.h" meta="signal" associated-property="selectedColor" type="void" signature="void selectedColorChanged(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="selectedLightMarker" fullname="QXYSeries::selectedLightMarker" href="qxyseries.html#selectedLightMarker" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" const="true" type="const QImage &amp;" signature="const QImage &amp; selectedLightMarker() const"/>
            <function name="selectedPoints" fullname="QXYSeries::selectedPoints" href="qxyseries.html#selectedPoints" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" const="true" type="QList&lt;int&gt;" signature="QList&lt;int&gt; selectedPoints() const"/>
            <function name="selectedPointsChanged" fullname="QXYSeries::selectedPointsChanged" href="qxyseries.html#selectedPointsChanged" status="active" access="public" location="qxyseries.h" documented="true" meta="signal" type="void" signature="void selectedPointsChanged()"/>
            <function name="setBestFitLineColor" fullname="QXYSeries::setBestFitLineColor" href="qxyseries.html#bestFitLineColor-prop" status="active" access="public" location="qxyseries.h" meta="plain" associated-property="bestFitLineColor" type="void" signature="void setBestFitLineColor(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="setBestFitLineVisible" fullname="QXYSeries::setBestFitLineVisible" href="qxyseries.html#bestFitLineVisible-prop" status="active" access="public" location="qxyseries.h" meta="plain" associated-property="bestFitLineVisible" type="void" signature="void setBestFitLineVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setBrush" fullname="QXYSeries::setBrush" href="qxyseries.html#setBrush" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" virtual="virtual" type="void" signature="void setBrush(const QBrush &amp;brush)">
                <parameter type="const QBrush &amp;" name="brush" default=""/>
            </function>
            <function name="setColor" fullname="QXYSeries::setColor" href="qxyseries.html#color-prop" status="active" access="public" location="qxyseries.h" meta="plain" virtual="virtual" associated-property="color" type="void" signature="void setColor(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="setLightMarker" fullname="QXYSeries::setLightMarker" href="qxyseries.html#setLightMarker" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void setLightMarker(const QImage &amp;lightMarker)">
                <parameter type="const QImage &amp;" name="lightMarker" default=""/>
            </function>
            <function name="setMarkerSize" fullname="QXYSeries::setMarkerSize" href="qxyseries.html#setMarkerSize" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void setMarkerSize(qreal size)">
                <parameter type="qreal" name="size" default=""/>
            </function>
            <function name="setPen" fullname="QXYSeries::setPen" href="qxyseries.html#setPen" status="active" access="public" location="qxyseries.h" documented="true" meta="plain" virtual="virtual" type="void" signature="void setPen(const QPen &amp;pen)">
                <parameter type="const QPen &amp;" name="pen" default=""/>
            </function>
            <function name="setPointConfiguration" fullname="QXYSeries::setPointConfiguration" href="qxyseries.html#setPointConfiguration" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void setPointConfiguration(const int index, const QHash&lt;QXYSeries::PointConfiguration, QVariant&gt; &amp;configuration)">
                <parameter type="const int" name="index" default=""/>
                <parameter type="const QHash&lt;QXYSeries::PointConfiguration, QVariant&gt; &amp;" name="configuration" default=""/>
            </function>
            <function name="setPointConfiguration" fullname="QXYSeries::setPointConfiguration" href="qxyseries.html#setPointConfiguration-1" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" overload="true" overload-number="1" type="void" signature="void setPointConfiguration(const int index, const QXYSeries::PointConfiguration key, const QVariant &amp;value)">
                <parameter type="const int" name="index" default=""/>
                <parameter type="const QXYSeries::PointConfiguration" name="key" default=""/>
                <parameter type="const QVariant &amp;" name="value" default=""/>
            </function>
            <function name="setPointLabelsClipping" fullname="QXYSeries::setPointLabelsClipping" href="qxyseries.html#pointLabelsClipping-prop" status="active" access="public" location="qxyseries.h" meta="plain" associated-property="pointLabelsClipping" type="void" signature="void setPointLabelsClipping(bool enabled)">
                <parameter type="bool" name="enabled" default="true"/>
            </function>
            <function name="setPointLabelsColor" fullname="QXYSeries::setPointLabelsColor" href="qxyseries.html#pointLabelsColor-prop" status="active" access="public" location="qxyseries.h" meta="plain" associated-property="pointLabelsColor" type="void" signature="void setPointLabelsColor(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="setPointLabelsFont" fullname="QXYSeries::setPointLabelsFont" href="qxyseries.html#pointLabelsFont-prop" status="active" access="public" location="qxyseries.h" meta="plain" associated-property="pointLabelsFont" type="void" signature="void setPointLabelsFont(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
            </function>
            <function name="setPointLabelsFormat" fullname="QXYSeries::setPointLabelsFormat" href="qxyseries.html#pointLabelsFormat-prop" status="active" access="public" location="qxyseries.h" meta="plain" associated-property="pointLabelsFormat" type="void" signature="void setPointLabelsFormat(const QString &amp;format)">
                <parameter type="const QString &amp;" name="format" default=""/>
            </function>
            <function name="setPointLabelsVisible" fullname="QXYSeries::setPointLabelsVisible" href="qxyseries.html#pointLabelsVisible-prop" status="active" access="public" location="qxyseries.h" meta="plain" associated-property="pointLabelsVisible" type="void" signature="void setPointLabelsVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setPointSelected" fullname="QXYSeries::setPointSelected" href="qxyseries.html#setPointSelected" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void setPointSelected(int index, bool selected)">
                <parameter type="int" name="index" default=""/>
                <parameter type="bool" name="selected" default=""/>
            </function>
            <function name="setPointsConfiguration" fullname="QXYSeries::setPointsConfiguration" href="qxyseries.html#setPointsConfiguration" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void setPointsConfiguration(const QHash&lt;int, QHash&lt;QXYSeries::PointConfiguration, QVariant&gt;&gt; &amp;pointsConfiguration)">
                <parameter type="const QHash&lt;int, QHash&lt;QXYSeries::PointConfiguration, QVariant&gt;&gt; &amp;" name="pointsConfiguration" default=""/>
            </function>
            <function name="setPointsVisible" fullname="QXYSeries::setPointsVisible" href="qxyseries.html#pointsVisible-prop" status="active" access="public" location="qxyseries.h" meta="plain" associated-property="pointsVisible" type="void" signature="void setPointsVisible(bool visible)">
                <parameter type="bool" name="visible" default="true"/>
            </function>
            <function name="setSelectedColor" fullname="QXYSeries::setSelectedColor" href="qxyseries.html#selectedColor-prop" status="active" access="public" location="qxyseries.h" meta="plain" associated-property="selectedColor" type="void" signature="void setSelectedColor(const QColor &amp;color)">
                <parameter type="const QColor &amp;" name="color" default=""/>
            </function>
            <function name="setSelectedLightMarker" fullname="QXYSeries::setSelectedLightMarker" href="qxyseries.html#setSelectedLightMarker" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void setSelectedLightMarker(const QImage &amp;selectedLightMarker)">
                <parameter type="const QImage &amp;" name="selectedLightMarker" default=""/>
            </function>
            <function name="sizeBy" fullname="QXYSeries::sizeBy" href="qxyseries.html#sizeBy" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void sizeBy(const QList&lt;qreal&gt; &amp;sourceData, const qreal minSize, const qreal maxSize)">
                <parameter type="const QList&lt;qreal&gt; &amp;" name="sourceData" default=""/>
                <parameter type="const qreal" name="minSize" default=""/>
                <parameter type="const qreal" name="maxSize" default=""/>
            </function>
            <function name="toggleSelection" fullname="QXYSeries::toggleSelection" href="qxyseries.html#toggleSelection" status="active" access="public" location="qxyseries.h" documented="true" since="6.2" meta="plain" type="void" signature="void toggleSelection(const QList&lt;int&gt; &amp;indexes)">
                <parameter type="const QList&lt;int&gt; &amp;" name="indexes" default=""/>
            </function>
            <function name="~QXYSeries" fullname="QXYSeries::~QXYSeries" href="qxyseries.html#dtor.QXYSeries" status="active" access="public" location="qxyseries.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QXYSeries()"/>
            <enum name="PointConfiguration" fullname="QXYSeries::PointConfiguration" href="qxyseries.html#PointConfiguration-enum" status="active" access="public" location="qxyseries.h" since="6.2" documented="true" scoped="true">
                <value name="Color" value="0"/>
                <value name="Size" value="1"/>
                <value name="Visibility" value="2"/>
                <value name="LabelVisibility" value="3"/>
                <value name="LabelFormat" value="4" since="6.5"/>
            </enum>
            <property name="bestFitLineColor" fullname="QXYSeries::bestFitLineColor" href="qxyseries.html#bestFitLineColor-prop" status="active" access="public" location="qxyseries.h" since="6.2" documented="true" brief="Color of best fit line">
                <getter name="bestFitLineColor"/>
                <setter name="setBestFitLineColor"/>
                <notifier name="bestFitLineColorChanged"/>
            </property>
            <property name="bestFitLineVisible" fullname="QXYSeries::bestFitLineVisible" href="qxyseries.html#bestFitLineVisible-prop" status="active" access="public" location="qxyseries.h" since="6.2" documented="true" brief="Visibility of the best fit line">
                <getter name="bestFitLineVisible"/>
                <setter name="setBestFitLineVisible"/>
                <notifier name="bestFitLineVisibilityChanged"/>
            </property>
            <property name="color" fullname="QXYSeries::color" href="qxyseries.html#color-prop" status="active" access="public" location="qxyseries.h" documented="true" brief="Of the series">
                <getter name="color"/>
                <setter name="setColor"/>
                <notifier name="colorChanged"/>
            </property>
            <property name="pointLabelsClipping" fullname="QXYSeries::pointLabelsClipping" href="qxyseries.html#pointLabelsClipping-prop" status="active" access="public" location="qxyseries.h" documented="true" brief="Clipping for data point labels">
                <getter name="pointLabelsClipping"/>
                <setter name="setPointLabelsClipping"/>
                <notifier name="pointLabelsClippingChanged"/>
            </property>
            <property name="pointLabelsColor" fullname="QXYSeries::pointLabelsColor" href="qxyseries.html#pointLabelsColor-prop" status="active" access="public" location="qxyseries.h" documented="true" brief="Color used for data point labels. By default, the color is the color of the brush defined in theme for labels">
                <getter name="pointLabelsColor"/>
                <setter name="setPointLabelsColor"/>
                <notifier name="pointLabelsColorChanged"/>
            </property>
            <property name="pointLabelsFont" fullname="QXYSeries::pointLabelsFont" href="qxyseries.html#pointLabelsFont-prop" status="active" access="public" location="qxyseries.h" documented="true" brief="Font used for data point labels">
                <getter name="pointLabelsFont"/>
                <setter name="setPointLabelsFont"/>
                <notifier name="pointLabelsFontChanged"/>
            </property>
            <property name="pointLabelsFormat" fullname="QXYSeries::pointLabelsFormat" href="qxyseries.html#pointLabelsFormat-prop" status="active" access="public" location="qxyseries.h" documented="true" brief="Format used for showing labels with data points">
                <getter name="pointLabelsFormat"/>
                <setter name="setPointLabelsFormat"/>
                <notifier name="pointLabelsFormatChanged"/>
            </property>
            <property name="pointLabelsVisible" fullname="QXYSeries::pointLabelsVisible" href="qxyseries.html#pointLabelsVisible-prop" status="active" access="public" location="qxyseries.h" documented="true" brief="Visibility of data point labels">
                <getter name="pointLabelsVisible"/>
                <setter name="setPointLabelsVisible"/>
                <notifier name="pointLabelsVisibilityChanged"/>
            </property>
            <property name="pointsVisible" fullname="QXYSeries::pointsVisible" href="qxyseries.html#pointsVisible-prop" status="active" access="public" location="qxyseries.h" documented="true" brief="Whether the data points are visible and should be drawn">
                <getter name="pointsVisible"/>
                <setter name="setPointsVisible"/>
            </property>
            <property name="selectedColor" fullname="QXYSeries::selectedColor" href="qxyseries.html#selectedColor-prop" status="active" access="public" location="qxyseries.h" since="6.2" documented="true" brief="Color of the selected points">
                <getter name="color"/>
                <setter name="setSelectedColor"/>
                <notifier name="selectedColorChanged"/>
            </property>
        </class>
        <page name="qmloscilloscope" href="qtcharts-qmloscilloscope-example.html" status="active" location="examples-qmloscilloscope.qdoc" documented="true" groups="category Data Visualization,qtcharts_examples" subtype="example" title="Qml Oscilloscope" fulltitle="Qml Oscilloscope" subtitle="" brief="Example shows how to implement application with strict performance requirements using the Qt Charts QML API">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="creating-views" title="Creating Views" level="1"/>
            <page name="qmloscilloscope/datasource.cpp" href="qtcharts-qmloscilloscope-datasource-cpp.html" status="active" subtype="file" title="" fulltitle="datasource.cpp Example File" subtitle="qmloscilloscope/datasource.cpp"/>
            <page name="qmloscilloscope/datasource.h" href="qtcharts-qmloscilloscope-datasource-h.html" status="active" subtype="file" title="" fulltitle="datasource.h Example File" subtitle="qmloscilloscope/datasource.h"/>
            <page name="qmloscilloscope/qml/qmloscilloscope/ControlPanel.qml" href="qtcharts-qmloscilloscope-qml-qmloscilloscope-controlpanel-qml.html" status="active" subtype="file" title="" fulltitle="ControlPanel.qml Example File" subtitle="qmloscilloscope/qml/qmloscilloscope/ControlPanel.qml"/>
            <page name="qmloscilloscope/qml/qmloscilloscope/MultiButton.qml" href="qtcharts-qmloscilloscope-qml-qmloscilloscope-multibutton-qml.html" status="active" subtype="file" title="" fulltitle="MultiButton.qml Example File" subtitle="qmloscilloscope/qml/qmloscilloscope/MultiButton.qml"/>
            <page name="qmloscilloscope/qml/qmloscilloscope/ScopeView.qml" href="qtcharts-qmloscilloscope-qml-qmloscilloscope-scopeview-qml.html" status="active" subtype="file" title="" fulltitle="ScopeView.qml Example File" subtitle="qmloscilloscope/qml/qmloscilloscope/ScopeView.qml"/>
            <page name="qmloscilloscope/qml/qmloscilloscope/main.qml" href="qtcharts-qmloscilloscope-qml-qmloscilloscope-main-qml.html" status="active" subtype="file" title="" fulltitle="main.qml Example File" subtitle="qmloscilloscope/qml/qmloscilloscope/main.qml"/>
            <page name="qmloscilloscope/main.cpp" href="qtcharts-qmloscilloscope-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="qmloscilloscope/main.cpp"/>
            <page name="qmloscilloscope/CMakeLists.txt" href="qtcharts-qmloscilloscope-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="qmloscilloscope/CMakeLists.txt"/>
            <page name="qmloscilloscope/qmloscilloscope.pro" href="qtcharts-qmloscilloscope-qmloscilloscope-pro.html" status="active" subtype="file" title="" fulltitle="qmloscilloscope.pro Example File" subtitle="qmloscilloscope/qmloscilloscope.pro"/>
            <page name="qmloscilloscope/resources.qrc" href="qtcharts-qmloscilloscope-resources-qrc.html" status="active" subtype="file" title="" fulltitle="resources.qrc Example File" subtitle="qmloscilloscope/resources.qrc"/>
        </page>
        <page name="qmlweather" href="qtcharts-qmlweather-example.html" status="active" location="examples-qmlweather.qdoc" documented="true" groups="category Data Visualization,qtcharts_examples" subtype="example" title="Qml Weather" fulltitle="Qml Weather" subtitle="" brief="This is a basic demonstration showing how to use the different chart types by using qml">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="using-charts-in-qt-quick-applications" title="Using Charts in Qt Quick Applications" level="1"/>
            <page name="qmlweather/qml/qmlweather/main.qml" href="qtcharts-qmlweather-qml-qmlweather-main-qml.html" status="active" subtype="file" title="" fulltitle="main.qml Example File" subtitle="qmlweather/qml/qmlweather/main.qml"/>
            <page name="qmlweather/main.cpp" href="qtcharts-qmlweather-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="qmlweather/main.cpp"/>
            <page name="qmlweather/CMakeLists.txt" href="qtcharts-qmlweather-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="qmlweather/CMakeLists.txt"/>
            <page name="qmlweather/qmlweather.pro" href="qtcharts-qmlweather-qmlweather-pro.html" status="active" subtype="file" title="" fulltitle="qmlweather.pro Example File" subtitle="qmlweather/qmlweather.pro"/>
            <page name="qmlweather/resources.qrc" href="qtcharts-qmlweather-resources-qrc.html" status="active" subtype="file" title="" fulltitle="resources.qrc Example File" subtitle="qmlweather/resources.qrc"/>
        </page>
        <page name="qtcharts-index.html" href="qtcharts-index.html" status="active" location="index.qdoc" documented="true" subtype="page" title="Qt Charts" fulltitle="Qt Charts" subtitle="">
            <contents name="using-the-module" title="Using the Module" level="1"/>
            <contents name="qml-api" title="QML API" level="2"/>
            <contents name="c-api" title="C++ API" level="2"/>
            <contents name="building-with-cmake" title="Building with CMake" level="3"/>
            <contents name="building-with-qmake" title="Building with qmake" level="3"/>
            <contents name="module-evolution" title="Module Evolution" level="1"/>
            <contents name="articles-and-guides" title="Articles and Guides" level="1"/>
            <contents name="examples" title="Examples" level="1"/>
            <contents name="api-reference" title="API Reference" level="1"/>
            <contents name="licenses" title="Licenses" level="1"/>
        </page>
        <page name="qtcharts-overview.html" href="qtcharts-overview.html" status="active" location="qtcharts-overview.qdoc" documented="true" groups="explanations-graphicsandmultimedia" subtype="page" title="Qt Charts Overview" fulltitle="Qt Charts Overview" subtitle="" brief="Visualizing data as 2D charts">
            <contents name="chart-types" title="Chart Types" level="1"/>
            <contents name="line-and-spline-charts" title="Line and Spline Charts" level="2"/>
            <contents name="area-and-scatter-charts" title="Area and Scatter Charts" level="2"/>
            <contents name="bar-charts" title="Bar Charts" level="2"/>
            <contents name="pie-charts" title="Pie Charts" level="2"/>
            <contents name="box-and-whiskers-charts" title="Box-and-Whiskers Charts" level="2"/>
            <contents name="candlestick-charts" title="Candlestick Charts" level="2"/>
            <contents name="polar-charts" title="Polar Charts" level="2"/>
            <contents name="axes" title="Axes" level="1"/>
            <contents name="legend" title="Legend" level="1"/>
            <contents name="interacting-with-charts" title="Interacting with Charts" level="1"/>
            <contents name="drawing-data-dynamically" title="Drawing Data Dynamically" level="2"/>
            <contents name="drilling-down-into-data" title="Drilling Down into Data" level="2"/>
            <contents name="zooming-and-scrolling" title="Zooming and Scrolling" level="2"/>
            <contents name="clicking-and-hovering" title="Clicking and Hovering" level="2"/>
            <contents name="themes" title="Themes" level="1"/>
        </page>
        <qmlclass name="ScatterSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::XYSeries" fullname="QtCharts.ScatterSeries" href="qml-qtcharts-scatterseries.html" status="active" access="public" documented="true" title="ScatterSeries" fulltitle="ScatterSeries" subtitle="" brief="Type presents data in scatter charts">
            <qmlproperty name="borderColor" fullname="QtCharts.ScatterSeries.borderColor" href="qml-qtcharts-scatterseries.html#borderColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="borderWidth" fullname="QtCharts.ScatterSeries.borderWidth" href="qml-qtcharts-scatterseries.html#borderWidth-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="brush" fullname="QtCharts.ScatterSeries.brush" href="qml-qtcharts-scatterseries.html#brush-prop" status="active" access="public" documented="true" type="brush" attached="false" writable="true"/>
            <qmlproperty name="brushFilename" fullname="QtCharts.ScatterSeries.brushFilename" href="qml-qtcharts-scatterseries.html#brushFilename-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="count" fullname="QtCharts.ScatterSeries.count" href="qml-qtcharts-scatterseries.html#count-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="markerShape" fullname="QtCharts.ScatterSeries.markerShape" href="qml-qtcharts-scatterseries.html#markerShape-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="markerSize" fullname="QtCharts.ScatterSeries.markerSize" href="qml-qtcharts-scatterseries.html#markerSize-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
        </qmlclass>
        <page name="qtcharts-pointconfiguration-example.html" href="qtcharts-pointconfiguration-example.html" status="active" location="examples-pointconfiguration.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Selected Point Configuration" fulltitle="Selected Point Configuration" subtitle="" brief="Shows how to modify the configuration of individual points">
            <contents name="features-demonstrated" title="Features Demonstrated" level="1"/>
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="subclass-qmainwindow" title="Subclass QMainWindow" level="1"/>
            <contents name="create-a-line-series" title="Create a Line Series" level="1"/>
            <contents name="create-the-point-configuration-controls" title="Create the Point Configuration Controls" level="1"/>
            <contents name="populate-the-controls-upon-selecting-a-point" title="Populate the Controls upon Selecting a Point" level="1"/>
            <contents name="provide-the-logic-to-configure-the-selected-point" title="Provide the Logic to Configure the Selected Point" level="1"/>
            <contents name="create-the-chart-and-lay-out-the-controls" title="Create the Chart and Lay out the Controls" level="1"/>
        </page>
        <qmlclass name="SplineSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::XYSeries" fullname="QtCharts.SplineSeries" href="qml-qtcharts-splineseries.html" status="active" access="public" documented="true" title="SplineSeries" fulltitle="SplineSeries" subtitle="" brief="Presents data as spline charts">
            <qmlproperty name="capStyle" fullname="QtCharts.SplineSeries.capStyle" href="qml-qtcharts-splineseries.html#capStyle-prop" status="active" access="public" documented="true" type="Qt::PenCapStyle" attached="false" writable="true"/>
            <qmlproperty name="count" fullname="QtCharts.SplineSeries.count" href="qml-qtcharts-splineseries.html#count-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="style" fullname="QtCharts.SplineSeries.style" href="qml-qtcharts-splineseries.html#style-prop" status="active" access="public" documented="true" type="Qt::PenStyle" attached="false" writable="true"/>
            <qmlproperty name="width" fullname="QtCharts.SplineSeries.width" href="qml-qtcharts-splineseries.html#width-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="StackedBarSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractBarSeries" fullname="QtCharts.StackedBarSeries" href="qml-qtcharts-stackedbarseries.html" status="active" access="public" documented="true" title="StackedBarSeries" fulltitle="StackedBarSeries" subtitle="" brief="Presents a series of data as vertically stacked bars, with one bar per category"/>
        <page name="qtcharts-qmlaxes-example.html" href="qtcharts-qmlaxes-example.html" status="active" location="examples-qmlaxes.qdoc" documented="true" groups="charts_qml_gallery_example" subtype="page" title="Using Axes with QML" fulltitle="Using Axes with QML" subtitle="" brief="Demonstrates how to use axes in your QML application"/>
        <page name="qtcharts-barmodelmapper-example.html" href="qtcharts-barmodelmapper-example.html" status="active" location="examples-barmodelmapper.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Using Data Models with Bar Charts" fulltitle="Using Data Models with Bar Charts" subtitle="" brief="Shows how to use QAbstractItemModel derived model as the data for a bar series"/>
        <page name="qtcharts-legendmarkers-example.html" href="qtcharts-legendmarkers-example.html" status="active" location="examples-legendmarkers.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Using Legend Markers" fulltitle="Using Legend Markers" subtitle="" brief="Shows how to make use of legend markers"/>
        <page name="qtcharts-pointsselectionandmarkers-example.html" href="qtcharts-pointsselectionandmarkers-example.html" status="active" location="examples-pointsselectionandmarkers.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Using Light Markers and Points Selection" fulltitle="Using Light Markers and Points Selection" subtitle="" brief="Shows how to use light markers and points selection for a series"/>
        <page name="qtcharts-qmlf1legends-example.html" href="qtcharts-qmlf1legends-example.html" status="active" location="examples-qmlf1legends.qdoc" documented="true" groups="charts_qml_gallery_example" subtype="page" title="Using List Models as Data Sources in QML" fulltitle="Using List Models as Data Sources in QML" subtitle="" brief="Implements an F1 Legends Chart to demonstrate List Models as Data Sources"/>
        <page name="qtcharts-logvalueaxis-example.html" href="qtcharts-logvalueaxis-example.html" status="active" location="examples-logvalueaxis.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Using Logarithmic Value Axes" fulltitle="Using Logarithmic Value Axes" subtitle="" brief="Shows how to use QLogValueAxis"/>
        <page name="qtcharts-modeldata-example.html" href="qtcharts-modeldata-example.html" status="active" location="examples-modeldata.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Using Model Data" fulltitle="Using Model Data" subtitle="" brief="Shows how to use the QAbstractItemModel derived model as series data"/>
        <page name="qtcharts-multiaxis-example.html" href="qtcharts-multiaxis-example.html" status="active" location="examples-multiaxis.qdoc" documented="true" groups="charts_widget_gallery_example" subtype="page" title="Using Multiple Axes" fulltitle="Using Multiple Axes" subtitle="" brief="Shows how to create a chart with a vertical axis for each series"/>
        <page name="qtcharts-qmlpolarchart-example.html" href="qtcharts-qmlpolarchart-example.html" status="active" location="examples-qmlpolarchart.qdoc" documented="true" groups="charts_qml_gallery_example" subtype="page" title="Using Polar Charts with QML" fulltitle="Using Polar Charts with QML" subtitle="" brief="Shows how to make a few different polar chart in your QML application"/>
        <qmlclass name="VBarModelMapper" qml-module-name="QtCharts" fullname="QtCharts.VBarModelMapper" href="qml-qtcharts-vbarmodelmapper.html" status="active" access="public" documented="true" title="VBarModelMapper" fulltitle="VBarModelMapper" subtitle="" brief="Vertical model mapper for bar series">
            <qmlproperty name="firstBarSetColumn" fullname="QtCharts.VBarModelMapper.firstBarSetColumn" href="qml-qtcharts-vbarmodelmapper.html#firstBarSetColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="firstRow" fullname="QtCharts.VBarModelMapper.firstRow" href="qml-qtcharts-vbarmodelmapper.html#firstRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="lastBarSetColumn" fullname="QtCharts.VBarModelMapper.lastBarSetColumn" href="qml-qtcharts-vbarmodelmapper.html#lastBarSetColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="model" fullname="QtCharts.VBarModelMapper.model" href="qml-qtcharts-vbarmodelmapper.html#model-prop" status="active" access="public" documented="true" type="SomeModel" attached="false" writable="true"/>
            <qmlproperty name="rowCount" fullname="QtCharts.VBarModelMapper.rowCount" href="qml-qtcharts-vbarmodelmapper.html#rowCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="series" fullname="QtCharts.VBarModelMapper.series" href="qml-qtcharts-vbarmodelmapper.html#series-prop" status="active" access="public" documented="true" type="AbstractBarSeries" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="VBoxPlotModelMapper" qml-module-name="QtCharts" fullname="QtCharts.VBoxPlotModelMapper" href="qml-qtcharts-vboxplotmodelmapper.html" status="active" access="public" documented="true" title="VBoxPlotModelMapper" fulltitle="VBoxPlotModelMapper" subtitle="" brief="Vertical model mapper for box plot series">
            <qmlproperty name="firstBoxSetColumn" fullname="QtCharts.VBoxPlotModelMapper.firstBoxSetColumn" href="qml-qtcharts-vboxplotmodelmapper.html#firstBoxSetColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="firstRow" fullname="QtCharts.VBoxPlotModelMapper.firstRow" href="qml-qtcharts-vboxplotmodelmapper.html#firstRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="lastBoxSetColumn" fullname="QtCharts.VBoxPlotModelMapper.lastBoxSetColumn" href="qml-qtcharts-vboxplotmodelmapper.html#lastBoxSetColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="model" fullname="QtCharts.VBoxPlotModelMapper.model" href="qml-qtcharts-vboxplotmodelmapper.html#model-prop" status="active" access="public" documented="true" type="SomeModel" attached="false" writable="true"/>
            <qmlproperty name="rowCount" fullname="QtCharts.VBoxPlotModelMapper.rowCount" href="qml-qtcharts-vboxplotmodelmapper.html#rowCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="series" fullname="QtCharts.VBoxPlotModelMapper.series" href="qml-qtcharts-vboxplotmodelmapper.html#series-prop" status="active" access="public" documented="true" type="AbstractBarSeries" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="VCandlestickModelMapper" qml-module-name="QtCharts" fullname="QtCharts.VCandlestickModelMapper" href="qml-qtcharts-vcandlestickmodelmapper.html" status="active" access="public" since="QtCharts 2.2" documented="true" title="VCandlestickModelMapper" fulltitle="VCandlestickModelMapper" subtitle="" brief="Vertical model mapper for a candlestick series">
            <qmlproperty name="closeRow" fullname="QtCharts.VCandlestickModelMapper.closeRow" href="qml-qtcharts-vcandlestickmodelmapper.html#closeRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="firstSetColumn" fullname="QtCharts.VCandlestickModelMapper.firstSetColumn" href="qml-qtcharts-vcandlestickmodelmapper.html#firstSetColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="highRow" fullname="QtCharts.VCandlestickModelMapper.highRow" href="qml-qtcharts-vcandlestickmodelmapper.html#highRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="lastSetColumn" fullname="QtCharts.VCandlestickModelMapper.lastSetColumn" href="qml-qtcharts-vcandlestickmodelmapper.html#lastSetColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="lowRow" fullname="QtCharts.VCandlestickModelMapper.lowRow" href="qml-qtcharts-vcandlestickmodelmapper.html#lowRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="model" fullname="QtCharts.VCandlestickModelMapper.model" href="qml-qtcharts-vcandlestickmodelmapper.html#model-prop" status="active" access="public" documented="true" type="QAbstractItemModel" attached="false" writable="true"/>
            <qmlproperty name="openRow" fullname="QtCharts.VCandlestickModelMapper.openRow" href="qml-qtcharts-vcandlestickmodelmapper.html#openRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="series" fullname="QtCharts.VCandlestickModelMapper.series" href="qml-qtcharts-vcandlestickmodelmapper.html#series-prop" status="active" access="public" documented="true" type="CandlestickSeries" attached="false" writable="true"/>
            <qmlproperty name="timestampRow" fullname="QtCharts.VCandlestickModelMapper.timestampRow" href="qml-qtcharts-vcandlestickmodelmapper.html#timestampRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="VPieModelMapper" qml-module-name="QtCharts" fullname="QtCharts.VPieModelMapper" href="qml-qtcharts-vpiemodelmapper.html" status="active" access="public" documented="true" title="VPieModelMapper" fulltitle="VPieModelMapper" subtitle="" brief="Vertical model mapper for pie series">
            <qmlproperty name="firstRow" fullname="QtCharts.VPieModelMapper.firstRow" href="qml-qtcharts-vpiemodelmapper.html#firstRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="labelsColumn" fullname="QtCharts.VPieModelMapper.labelsColumn" href="qml-qtcharts-vpiemodelmapper.html#labelsColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="model" fullname="QtCharts.VPieModelMapper.model" href="qml-qtcharts-vpiemodelmapper.html#model-prop" status="active" access="public" documented="true" type="SomeModel" attached="false" writable="true"/>
            <qmlproperty name="rowCount" fullname="QtCharts.VPieModelMapper.rowCount" href="qml-qtcharts-vpiemodelmapper.html#rowCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="series" fullname="QtCharts.VPieModelMapper.series" href="qml-qtcharts-vpiemodelmapper.html#series-prop" status="active" access="public" documented="true" type="PieSeries" attached="false" writable="true"/>
            <qmlproperty name="valuesColumn" fullname="QtCharts.VPieModelMapper.valuesColumn" href="qml-qtcharts-vpiemodelmapper.html#valuesColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="VXYModelMapper" qml-module-name="QtCharts" fullname="QtCharts.VXYModelMapper" href="qml-qtcharts-vxymodelmapper.html" status="active" access="public" documented="true" title="VXYModelMapper" fulltitle="VXYModelMapper" subtitle="" brief="A vertical model mapper for XYSeries">
            <qmlproperty name="firstRow" fullname="QtCharts.VXYModelMapper.firstRow" href="qml-qtcharts-vxymodelmapper.html#firstRow-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="model" fullname="QtCharts.VXYModelMapper.model" href="qml-qtcharts-vxymodelmapper.html#model-prop" status="active" access="public" documented="true" type="SomeModel" attached="false" writable="true"/>
            <qmlproperty name="rowCount" fullname="QtCharts.VXYModelMapper.rowCount" href="qml-qtcharts-vxymodelmapper.html#rowCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="series" fullname="QtCharts.VXYModelMapper.series" href="qml-qtcharts-vxymodelmapper.html#series-prop" status="active" access="public" documented="true" type="XYSeries" attached="false" writable="true"/>
            <qmlproperty name="xColumn" fullname="QtCharts.VXYModelMapper.xColumn" href="qml-qtcharts-vxymodelmapper.html#xColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="yColumn" fullname="QtCharts.VXYModelMapper.yColumn" href="qml-qtcharts-vxymodelmapper.html#yColumn-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="ValueAxis" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractAxis" fullname="QtCharts.ValueAxis" href="qml-qtcharts-valueaxis.html" status="active" access="public" documented="true" title="ValueAxis" fulltitle="ValueAxis" subtitle="" brief="Adds values to a chart's axes">
            <function name="applyNiceNumbers" fullname="QtCharts.ValueAxis.applyNiceNumbers" href="qml-qtcharts-valueaxis.html#applyNiceNumbers-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="rangeChanged" fullname="QtCharts.ValueAxis.rangeChanged" href="qml-qtcharts-valueaxis.html#rangeChanged-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="string" name="min" default=""/>
                <parameter type="string" name="max" default=""/>
            </function>
            <qmlproperty name="labelFormat" fullname="QtCharts.ValueAxis.labelFormat" href="qml-qtcharts-valueaxis.html#labelFormat-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="max" fullname="QtCharts.ValueAxis.max" href="qml-qtcharts-valueaxis.html#max-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="min" fullname="QtCharts.ValueAxis.min" href="qml-qtcharts-valueaxis.html#min-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="minorTickCount" fullname="QtCharts.ValueAxis.minorTickCount" href="qml-qtcharts-valueaxis.html#minorTickCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="tickAnchor" fullname="QtCharts.ValueAxis.tickAnchor" href="qml-qtcharts-valueaxis.html#tickAnchor-prop" status="active" access="public" since="QtCharts 2.3" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="tickCount" fullname="QtCharts.ValueAxis.tickCount" href="qml-qtcharts-valueaxis.html#tickCount-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="tickInterval" fullname="QtCharts.ValueAxis.tickInterval" href="qml-qtcharts-valueaxis.html#tickInterval-prop" status="active" access="public" since="QtCharts 2.3" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="tickType" fullname="QtCharts.ValueAxis.tickType" href="qml-qtcharts-valueaxis.html#tickType-prop" status="active" access="public" since="QtCharts 2.3" documented="true" type="enumeration" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="XYPoint" qml-module-name="QtCharts" fullname="QtCharts.XYPoint" href="qml-qtcharts-xypoint.html" status="active" access="public" documented="true" title="XYPoint" fulltitle="XYPoint" subtitle="" brief="Initializes XY-series coordinate data">
            <qmlproperty name="x" fullname="QtCharts.XYPoint.x" href="qml-qtcharts-xypoint.html#x-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="y" fullname="QtCharts.XYPoint.y" href="qml-qtcharts-xypoint.html#y-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="XYSeries" qml-module-name="QtCharts" qml-base-type="QtCharts::AbstractSeries" fullname="QtCharts.XYSeries" href="qml-qtcharts-xyseries.html" status="active" access="public" documented="true" title="XYSeries" fulltitle="XYSeries" subtitle="" brief="A base type for line, spline, and scatter series">
            <function name="append" fullname="QtCharts.XYSeries.append" href="qml-qtcharts-xyseries.html#append-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="real" name="x" default=""/>
                <parameter type="real" name="y" default=""/>
            </function>
            <function name="at" fullname="QtCharts.XYSeries.at" href="qml-qtcharts-xyseries.html#at-method" status="active" access="public" documented="true" meta="qmlmethod" type="QPointF">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="clicked" fullname="QtCharts.XYSeries.clicked" href="qml-qtcharts-xyseries.html#clicked-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="point" name="point" default=""/>
            </function>
            <function name="doubleClicked" fullname="QtCharts.XYSeries.doubleClicked" href="qml-qtcharts-xyseries.html#doubleClicked-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="point" name="point" default=""/>
            </function>
            <function name="hovered" fullname="QtCharts.XYSeries.hovered" href="qml-qtcharts-xyseries.html#hovered-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="point" name="point" default=""/>
                <parameter type="bool" name="state" default=""/>
            </function>
            <function name="insert" fullname="QtCharts.XYSeries.insert" href="qml-qtcharts-xyseries.html#insert-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
                <parameter type="real" name="x" default=""/>
                <parameter type="real" name="y" default=""/>
            </function>
            <function name="pointAdded" fullname="QtCharts.XYSeries.pointAdded" href="qml-qtcharts-xyseries.html#pointAdded-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="pointRemoved" fullname="QtCharts.XYSeries.pointRemoved" href="qml-qtcharts-xyseries.html#pointRemoved-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="pointReplaced" fullname="QtCharts.XYSeries.pointReplaced" href="qml-qtcharts-xyseries.html#pointReplaced-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="pointsRemoved" fullname="QtCharts.XYSeries.pointsRemoved" href="qml-qtcharts-xyseries.html#pointsRemoved-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="int" name="index" default=""/>
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="pointsReplaced" fullname="QtCharts.XYSeries.pointsReplaced" href="qml-qtcharts-xyseries.html#pointsReplaced-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="pressed" fullname="QtCharts.XYSeries.pressed" href="qml-qtcharts-xyseries.html#pressed-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="point" name="point" default=""/>
            </function>
            <function name="released" fullname="QtCharts.XYSeries.released" href="qml-qtcharts-xyseries.html#released-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="point" name="point" default=""/>
            </function>
            <function name="remove" fullname="QtCharts.XYSeries.remove" href="qml-qtcharts-xyseries.html#remove-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="real" name="x" default=""/>
                <parameter type="real" name="y" default=""/>
            </function>
            <function name="remove" fullname="QtCharts.XYSeries.remove" href="qml-qtcharts-xyseries.html#remove-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="removePoints" fullname="QtCharts.XYSeries.removePoints" href="qml-qtcharts-xyseries.html#removePoints-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="int" name="index" default=""/>
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="replace" fullname="QtCharts.XYSeries.replace" href="qml-qtcharts-xyseries.html#replace-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="real" name="oldX" default=""/>
                <parameter type="real" name="oldY" default=""/>
                <parameter type="real" name="newX" default=""/>
                <parameter type="real" name="newY" default=""/>
            </function>
            <qmlproperty name="axisAngular" fullname="QtCharts.XYSeries.axisAngular" href="qml-qtcharts-xyseries.html#axisAngular-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisRadial" fullname="QtCharts.XYSeries.axisRadial" href="qml-qtcharts-xyseries.html#axisRadial-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisX" fullname="QtCharts.XYSeries.axisX" href="qml-qtcharts-xyseries.html#axisX-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisXTop" fullname="QtCharts.XYSeries.axisXTop" href="qml-qtcharts-xyseries.html#axisXTop-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisY" fullname="QtCharts.XYSeries.axisY" href="qml-qtcharts-xyseries.html#axisY-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="axisYRight" fullname="QtCharts.XYSeries.axisYRight" href="qml-qtcharts-xyseries.html#axisYRight-prop" status="active" access="public" documented="true" type="AbstractAxis" attached="false" writable="true"/>
            <qmlproperty name="bestFitLineColor" fullname="QtCharts.XYSeries.bestFitLineColor" href="qml-qtcharts-xyseries.html#bestFitLineColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="bestFitLineVisible" fullname="QtCharts.XYSeries.bestFitLineVisible" href="qml-qtcharts-xyseries.html#bestFitLineVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="color" fullname="QtCharts.XYSeries.color" href="qml-qtcharts-xyseries.html#color-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
            <qmlproperty name="pointLabelsClipping" fullname="QtCharts.XYSeries.pointLabelsClipping" href="qml-qtcharts-xyseries.html#pointLabelsClipping-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="pointLabelsColor" fullname="QtCharts.XYSeries.pointLabelsColor" href="qml-qtcharts-xyseries.html#pointLabelsColor-prop" status="active" access="public" documented="true" type="font" attached="false" writable="true"/>
            <qmlproperty name="pointLabelsFont" fullname="QtCharts.XYSeries.pointLabelsFont" href="qml-qtcharts-xyseries.html#pointLabelsFont-prop" status="active" access="public" documented="true" type="font" attached="false" writable="true"/>
            <qmlproperty name="pointLabelsFormat" fullname="QtCharts.XYSeries.pointLabelsFormat" href="qml-qtcharts-xyseries.html#pointLabelsFormat-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="pointLabelsVisible" fullname="QtCharts.XYSeries.pointLabelsVisible" href="qml-qtcharts-xyseries.html#pointLabelsVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="pointsVisible" fullname="QtCharts.XYSeries.pointsVisible" href="qml-qtcharts-xyseries.html#pointsVisible-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="selectedColor" fullname="QtCharts.XYSeries.selectedColor" href="qml-qtcharts-xyseries.html#selectedColor-prop" status="active" access="public" documented="true" type="color" attached="false" writable="true"/>
        </qmlclass>
        <page name="zoomlinechart" href="qtcharts-zoomlinechart-example.html" status="active" location="examples-zoomlinechart.qdoc" documented="true" groups="category Data Visualization,qtcharts_examples" subtype="example" title="Zoom Line Example" fulltitle="Zoom Line Example" subtitle="" brief="Example shows how to create your own custom zooming effect">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="customizing-zooming-effects" title="Customizing Zooming Effects" level="1"/>
            <page name="zoomlinechart/chart.cpp" href="qtcharts-zoomlinechart-chart-cpp.html" status="active" subtype="file" title="" fulltitle="chart.cpp Example File" subtitle="zoomlinechart/chart.cpp"/>
            <page name="zoomlinechart/chart.h" href="qtcharts-zoomlinechart-chart-h.html" status="active" subtype="file" title="" fulltitle="chart.h Example File" subtitle="zoomlinechart/chart.h"/>
            <page name="zoomlinechart/chartview.cpp" href="qtcharts-zoomlinechart-chartview-cpp.html" status="active" subtype="file" title="" fulltitle="chartview.cpp Example File" subtitle="zoomlinechart/chartview.cpp"/>
            <page name="zoomlinechart/chartview.h" href="qtcharts-zoomlinechart-chartview-h.html" status="active" subtype="file" title="" fulltitle="chartview.h Example File" subtitle="zoomlinechart/chartview.h"/>
            <page name="zoomlinechart/main.cpp" href="qtcharts-zoomlinechart-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="zoomlinechart/main.cpp"/>
            <page name="zoomlinechart/CMakeLists.txt" href="qtcharts-zoomlinechart-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="zoomlinechart/CMakeLists.txt"/>
            <page name="zoomlinechart/zoomlinechart.pro" href="qtcharts-zoomlinechart-zoomlinechart-pro.html" status="active" subtype="file" title="" fulltitle="zoomlinechart.pro Example File" subtitle="zoomlinechart/zoomlinechart.pro"/>
        </page>
        <group name="category Data Visualization" href="category-data-visualization.html" status="internal" seen="false" title=""/>
        <group name="category Mobile" href="category-mobile.html" status="internal" seen="false" title=""/>
        <group name="changes-qt-5-to-6" href="changes-qt-5-to-6.html" status="internal" seen="false" title=""/>
        <group name="charts_qml_gallery_example" href="charts-qml-gallery-example.html" status="internal" seen="false" title=""/>
        <group name="charts_widget_gallery_example" href="charts-widget-gallery-example.html" status="internal" seen="false" title=""/>
        <group name="explanations-graphicsandmultimedia" href="explanations-graphicsandmultimedia.html" status="internal" seen="false" title=""/>
        <group name="modules" href="modules.html" status="internal" seen="false" title=""/>
        <group name="qmlmodules" href="qmlmodules.html" status="internal" seen="false" title=""/>
        <group name="qtcharts_examples" href="qtcharts-examples.html" status="active" location="qtcharts.qdoc" documented="true" seen="true" title="Qt Charts Examples" brief="Examples for the Qt Charts"/>
        <module name="QtCharts" href="qtcharts-module.html" status="active" location="qtcharts.qdoc" documented="true" groups="modules" seen="true" title="Qt Charts C++ Classes" brief="C++ classes for the Qt Charts API"/>
        <qmlmodule name="QtCharts" qml-module-name="QtCharts" qml-module-version="2.7" href="qtcharts-qmlmodule.html" status="active" location="qtcharts.qdoc" documented="true" groups="qmlmodules" seen="true" title="Qt Charts QML Types" brief="QML types for the Qt Charts API">
            <contents name="qml-types" title="QML Types" level="1"/>
        </qmlmodule>
    </namespace>
</INDEX>
