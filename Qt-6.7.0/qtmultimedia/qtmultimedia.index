<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="https://doc.qt.io/qt" title="Qt Multimedia Documentation" version="6.7.0" project="QtMultimedia" indexTitle="Qt Multimedia">
    <namespace name="" status="active" access="public" module="qtmultimedia">
        <function name="operator+" href="qmediatimerange.html#operator-2b" status="active" access="public" location="qmediatimerange.h" documented="true" related="0" meta="plain" type="QMediaTimeRange" signature="QMediaTimeRange operator+(const QMediaTimeRange &amp;r1, const QMediaTimeRange &amp;r2)">
            <parameter type="const QMediaTimeRange &amp;" name="r1" default=""/>
            <parameter type="const QMediaTimeRange &amp;" name="r2" default=""/>
        </function>
        <function name="operator-" href="qmediatimerange.html#operator-" status="active" access="public" location="qmediatimerange.h" documented="true" related="1" meta="plain" type="QMediaTimeRange" signature="QMediaTimeRange operator-(const QMediaTimeRange &amp;r1, const QMediaTimeRange &amp;r2)">
            <parameter type="const QMediaTimeRange &amp;" name="r1" default=""/>
            <parameter type="const QMediaTimeRange &amp;" name="r2" default=""/>
        </function>
        <page name="https://en.wikipedia.org/wiki/AV1" href="https://en.wikipedia.org/wiki/AV1" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="AOMedia Video 1" fulltitle="AOMedia Video 1" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Advanced_Audio_Coding" href="https://en.wikipedia.org/wiki/Advanced_Audio_Coding" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Advanced Audio Coding" fulltitle="Advanced Audio Coding" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Advanced_Video_Coding" href="https://en.wikipedia.org/wiki/Advanced_Video_Coding" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Advanced Video Coding" fulltitle="Advanced Video Coding" subtitle=""/>
        <page name="https://developer.android.com/guide/topics/media/media-formats" href="https://developer.android.com/guide/topics/media/media-formats" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Android supported media formats" fulltitle="Android supported media formats" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/ALAC" href="https://en.wikipedia.org/wiki/ALAC" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Apple Lossless Audio Codec" fulltitle="Apple Lossless Audio Codec" subtitle=""/>
        <page name="audiodevices" href="qtmultimedia-audiodevices-example.html" status="active" location="audiodevices.qdoc" documented="true" groups="audio_examples,category Multimedia,multimedia_examples" subtype="example" title="Audio Devices Example" fulltitle="Audio Devices Example" subtitle="" brief="Testing the available audio devices and their configuration">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page name="audiodevices/audiodevices.cpp" href="qtmultimedia-audiodevices-audiodevices-cpp.html" status="active" subtype="file" title="" fulltitle="audiodevices.cpp Example File" subtitle="audiodevices/audiodevices.cpp"/>
            <page name="audiodevices/audiodevices.h" href="qtmultimedia-audiodevices-audiodevices-h.html" status="active" subtype="file" title="" fulltitle="audiodevices.h Example File" subtitle="audiodevices/audiodevices.h"/>
            <page name="audiodevices/audiodevicesbase.ui" href="qtmultimedia-audiodevices-audiodevicesbase-ui.html" status="active" subtype="file" title="" fulltitle="audiodevicesbase.ui Example File" subtitle="audiodevices/audiodevicesbase.ui"/>
            <page name="audiodevices/main.cpp" href="qtmultimedia-audiodevices-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="audiodevices/main.cpp"/>
            <page name="audiodevices/CMakeLists.txt" href="qtmultimedia-audiodevices-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="audiodevices/CMakeLists.txt"/>
            <page name="audiodevices/audiodevices.pro" href="qtmultimedia-audiodevices-audiodevices-pro.html" status="active" subtype="file" title="" fulltitle="audiodevices.pro Example File" subtitle="audiodevices/audiodevices.pro"/>
        </page>
        <page name="audiooutput" href="qtmultimedia-audiooutput-example.html" status="active" location="audiooutput.qdoc" documented="true" groups="audio_examples,category Multimedia,multimedia_examples" subtype="example" title="Audio Output Example" fulltitle="Audio Output Example" subtitle="" brief="Enabling audio playback using the QAudioSink class">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page name="audiooutput/audiooutput.cpp" href="qtmultimedia-audiooutput-audiooutput-cpp.html" status="active" subtype="file" title="" fulltitle="audiooutput.cpp Example File" subtitle="audiooutput/audiooutput.cpp"/>
            <page name="audiooutput/audiooutput.h" href="qtmultimedia-audiooutput-audiooutput-h.html" status="active" subtype="file" title="" fulltitle="audiooutput.h Example File" subtitle="audiooutput/audiooutput.h"/>
            <page name="audiooutput/main.cpp" href="qtmultimedia-audiooutput-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="audiooutput/main.cpp"/>
            <page name="audiooutput/CMakeLists.txt" href="qtmultimedia-audiooutput-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="audiooutput/CMakeLists.txt"/>
            <page name="audiooutput/audiooutput.pro" href="qtmultimedia-audiooutput-audiooutput-pro.html" status="active" subtype="file" title="" fulltitle="audiooutput.pro Example File" subtitle="audiooutput/audiooutput.pro"/>
        </page>
        <page name="audiooverview.html" href="audiooverview.html" status="active" location="audiooverview.qdoc" documented="true" groups="explanations-graphicsandmultimedia" subtype="page" title="Audio Overview" fulltitle="Audio Overview" subtitle="" brief="Playback, recording and processing of Audio">
            <target name="raw-access" title="raw access"/>
            <contents name="audio-features" title="Audio Features" level="1"/>
            <contents name="audio-implementation-details" title="Audio Implementation Details" level="1"/>
            <contents name="playing-compressed-audio" title="Playing Compressed Audio" level="2"/>
            <contents name="recording-audio-to-a-file" title="Recording Audio to a File" level="2"/>
            <contents name="low-latency-sound-effects" title="Low Latency Sound Effects" level="2"/>
            <contents name="low-level-audio-playback-and-recording" title="Low Level Audio Playback and Recording" level="2"/>
            <contents name="push-and-pull" title="Push and Pull" level="3"/>
            <contents name="decoding-compressed-audio-to-memory" title="Decoding Compressed Audio to Memory" level="2"/>
            <contents name="spatial-audio" title="Spatial Audio" level="2"/>
            <contents name="reference-documentation" title="Reference Documentation" level="1"/>
            <contents name="c-classes" title="C++ Classes" level="2"/>
            <contents name="qml-types" title="QML Types" level="2"/>
            <contents name="examples" title="Examples" level="2"/>
        </page>
        <page name="https://doc.qt.io/qt-5/qml-qtmultimedia-audio.html" href="https://doc.qt.io/qt-5/qml-qtmultimedia-audio.html" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Audio QML Type" fulltitle="Audio QML Type" subtitle=""/>
        <page name="audiorecorder" href="qtmultimedia-audiorecorder-example.html" status="active" location="audiorecorder.qdoc" documented="true" groups="audio_examples,category Multimedia,multimedia_examples" subtype="example" title="Audio Recorder Example" fulltitle="Audio Recorder Example" subtitle="" brief="Discovering the available devices and supported codecs">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="displaying-the-window-and-audio-settings" title="Displaying the Window and Audio Settings" level="1"/>
            <contents name="recording-audio" title="Recording Audio" level="1"/>
            <page name="audiorecorder/audiolevel.cpp" href="qtmultimedia-audiorecorder-audiolevel-cpp.html" status="active" subtype="file" title="" fulltitle="audiolevel.cpp Example File" subtitle="audiorecorder/audiolevel.cpp"/>
            <page name="audiorecorder/audiolevel.h" href="qtmultimedia-audiorecorder-audiolevel-h.html" status="active" subtype="file" title="" fulltitle="audiolevel.h Example File" subtitle="audiorecorder/audiolevel.h"/>
            <page name="audiorecorder/audiorecorder.cpp" href="qtmultimedia-audiorecorder-audiorecorder-cpp.html" status="active" subtype="file" title="" fulltitle="audiorecorder.cpp Example File" subtitle="audiorecorder/audiorecorder.cpp"/>
            <page name="audiorecorder/audiorecorder.h" href="qtmultimedia-audiorecorder-audiorecorder-h.html" status="active" subtype="file" title="" fulltitle="audiorecorder.h Example File" subtitle="audiorecorder/audiorecorder.h"/>
            <page name="audiorecorder/audiorecorder.ui" href="qtmultimedia-audiorecorder-audiorecorder-ui.html" status="active" subtype="file" title="" fulltitle="audiorecorder.ui Example File" subtitle="audiorecorder/audiorecorder.ui"/>
            <page name="audiorecorder/main.cpp" href="qtmultimedia-audiorecorder-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="audiorecorder/main.cpp"/>
            <page name="audiorecorder/CMakeLists.txt" href="qtmultimedia-audiorecorder-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="audiorecorder/CMakeLists.txt"/>
            <page name="audiorecorder/audiorecorder.pro" href="qtmultimedia-audiorecorder-audiorecorder-pro.html" status="active" subtype="file" title="" fulltitle="audiorecorder.pro Example File" subtitle="audiorecorder/audiorecorder.pro"/>
        </page>
        <page name="audiosource" href="qtmultimedia-audiosource-example.html" status="active" location="audiosource.qdoc" documented="true" groups="audio_examples,category Multimedia,multimedia_examples" subtype="example" title="Audio Source Example" fulltitle="Audio Source Example" subtitle="" brief="Recording audio using the QAudioSource class">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page name="audiosource/audiosource.cpp" href="qtmultimedia-audiosource-audiosource-cpp.html" status="active" subtype="file" title="" fulltitle="audiosource.cpp Example File" subtitle="audiosource/audiosource.cpp"/>
            <page name="audiosource/audiosource.h" href="qtmultimedia-audiosource-audiosource-h.html" status="active" subtype="file" title="" fulltitle="audiosource.h Example File" subtitle="audiosource/audiosource.h"/>
            <page name="audiosource/main.cpp" href="qtmultimedia-audiosource-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="audiosource/main.cpp"/>
            <page name="audiosource/CMakeLists.txt" href="qtmultimedia-audiosource-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="audiosource/CMakeLists.txt"/>
            <page name="audiosource/audiosource.pro" href="qtmultimedia-audiosource-audiosource-pro.html" status="active" subtype="file" title="" fulltitle="audiosource.pro Example File" subtitle="audiosource/audiosource.pro"/>
        </page>
        <page name="https://en.wikipedia.org/wiki/Audio_Video_Interleave" href="https://en.wikipedia.org/wiki/Audio_Video_Interleave" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Audio Video Interleave" fulltitle="Audio Video Interleave" subtitle=""/>
        <qmlclass name="AudioInput" qml-module-name="QtMultimedia" fullname="QtMultimedia.AudioInput" href="qml-qtmultimedia-audioinput.html" status="active" access="public" documented="true" groups="multimedia_audio_qml,multimedia_qml" title="AudioInput" fulltitle="AudioInput" subtitle="" brief="An audio input to be used for capturing audio in a capture session">
            <qmlproperty name="device" fullname="QtMultimedia.AudioInput.device" href="qml-qtmultimedia-audioinput.html#device-prop" status="active" access="public" documented="true" type="AudioDevice" attached="false" writable="true"/>
            <qmlproperty name="muted" fullname="QtMultimedia.AudioInput.muted" href="qml-qtmultimedia-audioinput.html#muted-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="volume" fullname="QtMultimedia.AudioInput.volume" href="qml-qtmultimedia-audioinput.html#volume-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="AudioOutput" qml-module-name="QtMultimedia" fullname="QtMultimedia.AudioOutput" href="qml-qtmultimedia-audiooutput.html" status="active" access="public" documented="true" groups="multimedia_audio_qml,multimedia_qml" title="AudioOutput" fulltitle="AudioOutput" subtitle="" brief="An audio output to be used for playback or monitoring of a capture session">
            <qmlproperty name="device" fullname="QtMultimedia.AudioOutput.device" href="qml-qtmultimedia-audiooutput.html#device-prop" status="active" access="public" documented="true" type="AudioDevice" attached="false" writable="true"/>
            <qmlproperty name="muted" fullname="QtMultimedia.AudioOutput.muted" href="qml-qtmultimedia-audiooutput.html#muted-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="volume" fullname="QtMultimedia.AudioOutput.volume" href="qml-qtmultimedia-audiooutput.html#volume-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
        </qmlclass>
        <qmlclass name="Camera" qml-module-name="QtMultimedia" fullname="QtMultimedia.Camera" href="qml-qtmultimedia-camera.html" status="active" access="public" documented="true" groups="camera_qml,multimedia_qml" title="Camera" fulltitle="Camera" subtitle="" brief="An interface for camera settings related to focus and zoom">
            <function name="colorTemperature" fullname="QtMultimedia.Camera.colorTemperature" href="qml-qtmultimedia-camera.html#colorTemperature-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="errorOccurred" fullname="QtMultimedia.Camera.errorOccurred" href="qml-qtmultimedia-camera.html#errorOccurred-signal" status="active" access="public" documented="true" meta="qmlsignal" type="void">
                <parameter type="Camera::Error" name="error" default=""/>
                <parameter type="string" name="errorString" default=""/>
            </function>
            <function name="isExposureModeSupported" fullname="QtMultimedia.Camera.isExposureModeSupported" href="qml-qtmultimedia-camera.html#isExposureModeSupported-method" status="active" access="public" documented="true" meta="qmlmethod" type="bool">
                <parameter type="ExposureMode" name="mode" default=""/>
            </function>
            <function name="isFlashModeSupported" fullname="QtMultimedia.Camera.isFlashModeSupported" href="qml-qtmultimedia-camera.html#isFlashModeSupported-method" status="active" access="public" documented="true" meta="qmlmethod" type="bool">
                <parameter type="FlashMode" name="mode" default=""/>
            </function>
            <function name="isFlashReady" fullname="QtMultimedia.Camera.isFlashReady" href="qml-qtmultimedia-camera.html#isFlashReady-method" status="active" access="public" documented="true" meta="qmlmethod" type="bool"/>
            <function name="isFocusModeSupported" fullname="QtMultimedia.Camera.isFocusModeSupported" href="qml-qtmultimedia-camera.html#isFocusModeSupported-method" status="active" access="public" documented="true" meta="qmlmethod" type="bool">
                <parameter type="FocusMode" name="mode" default=""/>
            </function>
            <function name="isTorchModeSupported" fullname="QtMultimedia.Camera.isTorchModeSupported" href="qml-qtmultimedia-camera.html#isTorchModeSupported-method" status="active" access="public" documented="true" meta="qmlmethod" type="bool">
                <parameter type="TorchMode" name="mode" default=""/>
            </function>
            <function name="isWhiteBalanceModeSupported" fullname="QtMultimedia.Camera.isWhiteBalanceModeSupported" href="qml-qtmultimedia-camera.html#isWhiteBalanceModeSupported-method" status="active" access="public" documented="true" meta="qmlmethod" type="bool">
                <parameter type="WhiteBalanceMode" name="mode" default=""/>
            </function>
            <function name="start" fullname="QtMultimedia.Camera.start" href="qml-qtmultimedia-camera.html#start-method" status="active" access="public" documented="true" meta="qmlmethod" type="void"/>
            <function name="stop" fullname="QtMultimedia.Camera.stop" href="qml-qtmultimedia-camera.html#stop-method" status="active" access="public" documented="true" meta="qmlmethod" type="void"/>
            <function name="zoomTo" fullname="QtMultimedia.Camera.zoomTo" href="qml-qtmultimedia-camera.html#zoomTo-method" status="active" access="public" documented="true" meta="qmlmethod" type="void">
                <parameter type="" name="factor" default=""/>
                <parameter type="" name="rate" default=""/>
            </function>
            <qmlproperty name="active" fullname="QtMultimedia.Camera.active" href="qml-qtmultimedia-camera.html#active-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="cameraDevice" fullname="QtMultimedia.Camera.cameraDevice" href="qml-qtmultimedia-camera.html#cameraDevice-prop" status="active" access="public" documented="true" type="cameraDevice" attached="false" writable="true"/>
            <qmlproperty name="cameraFormat" fullname="QtMultimedia.Camera.cameraFormat" href="qml-qtmultimedia-camera.html#cameraFormat-prop" status="active" access="public" documented="true" type="cameraFormat" attached="false" writable="true"/>
            <qmlproperty name="customFocusPoint" fullname="QtMultimedia.Camera.customFocusPoint" href="qml-qtmultimedia-camera.html#customFocusPoint-prop" status="active" access="public" documented="true" type="point" attached="false" writable="true"/>
            <qmlproperty name="error" fullname="QtMultimedia.Camera.error" href="qml-qtmultimedia-camera.html#error-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="false"/>
            <qmlproperty name="errorString" fullname="QtMultimedia.Camera.errorString" href="qml-qtmultimedia-camera.html#errorString-prop" status="active" access="public" documented="true" type="string" attached="false" writable="false"/>
            <qmlproperty name="exposureCompensation" fullname="QtMultimedia.Camera.exposureCompensation" href="qml-qtmultimedia-camera.html#exposureCompensation-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="exposureMode" fullname="QtMultimedia.Camera.exposureMode" href="qml-qtmultimedia-camera.html#exposureMode-prop" status="active" access="public" documented="true" type="ExposureMode" attached="false" writable="true" brief="Exposure mode being used"/>
            <qmlproperty name="exposureTime" fullname="QtMultimedia.Camera.exposureTime" href="qml-qtmultimedia-camera.html#exposureTime-prop" status="active" access="public" documented="true" type="float" attached="false" writable="false"/>
            <qmlproperty name="flashMode" fullname="QtMultimedia.Camera.flashMode" href="qml-qtmultimedia-camera.html#flashMode-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="flashReady" fullname="QtMultimedia.Camera.flashReady" href="qml-qtmultimedia-camera.html#flashReady-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="false"/>
            <qmlproperty name="focusDistance" fullname="QtMultimedia.Camera.focusDistance" href="qml-qtmultimedia-camera.html#focusDistance-prop" status="active" access="public" documented="true" type="float" attached="false" writable="true"/>
            <qmlproperty name="focusMode" fullname="QtMultimedia.Camera.focusMode" href="qml-qtmultimedia-camera.html#focusMode-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="focusPoint" fullname="QtMultimedia.Camera.focusPoint" href="qml-qtmultimedia-camera.html#focusPoint-prop" status="active" access="public" documented="true" type="point" attached="false" writable="false"/>
            <qmlproperty name="isoSensitivity" fullname="QtMultimedia.Camera.isoSensitivity" href="qml-qtmultimedia-camera.html#isoSensitivity-prop" status="active" access="public" documented="true" type="int" attached="false" writable="false"/>
            <qmlproperty name="manualExposureTime" fullname="QtMultimedia.Camera.manualExposureTime" href="qml-qtmultimedia-camera.html#manualExposureTime-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="manualIsoSensitivity" fullname="QtMultimedia.Camera.manualIsoSensitivity" href="qml-qtmultimedia-camera.html#manualIsoSensitivity-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="maximumZoomFactor" fullname="QtMultimedia.Camera.maximumZoomFactor" href="qml-qtmultimedia-camera.html#maximumZoomFactor-prop" status="active" access="public" documented="true" type="real" attached="false" writable="false"/>
            <qmlproperty name="minimumZoomFactor" fullname="QtMultimedia.Camera.minimumZoomFactor" href="qml-qtmultimedia-camera.html#minimumZoomFactor-prop" status="active" access="public" documented="true" type="real" attached="false" writable="false"/>
            <qmlproperty name="supportedFeatures" fullname="QtMultimedia.Camera.supportedFeatures" href="qml-qtmultimedia-camera.html#supportedFeatures-prop" status="active" access="public" documented="true" type="Features" attached="false" writable="false"/>
            <qmlproperty name="torchMode" fullname="QtMultimedia.Camera.torchMode" href="qml-qtmultimedia-camera.html#torchMode-prop" status="active" access="public" documented="true" type="Camera::TorchMode" attached="false" writable="true"/>
            <qmlproperty name="whiteBalanceMode" fullname="QtMultimedia.Camera.whiteBalanceMode" href="qml-qtmultimedia-camera.html#whiteBalanceMode-prop" status="active" access="public" documented="true" type="WhiteBalanceMode" attached="false" writable="true"/>
            <qmlproperty name="zoomFactor" fullname="QtMultimedia.Camera.zoomFactor" href="qml-qtmultimedia-camera.html#zoomFactor-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
        </qmlclass>
        <page name="camera" href="qtmultimedia-camera-example.html" status="active" location="camera.qdoc" documented="true" groups="camera_examples,category Multimedia,multimedia_examples,video_examples" subtype="example" title="Camera Example" fulltitle="Camera Example" subtitle="" brief="Shows how to capture a still image or record video">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="the-camera-constructor" title="The Camera constructor" level="1"/>
            <contents name="setcamera" title="setCamera()" level="1"/>
            <contents name="triggering-capturing" title="Triggering capturing" level="1"/>
            <page name="camera/camera.cpp" href="qtmultimedia-camera-camera-cpp.html" status="active" subtype="file" title="" fulltitle="camera.cpp Example File" subtitle="camera/camera.cpp"/>
            <page name="camera/camera.h" href="qtmultimedia-camera-camera-h.html" status="active" subtype="file" title="" fulltitle="camera.h Example File" subtitle="camera/camera.h"/>
            <page name="camera/camera.ui" href="qtmultimedia-camera-camera-ui.html" status="active" subtype="file" title="" fulltitle="camera.ui Example File" subtitle="camera/camera.ui"/>
            <page name="camera/camera_mobile.ui" href="qtmultimedia-camera-camera-mobile-ui.html" status="active" subtype="file" title="" fulltitle="camera_mobile.ui Example File" subtitle="camera/camera_mobile.ui"/>
            <page name="camera/imagesettings.cpp" href="qtmultimedia-camera-imagesettings-cpp.html" status="active" subtype="file" title="" fulltitle="imagesettings.cpp Example File" subtitle="camera/imagesettings.cpp"/>
            <page name="camera/imagesettings.h" href="qtmultimedia-camera-imagesettings-h.html" status="active" subtype="file" title="" fulltitle="imagesettings.h Example File" subtitle="camera/imagesettings.h"/>
            <page name="camera/imagesettings.ui" href="qtmultimedia-camera-imagesettings-ui.html" status="active" subtype="file" title="" fulltitle="imagesettings.ui Example File" subtitle="camera/imagesettings.ui"/>
            <page name="camera/metadatadialog.cpp" href="qtmultimedia-camera-metadatadialog-cpp.html" status="active" subtype="file" title="" fulltitle="metadatadialog.cpp Example File" subtitle="camera/metadatadialog.cpp"/>
            <page name="camera/metadatadialog.h" href="qtmultimedia-camera-metadatadialog-h.html" status="active" subtype="file" title="" fulltitle="metadatadialog.h Example File" subtitle="camera/metadatadialog.h"/>
            <page name="camera/videosettings.cpp" href="qtmultimedia-camera-videosettings-cpp.html" status="active" subtype="file" title="" fulltitle="videosettings.cpp Example File" subtitle="camera/videosettings.cpp"/>
            <page name="camera/videosettings.h" href="qtmultimedia-camera-videosettings-h.html" status="active" subtype="file" title="" fulltitle="videosettings.h Example File" subtitle="camera/videosettings.h"/>
            <page name="camera/videosettings.ui" href="qtmultimedia-camera-videosettings-ui.html" status="active" subtype="file" title="" fulltitle="videosettings.ui Example File" subtitle="camera/videosettings.ui"/>
            <page name="camera/videosettings_mobile.ui" href="qtmultimedia-camera-videosettings-mobile-ui.html" status="active" subtype="file" title="" fulltitle="videosettings_mobile.ui Example File" subtitle="camera/videosettings_mobile.ui"/>
            <page name="camera/android/AndroidManifest.xml" href="qtmultimedia-camera-android-androidmanifest-xml.html" status="active" subtype="file" title="" fulltitle="AndroidManifest.xml Example File" subtitle="camera/android/AndroidManifest.xml"/>
            <page name="camera/images/shutter.svg" href="qtmultimedia-camera-images-shutter-svg.html" status="active" subtype="file" title="" fulltitle="shutter.svg Example File" subtitle="camera/images/shutter.svg"/>
            <page name="camera/main.cpp" href="qtmultimedia-camera-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="camera/main.cpp"/>
            <page name="camera/CMakeLists.txt" href="qtmultimedia-camera-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="camera/CMakeLists.txt"/>
            <page name="camera/camera.pro" href="qtmultimedia-camera-camera-pro.html" status="active" subtype="file" title="" fulltitle="camera.pro Example File" subtitle="camera/camera.pro"/>
            <page name="camera/camera.qrc" href="qtmultimedia-camera-camera-qrc.html" status="active" subtype="file" title="" fulltitle="camera.qrc Example File" subtitle="camera/camera.qrc"/>
        </page>
        <page name="cameraoverview.html" href="cameraoverview.html" status="active" location="cameraoverview.qdoc" documented="true" groups="explanations-graphicsandmultimedia" subtype="page" title="Camera Overview" fulltitle="Camera Overview" subtitle="" brief="Camera viewfinder, still image capture, and video recording">
            <target name="camera-tldr"/>
            <target name="camera-image-processing" title="camera_image_processing"/>
            <contents name="camera-features" title="Camera Features" level="1"/>
            <contents name="the-lens-assembly" title="The Lens Assembly" level="2"/>
            <contents name="the-sensor" title="The Sensor" level="2"/>
            <contents name="image-processing" title="Image Processing" level="2"/>
            <contents name="recording-for-posterity" title="Recording for Posterity" level="2"/>
            <contents name="camera-implementation-details" title="Camera Implementation Details" level="1"/>
            <contents name="detecting-and-selecting-a-camera" title="Detecting and Selecting a Camera" level="2"/>
            <contents name="preview" title="Preview" level="2"/>
            <contents name="still-images" title="Still Images" level="2"/>
            <contents name="movies" title="Movies" level="2"/>
            <contents name="controlling-the-imaging-pipeline" title="Controlling the Imaging Pipeline" level="2"/>
            <contents name="focus-and-zoom" title="Focus and Zoom" level="3"/>
            <contents name="exposure-shutter-speed-and-flash" title="Exposure, Shutter Speed and Flash" level="3"/>
            <contents name="image-processing" title="Image Processing" level="3"/>
            <contents name="canceling-asynchronous-operations" title="Canceling Asynchronous Operations" level="3"/>
            <contents name="examples" title="Examples" level="1"/>
            <contents name="c-examples" title="C++ Examples" level="2"/>
            <contents name="qml-examples" title="QML Examples" level="2"/>
            <contents name="reference-documentation" title="Reference Documentation" level="1"/>
            <contents name="c-classes" title="C++ Classes" level="2"/>
            <contents name="qml-types" title="QML Types" level="2"/>
        </page>
        <qmlvaluetype name="CapturableWindow" qml-module-name="QtMultimedia" fullname="QtMultimedia.CapturableWindow" href="qml-capturablewindow.html" status="active" access="public" since="6.6" documented="true" groups="multimedia_qml,multimedia_video_qml" title="CapturableWindow" fulltitle="CapturableWindow" subtitle="" brief="Type is used getting basic of a window that is available for capturing via WindowCapture">
            <qmlproperty name="description" fullname="QtMultimedia.CapturableWindow.description" href="qml-capturablewindow.html#description-prop" status="active" access="public" documented="true" type="string" attached="false" writable="false"/>
            <qmlproperty name="isValid" fullname="QtMultimedia.CapturableWindow.isValid" href="qml-capturablewindow.html#isValid-prop" status="active" access="public" documented="true" type="string" attached="false" writable="false"/>
        </qmlvaluetype>
        <qmlclass name="CaptureSession" qml-module-name="QtMultimedia" fullname="QtMultimedia.CaptureSession" href="qml-qtmultimedia-capturesession.html" status="active" access="public" documented="true" groups="multimedia_audio_qml,multimedia_qml,multimedia_video_qml" title="CaptureSession" fulltitle="CaptureSession" subtitle="" brief="Allows capturing of audio and video content">
            <function name="audioInputChanged" fullname="QtMultimedia.CaptureSession.audioInputChanged" href="qml-qtmultimedia-capturesession.html#audioInputChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="audioOutputChanged" fullname="QtMultimedia.CaptureSession.audioOutputChanged" href="qml-qtmultimedia-capturesession.html#audioOutputChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="cameraChanged" fullname="QtMultimedia.CaptureSession.cameraChanged" href="qml-qtmultimedia-capturesession.html#cameraChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="imageCaptureChanged" fullname="QtMultimedia.CaptureSession.imageCaptureChanged" href="qml-qtmultimedia-capturesession.html#imageCaptureChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="recorderChanged" fullname="QtMultimedia.CaptureSession.recorderChanged" href="qml-qtmultimedia-capturesession.html#recorderChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="videoOutputChanged" fullname="QtMultimedia.CaptureSession.videoOutputChanged" href="qml-qtmultimedia-capturesession.html#videoOutputChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <qmlproperty name="audioInput" fullname="QtMultimedia.CaptureSession.audioInput" href="qml-qtmultimedia-capturesession.html#audioInput-prop" status="active" access="public" documented="true" type="AudioInput" attached="false" writable="true"/>
            <qmlproperty name="audioOutput" fullname="QtMultimedia.CaptureSession.audioOutput" href="qml-qtmultimedia-capturesession.html#audioOutput-prop" status="active" access="public" documented="true" type="AudioOutput" attached="false" writable="true" brief="Audio output device for the capture session"/>
            <qmlproperty name="camera" fullname="QtMultimedia.CaptureSession.camera" href="qml-qtmultimedia-capturesession.html#camera-prop" status="active" access="public" documented="true" type="Camera" attached="false" writable="true" brief="Used to capture video"/>
            <qmlproperty name="imageCapture" fullname="QtMultimedia.CaptureSession.imageCapture" href="qml-qtmultimedia-capturesession.html#imageCapture-prop" status="active" access="public" documented="true" type="ImageCapture" attached="false" writable="true" brief="Object used to capture still images"/>
            <qmlproperty name="recorder" fullname="QtMultimedia.CaptureSession.recorder" href="qml-qtmultimedia-capturesession.html#recorder-prop" status="active" access="public" documented="true" type="MediaRecorder" attached="false" writable="true" brief="Object used to capture audio/video"/>
            <qmlproperty name="screenCapture" fullname="QtMultimedia.CaptureSession.screenCapture" href="qml-qtmultimedia-capturesession.html#screenCapture-prop" status="active" access="public" since="6.5" documented="true" type="ScreenCapture" attached="false" writable="true" brief="Object used to capture a screen"/>
            <qmlproperty name="videoOutput" fullname="QtMultimedia.CaptureSession.videoOutput" href="qml-qtmultimedia-capturesession.html#videoOutput-prop" status="active" access="public" documented="true" type="VideoOutput" attached="false" writable="true" brief="VideoOutput that is the video preview for the capture session"/>
            <qmlproperty name="windowCapture" fullname="QtMultimedia.CaptureSession.windowCapture" href="qml-qtmultimedia-capturesession.html#windowCapture-prop" status="active" access="public" since="6.6" documented="true" type="WindowCapture" attached="false" writable="true" brief="Object used to capture a window"/>
        </qmlclass>
        <page name="qtmultimedia-changes-qt6.html" href="qtmultimedia-changes-qt6.html" status="active" location="qt6-changes.qdoc" documented="true" groups="changes-qt-5-to-6" subtype="page" title="Changes to Qt Multimedia" fulltitle="Changes to Qt Multimedia" subtitle="" brief="Migrate Qt Multimedia to Qt 6">
            <contents name="new-features-in-qt-6" title="New features in Qt 6" level="1"/>
            <contents name="removed-features" title="Removed features" level="1"/>
            <contents name="changed-features" title="Changed features" level="1"/>
        </page>
        <page name="https://en.wikipedia.org/wiki/Depth_of_field" href="https://en.wikipedia.org/wiki/Depth_of_field" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="DOF" fulltitle="DOF" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Dolby_Digital" href="https://en.wikipedia.org/wiki/Dolby_Digital" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Dolby Digital" fulltitle="Dolby Digital" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Dolby_Digital_Plus" href="https://en.wikipedia.org/wiki/Dolby_Digital_Plus" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Dolby Digital Plus (EAC3)" fulltitle="Dolby Digital Plus (EAC3)" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Dolby_TrueHD" href="https://en.wikipedia.org/wiki/Dolby_TrueHD" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Dolby TrueHD" fulltitle="Dolby TrueHD" subtitle=""/>
        <page name="qtmultimedia-attribution-ffmpeg.html" href="qtmultimedia-attribution-ffmpeg.html" status="active" location="codeattributions.qdoc" documented="true" groups="attributions-libs,attributions-qtmultimedia,attributions-qtmultimedia-libs" subtype="attribution" title="FFmpeg, version n6.1.1" fulltitle="FFmpeg, version n6.1.1" subtitle="" brief="GNU Lesser General Public License v2.1 or later and BSD 3-Clause &quot;New&quot; or &quot;Revised&quot; License and BSD 2-Clause &quot;Simplified&quot; License and BSD Source Code Attribution and ISC License and MIT License and Mozilla Public License 2.0">
            <target name="ffmpeg"/>
        </page>
        <page name="https://en.wikipedia.org/wiki/FLAC" href="https://en.wikipedia.org/wiki/FLAC" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Free Lossless Audio Codec" fulltitle="Free Lossless Audio Codec" subtitle=""/>
        <page name="https://gstreamer.freedesktop.org/" href="https://gstreamer.freedesktop.org/" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="GStreamer" fulltitle="GStreamer" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/High_Efficiency_Video_Coding" href="https://en.wikipedia.org/wiki/High_Efficiency_Video_Coding" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="High Efficiency Video Coding (HEVC)" fulltitle="High Efficiency Video Coding (HEVC)" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/List_of_ISO_639-2_codes" href="https://en.wikipedia.org/wiki/List_of_ISO_639-2_codes" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="ISO 639-2 code" fulltitle="ISO 639-2 code" subtitle=""/>
        <qmlclass name="ImageCapture" qml-module-name="QtMultimedia" fullname="QtMultimedia.ImageCapture" href="qml-qtmultimedia-imagecapture.html" status="active" access="public" documented="true" groups="camera_qml,multimedia_qml" title="ImageCapture" fulltitle="ImageCapture" subtitle="" brief="An interface for capturing camera images">
            <function name="capture" fullname="QtMultimedia.ImageCapture.capture" href="qml-qtmultimedia-imagecapture.html#capture-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="captureToFile" fullname="QtMultimedia.ImageCapture.captureToFile" href="qml-qtmultimedia-imagecapture.html#captureToFile-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="" name="location" default=""/>
            </function>
            <function name="errorOccurred" fullname="QtMultimedia.ImageCapture.errorOccurred" href="qml-qtmultimedia-imagecapture.html#errorOccurred-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="" name="id" default=""/>
                <parameter type="" name="error" default=""/>
                <parameter type="" name="errorString" default=""/>
            </function>
            <function name="imageCaptured" fullname="QtMultimedia.ImageCapture.imageCaptured" href="qml-qtmultimedia-imagecapture.html#imageCaptured-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="" name="requestId" default=""/>
                <parameter type="" name="preview" default=""/>
            </function>
            <function name="imageMetadataAvailable" fullname="QtMultimedia.ImageCapture.imageMetadataAvailable" href="qml-qtmultimedia-imagecapture.html#imageMetadataAvailable-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="" name="id" default=""/>
                <parameter type="" name="metaData" default=""/>
            </function>
            <function name="imageSaved" fullname="QtMultimedia.ImageCapture.imageSaved" href="qml-qtmultimedia-imagecapture.html#imageSaved-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="" name="id" default=""/>
                <parameter type="" name="fileName" default=""/>
            </function>
            <function name="saveToFile" fullname="QtMultimedia.ImageCapture.saveToFile" href="qml-qtmultimedia-imagecapture.html#saveToFile-method" status="active" access="public" documented="true" meta="qmlmethod">
                <parameter type="" name="location" default=""/>
            </function>
            <qmlproperty name="preview" fullname="QtMultimedia.ImageCapture.preview" href="qml-qtmultimedia-imagecapture.html#preview-prop" status="active" access="public" documented="true" type="string" attached="false" writable="false"/>
            <qmlproperty name="readyForCapture" fullname="QtMultimedia.ImageCapture.readyForCapture" href="qml-qtmultimedia-imagecapture.html#readyForCapture-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="false"/>
        </qmlclass>
        <page name="https://developer.apple.com/documentation/bundleresources/information_property_list" href="https://developer.apple.com/documentation/bundleresources/information_property_list" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Info.plist" fulltitle="Info.plist" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Media_type#Mime.types" href="https://en.wikipedia.org/wiki/Media_type#Mime.types" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="MIME type" fulltitle="MIME type" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/MPEG-1" href="https://en.wikipedia.org/wiki/MPEG-1" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="MPEG-1" fulltitle="MPEG-1" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/MP3" href="https://en.wikipedia.org/wiki/MP3" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="MPEG-1 Audio Layer III or MPEG-2 Audio Layer III" fulltitle="MPEG-1 Audio Layer III or MPEG-2 Audio Layer III" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/MPEG-2" href="https://en.wikipedia.org/wiki/MPEG-2" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="MPEG-2" fulltitle="MPEG-2" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/MPEG-4" href="https://en.wikipedia.org/wiki/MPEG-4" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="MPEG-4" fulltitle="MPEG-4" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/MPEG-4_Part_3" href="https://en.wikipedia.org/wiki/MPEG-4_Part_3" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="MPEG-4 Part 3 or MPEG-4 Audio (formally ISO/IEC 14496-3)" fulltitle="MPEG-4 Part 3 or MPEG-4 Audio (formally ISO/IEC 14496-3)" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Matroska" href="https://en.wikipedia.org/wiki/Matroska" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Matroska (MKV)" fulltitle="Matroska (MKV)" subtitle=""/>
        <page name="player" href="qtmultimedia-player-example.html" status="active" location="player.qdoc" documented="true" groups="category Multimedia,multimedia_examples,video_examples" subtype="example" title="Media Player Example" fulltitle="Media Player Example" subtitle="" brief="Playing audio and video">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page name="player/player.cpp" href="qtmultimedia-player-player-cpp.html" status="active" subtype="file" title="" fulltitle="player.cpp Example File" subtitle="player/player.cpp"/>
            <page name="player/player.h" href="qtmultimedia-player-player-h.html" status="active" subtype="file" title="" fulltitle="player.h Example File" subtitle="player/player.h"/>
            <page name="player/playercontrols.cpp" href="qtmultimedia-player-playercontrols-cpp.html" status="active" subtype="file" title="" fulltitle="playercontrols.cpp Example File" subtitle="player/playercontrols.cpp"/>
            <page name="player/playercontrols.h" href="qtmultimedia-player-playercontrols-h.html" status="active" subtype="file" title="" fulltitle="playercontrols.h Example File" subtitle="player/playercontrols.h"/>
            <page name="player/playlistmodel.cpp" href="qtmultimedia-player-playlistmodel-cpp.html" status="active" subtype="file" title="" fulltitle="playlistmodel.cpp Example File" subtitle="player/playlistmodel.cpp"/>
            <page name="player/playlistmodel.h" href="qtmultimedia-player-playlistmodel-h.html" status="active" subtype="file" title="" fulltitle="playlistmodel.h Example File" subtitle="player/playlistmodel.h"/>
            <page name="player/qmediaplaylist.cpp" href="qtmultimedia-player-qmediaplaylist-cpp.html" status="active" subtype="file" title="" fulltitle="qmediaplaylist.cpp Example File" subtitle="player/qmediaplaylist.cpp"/>
            <page name="player/qmediaplaylist.h" href="qtmultimedia-player-qmediaplaylist-h.html" status="active" subtype="file" title="" fulltitle="qmediaplaylist.h Example File" subtitle="player/qmediaplaylist.h"/>
            <page name="player/qmediaplaylist_p.cpp" href="qtmultimedia-player-qmediaplaylist-p-cpp.html" status="active" subtype="file" title="" fulltitle="qmediaplaylist_p.cpp Example File" subtitle="player/qmediaplaylist_p.cpp"/>
            <page name="player/qmediaplaylist_p.h" href="qtmultimedia-player-qmediaplaylist-p-h.html" status="active" subtype="file" title="" fulltitle="qmediaplaylist_p.h Example File" subtitle="player/qmediaplaylist_p.h"/>
            <page name="player/qplaylistfileparser.cpp" href="qtmultimedia-player-qplaylistfileparser-cpp.html" status="active" subtype="file" title="" fulltitle="qplaylistfileparser.cpp Example File" subtitle="player/qplaylistfileparser.cpp"/>
            <page name="player/qplaylistfileparser.h" href="qtmultimedia-player-qplaylistfileparser-h.html" status="active" subtype="file" title="" fulltitle="qplaylistfileparser.h Example File" subtitle="player/qplaylistfileparser.h"/>
            <page name="player/videowidget.cpp" href="qtmultimedia-player-videowidget-cpp.html" status="active" subtype="file" title="" fulltitle="videowidget.cpp Example File" subtitle="player/videowidget.cpp"/>
            <page name="player/videowidget.h" href="qtmultimedia-player-videowidget-h.html" status="active" subtype="file" title="" fulltitle="videowidget.h Example File" subtitle="player/videowidget.h"/>
            <page name="player/main.cpp" href="qtmultimedia-player-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="player/main.cpp"/>
            <page name="player/CMakeLists.txt" href="qtmultimedia-player-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="player/CMakeLists.txt"/>
            <page name="player/player.pro" href="qtmultimedia-player-player-pro.html" status="active" subtype="file" title="" fulltitle="player.pro Example File" subtitle="player/player.pro"/>
        </page>
        <qmlclass name="MediaDevices" qml-module-name="QtMultimedia" fullname="QtMultimedia.MediaDevices" href="qml-qtmultimedia-mediadevices.html" status="active" access="public" documented="true" groups="multimedia_qml" title="MediaDevices" fulltitle="MediaDevices" subtitle="" brief="Information about available multimedia input and output devices">
            <qmlproperty name="audioInputs" fullname="QtMultimedia.MediaDevices.audioInputs" href="qml-qtmultimedia-mediadevices.html#audioInputs-prop" status="active" access="public" documented="true" type="list&lt;audioDevice&gt;" attached="false" writable="false"/>
            <qmlproperty name="audioOutputs" fullname="QtMultimedia.MediaDevices.audioOutputs" href="qml-qtmultimedia-mediadevices.html#audioOutputs-prop" status="active" access="public" documented="true" type="list&lt;audioDevice&gt;" attached="false" writable="false"/>
            <qmlproperty name="defaultAudioInput" fullname="QtMultimedia.MediaDevices.defaultAudioInput" href="qml-qtmultimedia-mediadevices.html#defaultAudioInput-prop" status="active" access="public" documented="true" type="audioDevice" attached="false" writable="false"/>
            <qmlproperty name="defaultAudioOutput" fullname="QtMultimedia.MediaDevices.defaultAudioOutput" href="qml-qtmultimedia-mediadevices.html#defaultAudioOutput-prop" status="active" access="public" documented="true" type="audioDevice" attached="false" writable="false"/>
            <qmlproperty name="defaultVideoInput" fullname="QtMultimedia.MediaDevices.defaultVideoInput" href="qml-qtmultimedia-mediadevices.html#defaultVideoInput-prop" status="active" access="public" documented="true" type="cameraDevice" attached="false" writable="false"/>
            <qmlproperty name="videoInputs" fullname="QtMultimedia.MediaDevices.videoInputs" href="qml-qtmultimedia-mediadevices.html#videoInputs-prop" status="active" access="public" documented="true" type="list&lt;cameraDevice&gt;" attached="false" writable="false"/>
        </qmlclass>
        <qmlclass name="MediaPlayer" qml-module-name="QtMultimedia" fullname="QtMultimedia.MediaPlayer" href="qml-qtmultimedia-mediaplayer.html" status="active" access="public" documented="true" groups="multimedia_audio_qml,multimedia_qml,multimedia_video_qml" title="MediaPlayer" fulltitle="MediaPlayer" subtitle="" brief="Adds media playback to a scene">
            <function name="errorOccurred" fullname="QtMultimedia.MediaPlayer.errorOccurred" href="qml-qtmultimedia-mediaplayer.html#errorOccurred-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="" name="error" default=""/>
                <parameter type="" name="errorString" default=""/>
            </function>
            <function name="pause" fullname="QtMultimedia.MediaPlayer.pause" href="qml-qtmultimedia-mediaplayer.html#pause-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="play" fullname="QtMultimedia.MediaPlayer.play" href="qml-qtmultimedia-mediaplayer.html#play-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="playbackStateChanged" fullname="QtMultimedia.MediaPlayer.playbackStateChanged" href="qml-qtmultimedia-mediaplayer.html#playbackStateChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="playingChanged" fullname="QtMultimedia.MediaPlayer.playingChanged" href="qml-qtmultimedia-mediaplayer.html#playingChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="stop" fullname="QtMultimedia.MediaPlayer.stop" href="qml-qtmultimedia-mediaplayer.html#stop-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <qmlproperty name="activeAudioTrack" fullname="QtMultimedia.MediaPlayer.activeAudioTrack" href="qml-qtmultimedia-mediaplayer.html#activeAudioTrack-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="activeSubtitleTrack" fullname="QtMultimedia.MediaPlayer.activeSubtitleTrack" href="qml-qtmultimedia-mediaplayer.html#activeSubtitleTrack-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="activeVideoTrack" fullname="QtMultimedia.MediaPlayer.activeVideoTrack" href="qml-qtmultimedia-mediaplayer.html#activeVideoTrack-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="audioOutput" fullname="QtMultimedia.MediaPlayer.audioOutput" href="qml-qtmultimedia-mediaplayer.html#audioOutput-prop" status="active" access="public" documented="true" type="AudioOutput" attached="false" writable="true"/>
            <qmlproperty name="audioTracks" fullname="QtMultimedia.MediaPlayer.audioTracks" href="qml-qtmultimedia-mediaplayer.html#audioTracks-prop" status="active" access="public" documented="true" type="list&lt;mediaMetaData&gt;" attached="false" writable="false"/>
            <qmlproperty name="autoPlay" fullname="QtMultimedia.MediaPlayer.autoPlay" href="qml-qtmultimedia-mediaplayer.html#autoPlay-prop" status="active" access="public" since="6.7" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="bufferProgress" fullname="QtMultimedia.MediaPlayer.bufferProgress" href="qml-qtmultimedia-mediaplayer.html#bufferProgress-prop" status="active" access="public" documented="true" type="real" attached="false" writable="false"/>
            <qmlproperty name="duration" fullname="QtMultimedia.MediaPlayer.duration" href="qml-qtmultimedia-mediaplayer.html#duration-prop" status="active" access="public" documented="true" type="int" attached="false" writable="false"/>
            <qmlproperty name="error" fullname="QtMultimedia.MediaPlayer.error" href="qml-qtmultimedia-mediaplayer.html#error-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="false"/>
            <qmlproperty name="errorString" fullname="QtMultimedia.MediaPlayer.errorString" href="qml-qtmultimedia-mediaplayer.html#errorString-prop" status="active" access="public" documented="true" type="string" attached="false" writable="false"/>
            <qmlproperty name="hasAudio" fullname="QtMultimedia.MediaPlayer.hasAudio" href="qml-qtmultimedia-mediaplayer.html#hasAudio-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="false"/>
            <qmlproperty name="hasVideo" fullname="QtMultimedia.MediaPlayer.hasVideo" href="qml-qtmultimedia-mediaplayer.html#hasVideo-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="false"/>
            <qmlproperty name="loops" fullname="QtMultimedia.MediaPlayer.loops" href="qml-qtmultimedia-mediaplayer.html#loops-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="mediaStatus" fullname="QtMultimedia.MediaPlayer.mediaStatus" href="qml-qtmultimedia-mediaplayer.html#mediaStatus-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="false"/>
            <qmlproperty name="metaData" fullname="QtMultimedia.MediaPlayer.metaData" href="qml-qtmultimedia-mediaplayer.html#metaData-prop" status="active" access="public" documented="true" type="mediaMetaData" attached="false" writable="false"/>
            <qmlproperty name="playbackRate" fullname="QtMultimedia.MediaPlayer.playbackRate" href="qml-qtmultimedia-mediaplayer.html#playbackRate-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="playbackState" fullname="QtMultimedia.MediaPlayer.playbackState" href="qml-qtmultimedia-mediaplayer.html#playbackState-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="false"/>
            <qmlproperty name="playing" fullname="QtMultimedia.MediaPlayer.playing" href="qml-qtmultimedia-mediaplayer.html#playing-prop" status="active" access="public" since="6.5" documented="true" type="bool" attached="false" writable="false"/>
            <qmlproperty name="position" fullname="QtMultimedia.MediaPlayer.position" href="qml-qtmultimedia-mediaplayer.html#position-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="seekable" fullname="QtMultimedia.MediaPlayer.seekable" href="qml-qtmultimedia-mediaplayer.html#seekable-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="false"/>
            <qmlproperty name="source" fullname="QtMultimedia.MediaPlayer.source" href="qml-qtmultimedia-mediaplayer.html#source-prop" status="active" access="public" documented="true" type="url" attached="false" writable="true"/>
            <qmlproperty name="subtitleTracks" fullname="QtMultimedia.MediaPlayer.subtitleTracks" href="qml-qtmultimedia-mediaplayer.html#subtitleTracks-prop" status="active" access="public" documented="true" type="list&lt;mediaMetaData&gt;" attached="false" writable="false"/>
            <qmlproperty name="videoOutput" fullname="QtMultimedia.MediaPlayer.videoOutput" href="qml-qtmultimedia-mediaplayer.html#videoOutput-prop" status="active" access="public" documented="true" type="VideoOutput" attached="false" writable="true"/>
            <qmlproperty name="videoTracks" fullname="QtMultimedia.MediaPlayer.videoTracks" href="qml-qtmultimedia-mediaplayer.html#videoTracks-prop" status="active" access="public" documented="true" type="list&lt;mediaMetaData&gt;" attached="false" writable="false"/>
        </qmlclass>
        <qmlclass name="MediaRecorder" qml-module-name="QtMultimedia" fullname="QtMultimedia.MediaRecorder" href="qml-qtmultimedia-mediarecorder.html" status="active" access="public" documented="true" groups="multimedia_audio_qml,multimedia_qml,multimedia_video_qml" title="MediaRecorder" fulltitle="MediaRecorder" subtitle="" brief="For encoding and recording media generated in a CaptureSession">
            <function name="actualLocationChanged" fullname="QtMultimedia.MediaRecorder.actualLocationChanged" href="qml-qtmultimedia-mediarecorder.html#actualLocationChanged-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="const QUrl &amp;" name="location" default=""/>
            </function>
            <function name="durationChanged" fullname="QtMultimedia.MediaRecorder.durationChanged" href="qml-qtmultimedia-mediarecorder.html#durationChanged-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="qint64" name="duration" default=""/>
            </function>
            <function name="errorOccurred" fullname="QtMultimedia.MediaRecorder.errorOccurred" href="qml-qtmultimedia-mediarecorder.html#errorOccurred-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="Error" name="error" default=""/>
                <parameter type="const QString &amp;" name="errorString" default=""/>
            </function>
            <function name="metaDataChanged" fullname="QtMultimedia.MediaRecorder.metaDataChanged" href="qml-qtmultimedia-mediarecorder.html#metaDataChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="pause" fullname="QtMultimedia.MediaRecorder.pause" href="qml-qtmultimedia-mediarecorder.html#pause-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="record" fullname="QtMultimedia.MediaRecorder.record" href="qml-qtmultimedia-mediarecorder.html#record-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="recorderStateChanged" fullname="QtMultimedia.MediaRecorder.recorderStateChanged" href="qml-qtmultimedia-mediarecorder.html#recorderStateChanged-signal" status="active" access="public" documented="true" meta="qmlsignal">
                <parameter type="RecorderState" name="state" default=""/>
            </function>
            <function name="stop" fullname="QtMultimedia.MediaRecorder.stop" href="qml-qtmultimedia-mediarecorder.html#stop-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <qmlproperty name="actualLocation" fullname="QtMultimedia.MediaRecorder.actualLocation" href="qml-qtmultimedia-mediarecorder.html#actualLocation-prop" status="active" access="public" documented="true" type="QUrl" attached="false" writable="false" brief="Actual location of the last media content"/>
            <qmlproperty name="audioBitRate" fullname="QtMultimedia.MediaRecorder.audioBitRate" href="qml-qtmultimedia-mediarecorder.html#audioBitRate-prop" status="active" access="public" since="6.6" documented="true" type="int" attached="false" writable="true" brief="This property holds the bit rate of the compressed audio stream in bits per second"/>
            <qmlproperty name="audioChannelCount" fullname="QtMultimedia.MediaRecorder.audioChannelCount" href="qml-qtmultimedia-mediarecorder.html#audioChannelCount-prop" status="active" access="public" since="6.6" documented="true" type="int" attached="false" writable="true" brief="This property holds the number of audio channels"/>
            <qmlproperty name="audioSampleRate" fullname="QtMultimedia.MediaRecorder.audioSampleRate" href="qml-qtmultimedia-mediarecorder.html#audioSampleRate-prop" status="active" access="public" since="6.6" documented="true" type="int" attached="false" writable="true" brief="This property holds the audio sample rate in Hz"/>
            <qmlproperty name="duration" fullname="QtMultimedia.MediaRecorder.duration" href="qml-qtmultimedia-mediarecorder.html#duration-prop" status="active" access="public" documented="true" type="qint64" attached="false" writable="false" brief="This property holds the recorded media duration in milliseconds"/>
            <qmlproperty name="encodingMode" fullname="QtMultimedia.MediaRecorder.encodingMode" href="qml-qtmultimedia-mediarecorder.html#encodingMode-prop" status="active" access="public" since="6.6" documented="true" type="enumeration" attached="false" writable="true" brief="This property holds the encoding mode"/>
            <qmlproperty name="error" fullname="QtMultimedia.MediaRecorder.error" href="qml-qtmultimedia-mediarecorder.html#error-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="false" brief="This property holds the current media recorder error state"/>
            <qmlproperty name="errorString" fullname="QtMultimedia.MediaRecorder.errorString" href="qml-qtmultimedia-mediarecorder.html#errorString-prop" status="active" access="public" documented="true" type="string" attached="false" writable="false" brief="This property holds a string describing the current error state"/>
            <qmlproperty name="mediaFormat" fullname="QtMultimedia.MediaRecorder.mediaFormat" href="qml-qtmultimedia-mediarecorder.html#mediaFormat-prop" status="active" access="public" documented="true" type="MediaFormat" attached="false" writable="true" brief="This property holds the current MediaFormat of the recorder"/>
            <qmlproperty name="metaData" fullname="QtMultimedia.MediaRecorder.metaData" href="qml-qtmultimedia-mediarecorder.html#metaData-prop" status="active" access="public" documented="true" type="mediaMetaData" attached="false" writable="true" brief="This property holds meta data associated with the recording"/>
            <qmlproperty name="outputLocation" fullname="QtMultimedia.MediaRecorder.outputLocation" href="qml-qtmultimedia-mediarecorder.html#outputLocation-prop" status="active" access="public" documented="true" type="QUrl" attached="false" writable="true" brief="Destination location of media content"/>
            <qmlproperty name="quality" fullname="QtMultimedia.MediaRecorder.quality" href="qml-qtmultimedia-mediarecorder.html#quality-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="recorderState" fullname="QtMultimedia.MediaRecorder.recorderState" href="qml-qtmultimedia-mediarecorder.html#recorderState-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="false" brief="This property holds the current media recorder state"/>
            <qmlproperty name="videoBitRate" fullname="QtMultimedia.MediaRecorder.videoBitRate" href="qml-qtmultimedia-mediarecorder.html#videoBitRate-prop" status="active" access="public" since="6.6" documented="true" type="int" attached="false" writable="true" brief="This property holds the bit rate of the compressed video stream in bits per second"/>
            <qmlproperty name="videoFrameRate" fullname="QtMultimedia.MediaRecorder.videoFrameRate" href="qml-qtmultimedia-mediarecorder.html#videoFrameRate-prop" status="active" access="public" since="6.6" documented="true" type="real" attached="false" writable="true" brief="This property holds the video frame rate"/>
            <qmlproperty name="videoResolution" fullname="QtMultimedia.MediaRecorder.videoResolution" href="qml-qtmultimedia-mediarecorder.html#videoResolution-prop" status="active" access="public" since="6.6" documented="true" type="Size" attached="false" writable="true" brief="This property holds the resolution of the encoded video"/>
        </qmlclass>
        <page name="https://en.wikipedia.org/wiki/Motion_JPEG" href="https://en.wikipedia.org/wiki/Motion_JPEG" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="MotionJPEG" fulltitle="MotionJPEG" subtitle=""/>
        <page name="multimediaoverview.html" href="multimediaoverview.html" status="active" location="multimedia-overview.qdoc" documented="true" groups="explanations-graphicsandmultimedia" subtype="page" title="Multimedia Overview" fulltitle="Multimedia Overview" subtitle="" brief="A set of APIs for working with audio, video and camera devices">
            <contents name="features" title="Features" level="1"/>
            <contents name="multimedia-components" title="Multimedia Components" level="1"/>
            <contents name="multimedia-recipes" title="Multimedia Recipes" level="1"/>
            <contents name="limitations" title="Limitations" level="1"/>
            <contents name="changes-from-previous-versions" title="Changes from Previous Versions" level="1"/>
            <contents name="reference-documentation" title="Reference Documentation" level="1"/>
        </page>
        <page name="https://en.wikipedia.org/wiki/Ogg" href="https://en.wikipedia.org/wiki/Ogg" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Ogg" fulltitle="Ogg" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Vorbis" href="https://en.wikipedia.org/wiki/Vorbis" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Ogg Vorbis" fulltitle="Ogg Vorbis" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Opus_(audio_format)" href="https://en.wikipedia.org/wiki/Opus_(audio_format)" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Opus Audio Format" fulltitle="Opus Audio Format" subtitle=""/>
        <class name="QAudioBuffer" href="qaudiobuffer.html" status="active" access="public" location="qaudiobuffer.h" documented="true" groups="multimedia,multimedia_audio" module="QtMultimedia" brief="Represents a collection of audio samples with a specific format and sample rate">
            <function name="QAudioBuffer" fullname="QAudioBuffer::QAudioBuffer" href="qaudiobuffer.html#QAudioBuffer" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="constructor" noexcept="true" signature="QAudioBuffer()"/>
            <function name="QAudioBuffer" fullname="QAudioBuffer::QAudioBuffer" href="qaudiobuffer.html#QAudioBuffer-1" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="copy-constructor" noexcept="true" overload="true" overload-number="1" signature="QAudioBuffer(const QAudioBuffer &amp;other)">
                <parameter type="const QAudioBuffer &amp;" name="other" default=""/>
            </function>
            <function name="QAudioBuffer" fullname="QAudioBuffer::QAudioBuffer" href="qaudiobuffer.html#QAudioBuffer-2" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="constructor" overload="true" overload-number="2" signature="QAudioBuffer(const QByteArray &amp;data, const QAudioFormat &amp;format, qint64 startTime)">
                <parameter type="const QByteArray &amp;" name="data" default=""/>
                <parameter type="const QAudioFormat &amp;" name="format" default=""/>
                <parameter type="qint64" name="startTime" default="-1"/>
            </function>
            <function name="QAudioBuffer" fullname="QAudioBuffer::QAudioBuffer" href="qaudiobuffer.html#QAudioBuffer-3" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="constructor" overload="true" overload-number="3" signature="QAudioBuffer(int numFrames, const QAudioFormat &amp;format, qint64 startTime)">
                <parameter type="int" name="numFrames" default=""/>
                <parameter type="const QAudioFormat &amp;" name="format" default=""/>
                <parameter type="qint64" name="startTime" default="-1"/>
            </function>
            <function name="QAudioBuffer" fullname="QAudioBuffer::QAudioBuffer" href="qaudiobuffer.html#QAudioBuffer-4" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="move-constructor" noexcept="true" overload="true" overload-number="4" signature="QAudioBuffer(QAudioBuffer &amp;&amp;other)">
                <parameter type="QAudioBuffer &amp;&amp;" name="other" default=""/>
            </function>
            <function name="byteCount" fullname="QAudioBuffer::byteCount" href="qaudiobuffer.html#byteCount" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="plain" const="true" noexcept="true" type="qsizetype" signature="qsizetype byteCount() const"/>
            <function name="constData" fullname="QAudioBuffer::constData" href="qaudiobuffer.html#constData" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="plain" const="true" type="const T *" signature="const T * constData() const"/>
            <function name="data" fullname="QAudioBuffer::data" href="qaudiobuffer.html#data" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="plain" const="true" type="const T *" signature="const T * data() const"/>
            <function name="data" fullname="QAudioBuffer::data" href="qaudiobuffer.html#data-1" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="plain" overload="true" overload-number="1" type="T *" signature="T * data()"/>
            <function name="detach" fullname="QAudioBuffer::detach" href="qaudiobuffer.html#detach" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="plain" type="void" signature="void detach()"/>
            <function name="duration" fullname="QAudioBuffer::duration" href="qaudiobuffer.html#duration" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="plain" const="true" noexcept="true" type="qint64" signature="qint64 duration() const"/>
            <function name="format" fullname="QAudioBuffer::format" href="qaudiobuffer.html#format" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="plain" const="true" noexcept="true" type="QAudioFormat" signature="QAudioFormat format() const"/>
            <function name="frameCount" fullname="QAudioBuffer::frameCount" href="qaudiobuffer.html#frameCount" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="plain" const="true" noexcept="true" type="qsizetype" signature="qsizetype frameCount() const"/>
            <function name="isValid" fullname="QAudioBuffer::isValid" href="qaudiobuffer.html#isValid" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="plain" const="true" noexcept="true" type="bool" signature="bool isValid() const"/>
            <function name="operator=" fullname="QAudioBuffer::operator=" href="qaudiobuffer.html#operator-eq" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="copy-assign" type="QAudioBuffer &amp;" signature="QAudioBuffer &amp; operator=(const QAudioBuffer &amp;other)">
                <parameter type="const QAudioBuffer &amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QAudioBuffer::operator=" href="qaudiobuffer.html#operator-eq-1" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="move-assign" noexcept="true" overload="true" overload-number="1" type="QAudioBuffer &amp;" signature="QAudioBuffer &amp; operator=(QAudioBuffer &amp;&amp;other)">
                <parameter type="QAudioBuffer &amp;&amp;" name="other" default=""/>
            </function>
            <function name="sampleCount" fullname="QAudioBuffer::sampleCount" href="qaudiobuffer.html#sampleCount" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="plain" const="true" noexcept="true" type="qsizetype" signature="qsizetype sampleCount() const"/>
            <function name="startTime" fullname="QAudioBuffer::startTime" href="qaudiobuffer.html#startTime" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="plain" const="true" noexcept="true" type="qint64" signature="qint64 startTime() const"/>
            <function name="swap" fullname="QAudioBuffer::swap" href="qaudiobuffer.html#swap" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QAudioBuffer &amp;other)">
                <parameter type="QAudioBuffer &amp;" name="other" default=""/>
            </function>
            <function name="~QAudioBuffer" fullname="QAudioBuffer::~QAudioBuffer" href="qaudiobuffer.html#dtor.QAudioBuffer" status="active" access="public" location="qaudiobuffer.h" documented="true" meta="destructor" noexcept="true" signature="~QAudioBuffer()"/>
            <typedef name="F32M" fullname="QAudioBuffer::F32M" href="qaudiobuffer.html#F32M-typedef" status="active" access="public" location="qaudiobuffer.h" documented="true"/>
            <typedef name="F32S" fullname="QAudioBuffer::F32S" href="qaudiobuffer.html#F32S-typedef" status="active" access="public" location="qaudiobuffer.h" documented="true"/>
            <typedef name="S16M" fullname="QAudioBuffer::S16M" href="qaudiobuffer.html#S16M-typedef" status="active" access="public" location="qaudiobuffer.h" documented="true"/>
            <typedef name="S16S" fullname="QAudioBuffer::S16S" href="qaudiobuffer.html#S16S-typedef" status="active" access="public" location="qaudiobuffer.h" documented="true"/>
            <typedef name="S32M" fullname="QAudioBuffer::S32M" href="qaudiobuffer.html#S32M-typedef" status="active" access="public" location="qaudiobuffer.h" documented="true"/>
            <typedef name="S32S" fullname="QAudioBuffer::S32S" href="qaudiobuffer.html#S32S-typedef" status="active" access="public" location="qaudiobuffer.h" documented="true"/>
            <typedef name="U8M" fullname="QAudioBuffer::U8M" href="qaudiobuffer.html#U8M-typedef" status="active" access="public" location="qaudiobuffer.h" documented="true"/>
            <typedef name="U8S" fullname="QAudioBuffer::U8S" href="qaudiobuffer.html#U8S-typedef" status="active" access="public" location="qaudiobuffer.h" documented="true"/>
        </class>
        <class name="QAudioDecoder" href="qaudiodecoder.html" status="preliminary" access="public" location="qaudiodecoder.h" documented="true" groups="multimedia,multimedia_audio" bases="QObject" module="QtMultimedia" brief="Implements decoding audio">
            <function name="QAudioDecoder" fullname="QAudioDecoder::QAudioDecoder" href="qaudiodecoder.html#QAudioDecoder" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="constructor" explicit="true" signature="QAudioDecoder(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="audioFormat" fullname="QAudioDecoder::audioFormat" href="qaudiodecoder.html#audioFormat" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="plain" const="true" type="QAudioFormat" signature="QAudioFormat audioFormat() const"/>
            <function name="bufferAvailable" fullname="QAudioDecoder::bufferAvailable" href="qaudiodecoder.html#bufferAvailable" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="plain" const="true" associated-property="bufferAvailable" type="bool" signature="bool bufferAvailable() const"/>
            <function name="bufferAvailableChanged" fullname="QAudioDecoder::bufferAvailableChanged" href="qaudiodecoder.html#bufferAvailableChanged" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="signal" associated-property="bufferAvailable" type="void" signature="void bufferAvailableChanged(bool available)">
                <parameter type="bool" name="available" default=""/>
            </function>
            <function name="bufferReady" fullname="QAudioDecoder::bufferReady" href="qaudiodecoder.html#bufferReady" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="signal" type="void" signature="void bufferReady()"/>
            <function name="duration" fullname="QAudioDecoder::duration" href="qaudiodecoder.html#duration" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="plain" const="true" type="qint64" signature="qint64 duration() const"/>
            <function name="durationChanged" fullname="QAudioDecoder::durationChanged" href="qaudiodecoder.html#durationChanged" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="signal" type="void" signature="void durationChanged(qint64 duration)">
                <parameter type="qint64" name="duration" default=""/>
            </function>
            <function name="error" fullname="QAudioDecoder::error" href="qaudiodecoder.html#error" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="plain" const="true" type="QAudioDecoder::Error" signature="QAudioDecoder::Error error() const"/>
            <function name="error" fullname="QAudioDecoder::error" href="qaudiodecoder.html#error-1" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="signal" overload="true" overload-number="1" type="void" signature="void error(QAudioDecoder::Error error)">
                <parameter type="QAudioDecoder::Error" name="error" default=""/>
            </function>
            <function name="errorString" fullname="QAudioDecoder::errorString" href="qaudiodecoder.html#error-prop" status="active" access="public" location="qaudiodecoder.h" meta="plain" const="true" associated-property="error" type="QString" signature="QString errorString() const"/>
            <function name="finished" fullname="QAudioDecoder::finished" href="qaudiodecoder.html#finished" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="signal" type="void" signature="void finished()"/>
            <function name="formatChanged" fullname="QAudioDecoder::formatChanged" href="qaudiodecoder.html#formatChanged" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="signal" type="void" signature="void formatChanged(const QAudioFormat &amp;format)">
                <parameter type="const QAudioFormat &amp;" name="format" default=""/>
            </function>
            <function name="isDecoding" fullname="QAudioDecoder::isDecoding" href="qaudiodecoder.html#isDecoding-prop" status="active" access="public" location="qaudiodecoder.h" meta="plain" const="true" associated-property="isDecoding" type="bool" signature="bool isDecoding() const"/>
            <function name="isDecodingChanged" fullname="QAudioDecoder::isDecodingChanged" href="qaudiodecoder.html#isDecoding-prop" status="active" access="public" location="qaudiodecoder.h" meta="signal" associated-property="isDecoding" type="void" signature="void isDecodingChanged(bool)">
                <parameter type="bool" name="" default=""/>
            </function>
            <function name="isSupported" fullname="QAudioDecoder::isSupported" href="qaudiodecoder.html#isSupported" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="plain" const="true" type="bool" signature="bool isSupported() const"/>
            <function name="position" fullname="QAudioDecoder::position" href="qaudiodecoder.html#position" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="plain" const="true" type="qint64" signature="qint64 position() const"/>
            <function name="positionChanged" fullname="QAudioDecoder::positionChanged" href="qaudiodecoder.html#positionChanged" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="signal" type="void" signature="void positionChanged(qint64 position)">
                <parameter type="qint64" name="position" default=""/>
            </function>
            <function name="read" fullname="QAudioDecoder::read" href="qaudiodecoder.html#read" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="plain" const="true" type="QAudioBuffer" signature="QAudioBuffer read() const"/>
            <function name="setAudioFormat" fullname="QAudioDecoder::setAudioFormat" href="qaudiodecoder.html#setAudioFormat" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="plain" type="void" signature="void setAudioFormat(const QAudioFormat &amp;format)">
                <parameter type="const QAudioFormat &amp;" name="format" default=""/>
            </function>
            <function name="setSource" fullname="QAudioDecoder::setSource" href="qaudiodecoder.html#setSource" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="plain" associated-property="source" type="void" signature="void setSource(const QUrl &amp;fileName)">
                <parameter type="const QUrl &amp;" name="fileName" default=""/>
            </function>
            <function name="setSourceDevice" fullname="QAudioDecoder::setSourceDevice" href="qaudiodecoder.html#setSourceDevice" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="plain" type="void" signature="void setSourceDevice(QIODevice *device)">
                <parameter type="QIODevice *" name="device" default=""/>
            </function>
            <function name="source" fullname="QAudioDecoder::source" href="qaudiodecoder.html#source" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="plain" const="true" associated-property="source" type="QUrl" signature="QUrl source() const"/>
            <function name="sourceChanged" fullname="QAudioDecoder::sourceChanged" href="qaudiodecoder.html#sourceChanged" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="signal" associated-property="source" type="void" signature="void sourceChanged()"/>
            <function name="sourceDevice" fullname="QAudioDecoder::sourceDevice" href="qaudiodecoder.html#sourceDevice" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="plain" const="true" type="QIODevice *" signature="QIODevice * sourceDevice() const"/>
            <function name="start" fullname="QAudioDecoder::start" href="qaudiodecoder.html#start" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="slot" type="void" signature="void start()"/>
            <function name="stop" fullname="QAudioDecoder::stop" href="qaudiodecoder.html#stop" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="slot" type="void" signature="void stop()"/>
            <function name="~QAudioDecoder" fullname="QAudioDecoder::~QAudioDecoder" href="qaudiodecoder.html#dtor.QAudioDecoder" status="active" access="public" location="qaudiodecoder.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QAudioDecoder()"/>
            <enum name="Error" fullname="QAudioDecoder::Error" href="qaudiodecoder.html#Error-enum" status="active" access="public" location="qaudiodecoder.h" documented="true">
                <value name="NoError" value="0"/>
                <value name="ResourceError" value="1"/>
                <value name="FormatError" value="2"/>
                <value name="AccessDeniedError" value="3"/>
                <value name="NotSupportedError" value="4"/>
            </enum>
            <property name="bufferAvailable" fullname="QAudioDecoder::bufferAvailable" href="qaudiodecoder.html#bufferAvailable-prop" status="active" access="public" location="qaudiodecoder.h" documented="true" writable="false" brief="Whether there is a decoded audio buffer available">
                <getter name="bufferAvailable"/>
                <notifier name="bufferAvailableChanged"/>
            </property>
            <property name="error" fullname="QAudioDecoder::error" href="qaudiodecoder.html#error-prop" status="active" access="public" location="qaudiodecoder.h" documented="true" writable="false">
                <getter name="errorString"/>
            </property>
            <property name="isDecoding" fullname="QAudioDecoder::isDecoding" href="qaudiodecoder.html#isDecoding-prop" status="active" access="public" location="qaudiodecoder.h" documented="true" writable="false" brief="True if the decoder is currently running and decoding audio data">
                <getter name="isDecoding"/>
                <notifier name="isDecodingChanged"/>
            </property>
            <property name="source" fullname="QAudioDecoder::source" href="qaudiodecoder.html#source-prop" status="active" access="public" location="qaudiodecoder.h" documented="true" brief="The active filename being decoded by the decoder object">
                <getter name="source"/>
                <setter name="setSource"/>
                <notifier name="sourceChanged"/>
            </property>
        </class>
        <class name="QAudioDevice" href="qaudiodevice.html" status="active" access="public" location="qaudiodevice.h" documented="true" groups="multimedia,multimedia_audio" module="QtMultimedia" brief="Information about audio devices and their functionality">
            <function name="QAudioDevice" fullname="QAudioDevice::QAudioDevice" href="qaudiodevice.html#QAudioDevice" status="active" access="public" location="qaudiodevice.h" documented="true" meta="constructor" signature="QAudioDevice()"/>
            <function name="QAudioDevice" fullname="QAudioDevice::QAudioDevice" href="qaudiodevice.html#QAudioDevice-1" status="active" access="public" location="qaudiodevice.h" documented="true" meta="copy-constructor" overload="true" overload-number="1" signature="QAudioDevice(const QAudioDevice &amp;other)">
                <parameter type="const QAudioDevice &amp;" name="other" default=""/>
            </function>
            <function name="QAudioDevice" fullname="QAudioDevice::QAudioDevice" href="qaudiodevice.html#QAudioDevice-2" status="active" access="public" location="qaudiodevice.h" documented="true" meta="move-constructor" noexcept="true" overload="true" overload-number="2" signature="QAudioDevice(QAudioDevice &amp;&amp;other)">
                <parameter type="QAudioDevice &amp;&amp;" name="other" default=""/>
            </function>
            <function name="channelConfiguration" fullname="QAudioDevice::channelConfiguration" href="qaudiodevice.html#channelConfiguration" status="active" access="public" location="qaudiodevice.h" documented="true" meta="plain" const="true" type="QAudioFormat::ChannelConfig" signature="QAudioFormat::ChannelConfig channelConfiguration() const"/>
            <function name="description" fullname="QAudioDevice::description" href="qaudiodevice.html#description-prop" status="active" access="public" location="qaudiodevice.h" meta="plain" const="true" associated-property="description" type="QString" signature="QString description() const"/>
            <function name="id" fullname="QAudioDevice::id" href="qaudiodevice.html#id-prop" status="active" access="public" location="qaudiodevice.h" meta="plain" const="true" associated-property="id" type="QByteArray" signature="QByteArray id() const"/>
            <function name="isDefault" fullname="QAudioDevice::isDefault" href="qaudiodevice.html#isDefault-prop" status="active" access="public" location="qaudiodevice.h" meta="plain" const="true" associated-property="isDefault" type="bool" signature="bool isDefault() const"/>
            <function name="isFormatSupported" fullname="QAudioDevice::isFormatSupported" href="qaudiodevice.html#isFormatSupported" status="active" access="public" location="qaudiodevice.h" documented="true" meta="plain" const="true" type="bool" signature="bool isFormatSupported(const QAudioFormat &amp;settings) const">
                <parameter type="const QAudioFormat &amp;" name="settings" default=""/>
            </function>
            <function name="isNull" fullname="QAudioDevice::isNull" href="qaudiodevice.html#isNull" status="active" access="public" location="qaudiodevice.h" documented="true" meta="plain" const="true" type="bool" signature="bool isNull() const"/>
            <function name="maximumChannelCount" fullname="QAudioDevice::maximumChannelCount" href="qaudiodevice.html#maximumChannelCount" status="active" access="public" location="qaudiodevice.h" documented="true" meta="plain" const="true" type="int" signature="int maximumChannelCount() const"/>
            <function name="maximumSampleRate" fullname="QAudioDevice::maximumSampleRate" href="qaudiodevice.html#maximumSampleRate" status="active" access="public" location="qaudiodevice.h" documented="true" meta="plain" const="true" type="int" signature="int maximumSampleRate() const"/>
            <function name="minimumChannelCount" fullname="QAudioDevice::minimumChannelCount" href="qaudiodevice.html#minimumChannelCount" status="active" access="public" location="qaudiodevice.h" documented="true" meta="plain" const="true" type="int" signature="int minimumChannelCount() const"/>
            <function name="minimumSampleRate" fullname="QAudioDevice::minimumSampleRate" href="qaudiodevice.html#minimumSampleRate" status="active" access="public" location="qaudiodevice.h" documented="true" meta="plain" const="true" type="int" signature="int minimumSampleRate() const"/>
            <function name="mode" fullname="QAudioDevice::mode" href="qaudiodevice.html#mode-prop" status="active" access="public" location="qaudiodevice.h" meta="plain" const="true" associated-property="mode" type="QAudioDevice::Mode" signature="QAudioDevice::Mode mode() const"/>
            <function name="operator!=" fullname="QAudioDevice::operator!=" href="qaudiodevice.html#operator-not-eq" status="active" access="public" location="qaudiodevice.h" documented="true" meta="plain" const="true" type="bool" signature="bool operator!=(const QAudioDevice &amp;other) const">
                <parameter type="const QAudioDevice &amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QAudioDevice::operator=" href="qaudiodevice.html#operator-eq" status="active" access="public" location="qaudiodevice.h" documented="true" meta="move-assign" noexcept="true" type="QAudioDevice &amp;" signature="QAudioDevice &amp; operator=(QAudioDevice &amp;&amp;other)">
                <parameter type="QAudioDevice &amp;&amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QAudioDevice::operator=" href="qaudiodevice.html#operator-eq-1" status="active" access="public" location="qaudiodevice.h" documented="true" meta="copy-assign" overload="true" overload-number="1" type="QAudioDevice &amp;" signature="QAudioDevice &amp; operator=(const QAudioDevice &amp;other)">
                <parameter type="const QAudioDevice &amp;" name="other" default=""/>
            </function>
            <function name="operator==" fullname="QAudioDevice::operator==" href="qaudiodevice.html#operator-eq-eq" status="active" access="public" location="qaudiodevice.h" documented="true" meta="plain" const="true" type="bool" signature="bool operator==(const QAudioDevice &amp;other) const">
                <parameter type="const QAudioDevice &amp;" name="other" default=""/>
            </function>
            <function name="preferredFormat" fullname="QAudioDevice::preferredFormat" href="qaudiodevice.html#preferredFormat" status="active" access="public" location="qaudiodevice.h" documented="true" meta="plain" const="true" type="QAudioFormat" signature="QAudioFormat preferredFormat() const"/>
            <function name="supportedSampleFormats" fullname="QAudioDevice::supportedSampleFormats" href="qaudiodevice.html#supportedSampleFormats" status="active" access="public" location="qaudiodevice.h" documented="true" meta="plain" const="true" type="QList&lt;QAudioFormat::SampleFormat&gt;" signature="QList&lt;QAudioFormat::SampleFormat&gt; supportedSampleFormats() const"/>
            <function name="swap" fullname="QAudioDevice::swap" href="qaudiodevice.html#swap" status="active" access="public" location="qaudiodevice.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QAudioDevice &amp;other)">
                <parameter type="QAudioDevice &amp;" name="other" default=""/>
            </function>
            <function name="~QAudioDevice" fullname="QAudioDevice::~QAudioDevice" href="qaudiodevice.html#dtor.QAudioDevice" status="active" access="public" location="qaudiodevice.h" documented="true" meta="destructor" noexcept="true" signature="~QAudioDevice()"/>
            <enum name="Mode" fullname="QAudioDevice::Mode" href="qaudiodevice.html#Mode-enum" status="active" access="public" location="qaudiodevice.h" documented="true">
                <value name="Null" value="0"/>
                <value name="Input" value="1"/>
                <value name="Output" value="2"/>
            </enum>
            <property name="description" fullname="QAudioDevice::description" href="qaudiodevice.html#description-prop" status="active" access="public" location="qaudiodevice.h" documented="true" writable="false">
                <getter name="description"/>
            </property>
            <property name="id" fullname="QAudioDevice::id" href="qaudiodevice.html#id-prop" status="active" access="public" location="qaudiodevice.h" documented="true" writable="false">
                <getter name="id"/>
            </property>
            <property name="isDefault" fullname="QAudioDevice::isDefault" href="qaudiodevice.html#isDefault-prop" status="active" access="public" location="qaudiodevice.h" documented="true" writable="false">
                <getter name="isDefault"/>
            </property>
            <property name="mode" fullname="QAudioDevice::mode" href="qaudiodevice.html#mode-prop" status="active" access="public" location="qaudiodevice.h" documented="true" writable="false">
                <getter name="mode"/>
            </property>
        </class>
        <class name="QAudioFormat" href="qaudioformat.html" status="active" access="public" location="qaudioformat.h" documented="true" groups="multimedia,multimedia_audio" module="QtMultimedia" brief="Stores audio stream parameter information">
            <function name="QAudioFormat" fullname="QAudioFormat::QAudioFormat" href="qaudioformat.html#QAudioFormat" status="active" access="public" documented="true" meta="constructor" noexcept="true" signature="QAudioFormat()"/>
            <function name="QAudioFormat" fullname="QAudioFormat::QAudioFormat" href="qaudioformat.html#QAudioFormat-1" status="active" access="public" documented="true" meta="copy-constructor" noexcept="true" overload="true" overload-number="1" signature="QAudioFormat(const QAudioFormat &amp;other)">
                <parameter type="const QAudioFormat &amp;" name="other" default=""/>
            </function>
            <function name="bytesForDuration" fullname="QAudioFormat::bytesForDuration" href="qaudioformat.html#bytesForDuration" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" type="qint32" signature="qint32 bytesForDuration(qint64 microseconds) const">
                <parameter type="qint64" name="microseconds" default=""/>
            </function>
            <function name="bytesForFrames" fullname="QAudioFormat::bytesForFrames" href="qaudioformat.html#bytesForFrames" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" type="qint32" signature="qint32 bytesForFrames(qint32 frameCount) const">
                <parameter type="qint32" name="frameCount" default=""/>
            </function>
            <function name="bytesPerFrame" fullname="QAudioFormat::bytesPerFrame" href="qaudioformat.html#bytesPerFrame" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" constexpr="true" type="int" signature="int bytesPerFrame() const"/>
            <function name="bytesPerSample" fullname="QAudioFormat::bytesPerSample" href="qaudioformat.html#bytesPerSample" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" constexpr="true" noexcept="true" type="int" signature="int bytesPerSample() const"/>
            <function name="channelConfig" fullname="QAudioFormat::channelConfig" href="qaudioformat.html#channelConfig" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" static="true" constexpr="true" type="QAudioFormat::ChannelConfig" signature="QAudioFormat::ChannelConfig channelConfig(Args... channels)">
                <parameter type="Args..." name="channels" default=""/>
            </function>
            <function name="channelConfig" fullname="QAudioFormat::channelConfig" href="qaudioformat.html#channelConfig-1" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" constexpr="true" noexcept="true" overload="true" overload-number="1" type="QAudioFormat::ChannelConfig" signature="QAudioFormat::ChannelConfig channelConfig() const"/>
            <function name="channelCount" fullname="QAudioFormat::channelCount" href="qaudioformat.html#channelCount" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" constexpr="true" noexcept="true" type="int" signature="int channelCount() const"/>
            <function name="channelOffset" fullname="QAudioFormat::channelOffset" href="qaudioformat.html#channelOffset" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" noexcept="true" type="int" signature="int channelOffset(QAudioFormat::AudioChannelPosition channel) const">
                <parameter type="QAudioFormat::AudioChannelPosition" name="channel" default=""/>
            </function>
            <function name="defaultChannelConfigForChannelCount" fullname="QAudioFormat::defaultChannelConfigForChannelCount" href="qaudioformat.html#defaultChannelConfigForChannelCount" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" static="true" type="QAudioFormat::ChannelConfig" signature="QAudioFormat::ChannelConfig defaultChannelConfigForChannelCount(int channelCount)">
                <parameter type="int" name="channelCount" default=""/>
            </function>
            <function name="durationForBytes" fullname="QAudioFormat::durationForBytes" href="qaudioformat.html#durationForBytes" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" type="qint64" signature="qint64 durationForBytes(qint32 bytes) const">
                <parameter type="qint32" name="bytes" default=""/>
            </function>
            <function name="durationForFrames" fullname="QAudioFormat::durationForFrames" href="qaudioformat.html#durationForFrames" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" type="qint64" signature="qint64 durationForFrames(qint32 frameCount) const">
                <parameter type="qint32" name="frameCount" default=""/>
            </function>
            <function name="framesForBytes" fullname="QAudioFormat::framesForBytes" href="qaudioformat.html#framesForBytes" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" type="qint32" signature="qint32 framesForBytes(qint32 byteCount) const">
                <parameter type="qint32" name="byteCount" default=""/>
            </function>
            <function name="framesForDuration" fullname="QAudioFormat::framesForDuration" href="qaudioformat.html#framesForDuration" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" type="qint32" signature="qint32 framesForDuration(qint64 microseconds) const">
                <parameter type="qint64" name="microseconds" default=""/>
            </function>
            <function name="isValid" fullname="QAudioFormat::isValid" href="qaudioformat.html#isValid" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" constexpr="true" noexcept="true" type="bool" signature="bool isValid() const"/>
            <function name="normalizedSampleValue" fullname="QAudioFormat::normalizedSampleValue" href="qaudioformat.html#normalizedSampleValue" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" type="float" signature="float normalizedSampleValue(const void *sample) const">
                <parameter type="const void *" name="sample" default=""/>
            </function>
            <function name="operator!=" href="qaudioformat.html#operator-not-eq" status="active" access="public" location="qaudioformat.h" documented="true" related="2" meta="plain" type="bool" signature="bool operator!=(const QAudioFormat &amp;a, const QAudioFormat &amp;b)">
                <parameter type="const QAudioFormat &amp;" name="a" default=""/>
                <parameter type="const QAudioFormat &amp;" name="b" default=""/>
            </function>
            <function name="operator==" href="qaudioformat.html#operator-eq-eq" status="active" access="public" location="qaudioformat.h" documented="true" related="3" meta="plain" type="bool" signature="bool operator==(const QAudioFormat &amp;a, const QAudioFormat &amp;b)">
                <parameter type="const QAudioFormat &amp;" name="a" default=""/>
                <parameter type="const QAudioFormat &amp;" name="b" default=""/>
            </function>
            <function name="sampleFormat" fullname="QAudioFormat::sampleFormat" href="qaudioformat.html#sampleFormat" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" constexpr="true" noexcept="true" type="QAudioFormat::SampleFormat" signature="QAudioFormat::SampleFormat sampleFormat() const"/>
            <function name="sampleRate" fullname="QAudioFormat::sampleRate" href="qaudioformat.html#sampleRate" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" const="true" constexpr="true" noexcept="true" type="int" signature="int sampleRate() const"/>
            <function name="setChannelConfig" fullname="QAudioFormat::setChannelConfig" href="qaudioformat.html#setChannelConfig" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" noexcept="true" type="void" signature="void setChannelConfig(QAudioFormat::ChannelConfig config)">
                <parameter type="QAudioFormat::ChannelConfig" name="config" default=""/>
            </function>
            <function name="setChannelCount" fullname="QAudioFormat::setChannelCount" href="qaudioformat.html#setChannelCount" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" constexpr="true" noexcept="true" type="void" signature="void setChannelCount(int channels)">
                <parameter type="int" name="channels" default=""/>
            </function>
            <function name="setSampleFormat" fullname="QAudioFormat::setSampleFormat" href="qaudioformat.html#setSampleFormat" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" constexpr="true" noexcept="true" type="void" signature="void setSampleFormat(QAudioFormat::SampleFormat format)">
                <parameter type="QAudioFormat::SampleFormat" name="format" default=""/>
            </function>
            <function name="setSampleRate" fullname="QAudioFormat::setSampleRate" href="qaudioformat.html#setSampleRate" status="active" access="public" location="qaudioformat.h" documented="true" meta="plain" constexpr="true" noexcept="true" type="void" signature="void setSampleRate(int samplerate)">
                <parameter type="int" name="samplerate" default=""/>
            </function>
            <function name="~QAudioFormat" fullname="QAudioFormat::~QAudioFormat" href="qaudioformat.html#dtor.QAudioFormat" status="active" access="public" documented="true" meta="destructor" noexcept="true" signature="~QAudioFormat()"/>
            <enum name="AudioChannelPosition" fullname="QAudioFormat::AudioChannelPosition" href="qaudioformat.html#AudioChannelPosition-enum" status="active" access="public" location="qaudioformat.h" documented="true">
                <value name="UnknownPosition" value="0"/>
                <value name="FrontLeft" value="1"/>
                <value name="FrontRight" value="2"/>
                <value name="FrontCenter" value="3"/>
                <value name="LFE" value="4"/>
                <value name="BackLeft" value="5"/>
                <value name="BackRight" value="6"/>
                <value name="FrontLeftOfCenter" value="7"/>
                <value name="FrontRightOfCenter" value="8"/>
                <value name="BackCenter" value="9"/>
                <value name="SideLeft" value="10"/>
                <value name="SideRight" value="11"/>
                <value name="TopCenter" value="12"/>
                <value name="TopFrontLeft" value="13"/>
                <value name="TopFrontCenter" value="14"/>
                <value name="TopFrontRight" value="15"/>
                <value name="TopBackLeft" value="16"/>
                <value name="TopBackCenter" value="17"/>
                <value name="TopBackRight" value="18"/>
                <value name="LFE2" value="19"/>
                <value name="TopSideLeft" value="20"/>
                <value name="TopSideRight" value="21"/>
                <value name="BottomFrontCenter" value="22"/>
                <value name="BottomFrontLeft" value="23"/>
                <value name="BottomFrontRight" value="24"/>
            </enum>
            <enum name="ChannelConfig" fullname="QAudioFormat::ChannelConfig" href="qaudioformat.html#ChannelConfig-enum" status="active" access="public" location="qaudioformat.h" documented="true">
                <value name="ChannelConfigUnknown" value="0"/>
                <value name="ChannelConfigMono" value="QtPrivate::channelConfig(FrontCenter)"/>
                <value name="ChannelConfigStereo" value="QtPrivate::channelConfig(FrontLeft, FrontRight)"/>
                <value name="ChannelConfig2Dot1" value="QtPrivate::channelConfig(FrontLeft, FrontRight, LFE)"/>
                <value name="ChannelConfig3Dot0" value="QtPrivate::channelConfig(FrontLeft, FrontRight, FrontCenter)"/>
                <value name="ChannelConfig3Dot1" value="QtPrivate::channelConfig(FrontLeft, FrontRight, FrontCenter, LFE)"/>
                <value name="ChannelConfigSurround5Dot0" value="QtPrivate::channelConfig(FrontLeft, FrontRight, FrontCenter, BackLeft, BackRight)"/>
                <value name="ChannelConfigSurround5Dot1" value="QtPrivate::channelConfig(FrontLeft, FrontRight, FrontCenter, LFE, BackLeft, BackRight)"/>
                <value name="ChannelConfigSurround7Dot0" value="QtPrivate::channelConfig(FrontLeft, FrontRight, FrontCenter, BackLeft, BackRight, SideLeft, SideRight)"/>
                <value name="ChannelConfigSurround7Dot1" value="QtPrivate::channelConfig(FrontLeft, FrontRight, FrontCenter, LFE, BackLeft, BackRight, SideLeft, SideRight)"/>
            </enum>
            <enum name="SampleFormat" fullname="QAudioFormat::SampleFormat" href="qaudioformat.html#SampleFormat-enum" status="active" access="public" location="qaudioformat.h" documented="true">
                <value name="Unknown" value="0"/>
                <value name="UInt8" value="1"/>
                <value name="Int16" value="2"/>
                <value name="Int32" value="3"/>
                <value name="Float" value="4"/>
                <value name="NSampleFormats" value="5"/>
            </enum>
        </class>
        <class name="QAudioInput" href="qaudioinput.html" status="active" access="public" location="qaudioinput.h" documented="true" groups="multimedia,multimedia_audio" bases="QObject" module="QtMultimedia" brief="Represents an input channel for audio">
            <function name="device" fullname="QAudioInput::device" href="qaudioinput.html#device-prop" status="active" access="public" location="qaudioinput.h" meta="plain" const="true" associated-property="device" type="QAudioDevice" signature="QAudioDevice device() const"/>
            <function name="deviceChanged" fullname="QAudioInput::deviceChanged" href="qaudioinput.html#device-prop" status="active" access="public" location="qaudioinput.h" meta="signal" associated-property="device" type="void" signature="void deviceChanged()"/>
            <function name="isMuted" fullname="QAudioInput::isMuted" href="qaudioinput.html#muted-prop" status="active" access="public" location="qaudioinput.h" meta="plain" const="true" associated-property="muted" type="bool" signature="bool isMuted() const"/>
            <function name="mutedChanged" fullname="QAudioInput::mutedChanged" href="qaudioinput.html#muted-prop" status="active" access="public" location="qaudioinput.h" meta="signal" associated-property="muted" type="void" signature="void mutedChanged(bool muted)">
                <parameter type="bool" name="muted" default=""/>
            </function>
            <function name="setDevice" fullname="QAudioInput::setDevice" href="qaudioinput.html#device-prop" status="active" access="public" location="qaudioinput.h" meta="slot" associated-property="device" type="void" signature="void setDevice(const QAudioDevice &amp;device)">
                <parameter type="const QAudioDevice &amp;" name="device" default=""/>
            </function>
            <function name="setMuted" fullname="QAudioInput::setMuted" href="qaudioinput.html#muted-prop" status="active" access="public" location="qaudioinput.h" meta="slot" associated-property="muted" type="void" signature="void setMuted(bool muted)">
                <parameter type="bool" name="muted" default=""/>
            </function>
            <function name="setVolume" fullname="QAudioInput::setVolume" href="qaudioinput.html#volume-prop" status="active" access="public" location="qaudioinput.h" meta="slot" associated-property="volume" type="void" signature="void setVolume(float volume)">
                <parameter type="float" name="volume" default=""/>
            </function>
            <function name="volume" fullname="QAudioInput::volume" href="qaudioinput.html#volume-prop" status="active" access="public" location="qaudioinput.h" meta="plain" const="true" associated-property="volume" type="float" signature="float volume() const"/>
            <function name="volumeChanged" fullname="QAudioInput::volumeChanged" href="qaudioinput.html#volume-prop" status="active" access="public" location="qaudioinput.h" meta="signal" associated-property="volume" type="void" signature="void volumeChanged(float volume)">
                <parameter type="float" name="volume" default=""/>
            </function>
            <property name="device" fullname="QAudioInput::device" href="qaudioinput.html#device-prop" status="active" access="public" location="qaudioinput.h" documented="true" brief="Audio device connected to this input">
                <getter name="device"/>
                <setter name="setDevice"/>
                <notifier name="deviceChanged"/>
            </property>
            <property name="muted" fullname="QAudioInput::muted" href="qaudioinput.html#muted-prop" status="active" access="public" location="qaudioinput.h" documented="true" brief="State of the current media">
                <getter name="isMuted"/>
                <setter name="setMuted"/>
                <notifier name="mutedChanged"/>
            </property>
            <property name="volume" fullname="QAudioInput::volume" href="qaudioinput.html#volume-prop" status="active" access="public" location="qaudioinput.h" documented="true">
                <getter name="volume"/>
                <setter name="setVolume"/>
                <notifier name="volumeChanged"/>
            </property>
        </class>
        <class name="QAudioOutput" href="qaudiooutput.html" status="active" access="public" location="qaudiooutput.h" documented="true" groups="multimedia,multimedia_audio" bases="QObject" module="QtMultimedia" brief="Represents an output channel for audio">
            <function name="device" fullname="QAudioOutput::device" href="qaudiooutput.html#device-prop" status="active" access="public" location="qaudiooutput.h" meta="plain" const="true" associated-property="device" type="QAudioDevice" signature="QAudioDevice device() const"/>
            <function name="deviceChanged" fullname="QAudioOutput::deviceChanged" href="qaudiooutput.html#device-prop" status="active" access="public" location="qaudiooutput.h" meta="signal" associated-property="device" type="void" signature="void deviceChanged()"/>
            <function name="isMuted" fullname="QAudioOutput::isMuted" href="qaudiooutput.html#muted-prop" status="active" access="public" location="qaudiooutput.h" meta="plain" const="true" associated-property="muted" type="bool" signature="bool isMuted() const"/>
            <function name="mutedChanged" fullname="QAudioOutput::mutedChanged" href="qaudiooutput.html#muted-prop" status="active" access="public" location="qaudiooutput.h" meta="signal" associated-property="muted" type="void" signature="void mutedChanged(bool muted)">
                <parameter type="bool" name="muted" default=""/>
            </function>
            <function name="setDevice" fullname="QAudioOutput::setDevice" href="qaudiooutput.html#device-prop" status="active" access="public" location="qaudiooutput.h" meta="slot" associated-property="device" type="void" signature="void setDevice(const QAudioDevice &amp;device)">
                <parameter type="const QAudioDevice &amp;" name="device" default=""/>
            </function>
            <function name="setMuted" fullname="QAudioOutput::setMuted" href="qaudiooutput.html#muted-prop" status="active" access="public" location="qaudiooutput.h" meta="slot" associated-property="muted" type="void" signature="void setMuted(bool muted)">
                <parameter type="bool" name="muted" default=""/>
            </function>
            <function name="setVolume" fullname="QAudioOutput::setVolume" href="qaudiooutput.html#volume-prop" status="active" access="public" location="qaudiooutput.h" meta="slot" associated-property="volume" type="void" signature="void setVolume(float volume)">
                <parameter type="float" name="volume" default=""/>
            </function>
            <function name="volume" fullname="QAudioOutput::volume" href="qaudiooutput.html#volume-prop" status="active" access="public" location="qaudiooutput.h" meta="plain" const="true" associated-property="volume" type="float" signature="float volume() const"/>
            <function name="volumeChanged" fullname="QAudioOutput::volumeChanged" href="qaudiooutput.html#volume-prop" status="active" access="public" location="qaudiooutput.h" meta="signal" associated-property="volume" type="void" signature="void volumeChanged(float volume)">
                <parameter type="float" name="volume" default=""/>
            </function>
            <property name="device" fullname="QAudioOutput::device" href="qaudiooutput.html#device-prop" status="active" access="public" location="qaudiooutput.h" documented="true" brief="Audio device connected to this output">
                <getter name="device"/>
                <setter name="setDevice"/>
                <notifier name="deviceChanged"/>
            </property>
            <property name="muted" fullname="QAudioOutput::muted" href="qaudiooutput.html#muted-prop" status="active" access="public" location="qaudiooutput.h" documented="true" brief="State of the current media">
                <getter name="isMuted"/>
                <setter name="setMuted"/>
                <notifier name="mutedChanged"/>
            </property>
            <property name="volume" fullname="QAudioOutput::volume" href="qaudiooutput.html#volume-prop" status="active" access="public" location="qaudiooutput.h" documented="true" brief="Current volume">
                <getter name="volume"/>
                <setter name="setVolume"/>
                <notifier name="volumeChanged"/>
            </property>
        </class>
        <class name="QAudioSink" href="qaudiosink.html" status="active" access="public" location="qaudiosink.h" documented="true" groups="multimedia,multimedia_audio" bases="QObject" module="QtMultimedia" brief="Interface for sending audio data to an audio output device">
            <function name="QAudioSink" fullname="QAudioSink::QAudioSink" href="qaudiosink.html#QAudioSink" status="active" access="public" location="qaudiosink.h" documented="true" meta="constructor" explicit="true" signature="QAudioSink(const QAudioFormat &amp;format, QObject *parent)">
                <parameter type="const QAudioFormat &amp;" name="format" default="QAudioFormat()"/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="QAudioSink" fullname="QAudioSink::QAudioSink" href="qaudiosink.html#QAudioSink-1" status="active" access="public" location="qaudiosink.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QAudioSink(const QAudioDevice &amp;audioDevice, const QAudioFormat &amp;format, QObject *parent)">
                <parameter type="const QAudioDevice &amp;" name="audioDevice" default=""/>
                <parameter type="const QAudioFormat &amp;" name="format" default="QAudioFormat()"/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="bufferSize" fullname="QAudioSink::bufferSize" href="qaudiosink.html#bufferSize" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" const="true" type="qsizetype" signature="qsizetype bufferSize() const"/>
            <function name="bytesFree" fullname="QAudioSink::bytesFree" href="qaudiosink.html#bytesFree" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" const="true" type="qsizetype" signature="qsizetype bytesFree() const"/>
            <function name="elapsedUSecs" fullname="QAudioSink::elapsedUSecs" href="qaudiosink.html#elapsedUSecs" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" const="true" type="qint64" signature="qint64 elapsedUSecs() const"/>
            <function name="error" fullname="QAudioSink::error" href="qaudiosink.html#error" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" const="true" type="QtAudio::Error" signature="QtAudio::Error error() const"/>
            <function name="format" fullname="QAudioSink::format" href="qaudiosink.html#format" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" const="true" type="QAudioFormat" signature="QAudioFormat format() const"/>
            <function name="isNull" fullname="QAudioSink::isNull" href="qaudiosink.html#isNull" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" const="true" type="bool" signature="bool isNull() const"/>
            <function name="processedUSecs" fullname="QAudioSink::processedUSecs" href="qaudiosink.html#processedUSecs" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" const="true" type="qint64" signature="qint64 processedUSecs() const"/>
            <function name="reset" fullname="QAudioSink::reset" href="qaudiosink.html#reset" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" type="void" signature="void reset()"/>
            <function name="resume" fullname="QAudioSink::resume" href="qaudiosink.html#resume" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" type="void" signature="void resume()"/>
            <function name="setBufferSize" fullname="QAudioSink::setBufferSize" href="qaudiosink.html#setBufferSize" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" type="void" signature="void setBufferSize(qsizetype value)">
                <parameter type="qsizetype" name="value" default=""/>
            </function>
            <function name="setVolume" fullname="QAudioSink::setVolume" href="qaudiosink.html#setVolume" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" type="void" signature="void setVolume(qreal volume)">
                <parameter type="qreal" name="volume" default=""/>
            </function>
            <function name="start" fullname="QAudioSink::start" href="qaudiosink.html#start" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" type="void" signature="void start(QIODevice *device)">
                <parameter type="QIODevice *" name="device" default=""/>
            </function>
            <function name="start" fullname="QAudioSink::start" href="qaudiosink.html#start-1" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" overload="true" overload-number="1" type="QIODevice *" signature="QIODevice * start()"/>
            <function name="state" fullname="QAudioSink::state" href="qaudiosink.html#state" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" const="true" type="QtAudio::State" signature="QtAudio::State state() const"/>
            <function name="stateChanged" fullname="QAudioSink::stateChanged" href="qaudiosink.html#stateChanged" status="active" access="public" location="qaudiosink.h" documented="true" meta="signal" type="void" signature="void stateChanged(QtAudio::State state)">
                <parameter type="QtAudio::State" name="state" default=""/>
            </function>
            <function name="stop" fullname="QAudioSink::stop" href="qaudiosink.html#stop" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" type="void" signature="void stop()"/>
            <function name="suspend" fullname="QAudioSink::suspend" href="qaudiosink.html#suspend" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" type="void" signature="void suspend()"/>
            <function name="volume" fullname="QAudioSink::volume" href="qaudiosink.html#volume" status="active" access="public" location="qaudiosink.h" documented="true" meta="plain" const="true" type="qreal" signature="qreal volume() const"/>
            <function name="~QAudioSink" fullname="QAudioSink::~QAudioSink" href="qaudiosink.html#dtor.QAudioSink" status="active" access="public" location="qaudiosink.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QAudioSink()"/>
        </class>
        <class name="QAudioSource" href="qaudiosource.html" status="active" access="public" location="qaudiosource.h" documented="true" groups="multimedia,multimedia_audio" bases="QObject" module="QtMultimedia" brief="Interface for receiving audio data from an audio input device">
            <function name="QAudioSource" fullname="QAudioSource::QAudioSource" href="qaudiosource.html#QAudioSource" status="active" access="public" location="qaudiosource.h" documented="true" meta="constructor" explicit="true" signature="QAudioSource(const QAudioFormat &amp;format, QObject *parent)">
                <parameter type="const QAudioFormat &amp;" name="format" default="QAudioFormat()"/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="QAudioSource" fullname="QAudioSource::QAudioSource" href="qaudiosource.html#QAudioSource-1" status="active" access="public" location="qaudiosource.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QAudioSource(const QAudioDevice &amp;audioDevice, const QAudioFormat &amp;format, QObject *parent)">
                <parameter type="const QAudioDevice &amp;" name="audioDevice" default=""/>
                <parameter type="const QAudioFormat &amp;" name="format" default="QAudioFormat()"/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="bufferSize" fullname="QAudioSource::bufferSize" href="qaudiosource.html#bufferSize" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" const="true" type="qsizetype" signature="qsizetype bufferSize() const"/>
            <function name="bytesAvailable" fullname="QAudioSource::bytesAvailable" href="qaudiosource.html#bytesAvailable" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" const="true" type="qsizetype" signature="qsizetype bytesAvailable() const"/>
            <function name="elapsedUSecs" fullname="QAudioSource::elapsedUSecs" href="qaudiosource.html#elapsedUSecs" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" const="true" type="qint64" signature="qint64 elapsedUSecs() const"/>
            <function name="error" fullname="QAudioSource::error" href="qaudiosource.html#error" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" const="true" type="QtAudio::Error" signature="QtAudio::Error error() const"/>
            <function name="format" fullname="QAudioSource::format" href="qaudiosource.html#format" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" const="true" type="QAudioFormat" signature="QAudioFormat format() const"/>
            <function name="isNull" fullname="QAudioSource::isNull" href="qaudiosource.html#isNull" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" const="true" type="bool" signature="bool isNull() const"/>
            <function name="processedUSecs" fullname="QAudioSource::processedUSecs" href="qaudiosource.html#processedUSecs" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" const="true" type="qint64" signature="qint64 processedUSecs() const"/>
            <function name="reset" fullname="QAudioSource::reset" href="qaudiosource.html#reset" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" type="void" signature="void reset()"/>
            <function name="resume" fullname="QAudioSource::resume" href="qaudiosource.html#resume" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" type="void" signature="void resume()"/>
            <function name="setBufferSize" fullname="QAudioSource::setBufferSize" href="qaudiosource.html#setBufferSize" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" type="void" signature="void setBufferSize(qsizetype value)">
                <parameter type="qsizetype" name="value" default=""/>
            </function>
            <function name="setVolume" fullname="QAudioSource::setVolume" href="qaudiosource.html#setVolume" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" type="void" signature="void setVolume(qreal volume)">
                <parameter type="qreal" name="volume" default=""/>
            </function>
            <function name="start" fullname="QAudioSource::start" href="qaudiosource.html#start" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" type="void" signature="void start(QIODevice *device)">
                <parameter type="QIODevice *" name="device" default=""/>
            </function>
            <function name="start" fullname="QAudioSource::start" href="qaudiosource.html#start-1" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" overload="true" overload-number="1" type="QIODevice *" signature="QIODevice * start()"/>
            <function name="state" fullname="QAudioSource::state" href="qaudiosource.html#state" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" const="true" type="QtAudio::State" signature="QtAudio::State state() const"/>
            <function name="stateChanged" fullname="QAudioSource::stateChanged" href="qaudiosource.html#stateChanged" status="active" access="public" location="qaudiosource.h" documented="true" meta="signal" type="void" signature="void stateChanged(QtAudio::State state)">
                <parameter type="QtAudio::State" name="state" default=""/>
            </function>
            <function name="stop" fullname="QAudioSource::stop" href="qaudiosource.html#stop" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" type="void" signature="void stop()"/>
            <function name="suspend" fullname="QAudioSource::suspend" href="qaudiosource.html#suspend" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" type="void" signature="void suspend()"/>
            <function name="volume" fullname="QAudioSource::volume" href="qaudiosource.html#volume" status="active" access="public" location="qaudiosource.h" documented="true" meta="plain" const="true" type="qreal" signature="qreal volume() const"/>
            <function name="~QAudioSource" fullname="QAudioSource::~QAudioSource" href="qaudiosource.html#dtor.QAudioSource" status="active" access="public" location="qaudiosource.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QAudioSource()"/>
        </class>
        <class name="QCamera" href="qcamera.html" status="active" access="public" location="qcamera.h" documented="true" groups="multimedia,multimedia_camera" bases="QObject" module="QtMultimedia" brief="Interface for system camera devices">
            <function name="QCamera" fullname="QCamera::QCamera" href="qcamera.html#QCamera" status="active" access="public" location="qcamera.h" documented="true" meta="constructor" explicit="true" signature="QCamera(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="QCamera" fullname="QCamera::QCamera" href="qcamera.html#QCamera-1" status="active" access="public" location="qcamera.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QCamera(const QCameraDevice &amp;cameraDevice, QObject *parent)">
                <parameter type="const QCameraDevice &amp;" name="cameraDevice" default=""/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="QCamera" fullname="QCamera::QCamera" href="qcamera.html#QCamera-2" status="active" access="public" location="qcamera.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="2" signature="QCamera(QCameraDevice::Position position, QObject *parent)">
                <parameter type="QCameraDevice::Position" name="position" default=""/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="activeChanged" fullname="QCamera::activeChanged" href="qcamera.html#active-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="active" type="void" signature="void activeChanged(bool)">
                <parameter type="bool" name="" default=""/>
            </function>
            <function name="cameraDevice" fullname="QCamera::cameraDevice" href="qcamera.html#cameraDevice-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="cameraDevice" type="QCameraDevice" signature="QCameraDevice cameraDevice() const"/>
            <function name="cameraDeviceChanged" fullname="QCamera::cameraDeviceChanged" href="qcamera.html#cameraDevice-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="cameraDevice" type="void" signature="void cameraDeviceChanged()"/>
            <function name="cameraFormat" fullname="QCamera::cameraFormat" href="qcamera.html#cameraFormat-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="cameraFormat" type="QCameraFormat" signature="QCameraFormat cameraFormat() const"/>
            <function name="cameraFormatChanged" fullname="QCamera::cameraFormatChanged" href="qcamera.html#cameraFormat-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="cameraFormat" type="void" signature="void cameraFormatChanged()"/>
            <function name="captureSession" fullname="QCamera::captureSession" href="qcamera.html#captureSession" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" type="QMediaCaptureSession *" signature="QMediaCaptureSession * captureSession() const"/>
            <function name="colorTemperature" fullname="QCamera::colorTemperature" href="qcamera.html#colorTemperature-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="colorTemperature" type="int" signature="int colorTemperature() const"/>
            <function name="colorTemperatureChanged" fullname="QCamera::colorTemperatureChanged" href="qcamera.html#colorTemperature-prop" status="active" access="public" location="qcamera.h" meta="signal" const="true" associated-property="colorTemperature" type="void" signature="void colorTemperatureChanged() const"/>
            <function name="customFocusPoint" fullname="QCamera::customFocusPoint" href="qcamera.html#customFocusPoint-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="customFocusPoint" type="QPointF" signature="QPointF customFocusPoint() const"/>
            <function name="customFocusPointChanged" fullname="QCamera::customFocusPointChanged" href="qcamera.html#customFocusPoint-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="customFocusPoint" type="void" signature="void customFocusPointChanged()"/>
            <function name="error" fullname="QCamera::error" href="qcamera.html#error-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="error" type="QCamera::Error" signature="QCamera::Error error() const"/>
            <function name="errorChanged" fullname="QCamera::errorChanged" href="qcamera.html#errorChanged" status="active" access="public" location="qcamera.h" meta="signal" associated-property="error,errorString" type="void" signature="void errorChanged()"/>
            <function name="errorOccurred" fullname="QCamera::errorOccurred" href="qcamera.html#errorOccurred" status="active" access="public" location="qcamera.h" documented="true" meta="signal" type="void" signature="void errorOccurred(QCamera::Error error, const QString &amp;errorString)">
                <parameter type="QCamera::Error" name="error" default=""/>
                <parameter type="const QString &amp;" name="errorString" default=""/>
            </function>
            <function name="errorString" fullname="QCamera::errorString" href="qcamera.html#errorString-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="errorString" type="QString" signature="QString errorString() const"/>
            <function name="exposureCompensation" fullname="QCamera::exposureCompensation" href="qcamera.html#exposureCompensation-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="exposureCompensation" type="float" signature="float exposureCompensation() const"/>
            <function name="exposureCompensationChanged" fullname="QCamera::exposureCompensationChanged" href="qcamera.html#exposureCompensationChanged" status="active" access="public" location="qcamera.h" documented="true" meta="signal" associated-property="exposureCompensation" type="void" signature="void exposureCompensationChanged(float value)">
                <parameter type="float" name="value" default=""/>
            </function>
            <function name="exposureMode" fullname="QCamera::exposureMode" href="qcamera.html#exposureMode-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="exposureMode" type="QCamera::ExposureMode" signature="QCamera::ExposureMode exposureMode() const"/>
            <function name="exposureModeChanged" fullname="QCamera::exposureModeChanged" href="qcamera.html#exposureMode-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="exposureMode" type="void" signature="void exposureModeChanged()"/>
            <function name="exposureTime" fullname="QCamera::exposureTime" href="qcamera.html#exposureTime" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" associated-property="exposureTime" type="float" signature="float exposureTime() const"/>
            <function name="exposureTimeChanged" fullname="QCamera::exposureTimeChanged" href="qcamera.html#exposureTimeChanged" status="active" access="public" location="qcamera.h" documented="true" meta="signal" associated-property="exposureTime" type="void" signature="void exposureTimeChanged(float speed)">
                <parameter type="float" name="speed" default=""/>
            </function>
            <function name="flashMode" fullname="QCamera::flashMode" href="qcamera.html#flashMode-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="flashMode" type="QCamera::FlashMode" signature="QCamera::FlashMode flashMode() const"/>
            <function name="flashModeChanged" fullname="QCamera::flashModeChanged" href="qcamera.html#flashMode-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="flashMode" type="void" signature="void flashModeChanged()"/>
            <function name="flashReady" fullname="QCamera::flashReady" href="qcamera.html#flashReady" status="active" access="public" location="qcamera.h" documented="true" meta="signal" associated-property="flashReady" type="void" signature="void flashReady(bool ready)">
                <parameter type="bool" name="ready" default=""/>
            </function>
            <function name="focusDistance" fullname="QCamera::focusDistance" href="qcamera.html#focusDistance-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="focusDistance" type="float" signature="float focusDistance() const"/>
            <function name="focusDistanceChanged" fullname="QCamera::focusDistanceChanged" href="qcamera.html#focusDistance-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="focusDistance" type="void" signature="void focusDistanceChanged(float)">
                <parameter type="float" name="" default=""/>
            </function>
            <function name="focusMode" fullname="QCamera::focusMode" href="qcamera.html#focusMode-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="focusMode" type="QCamera::FocusMode" signature="QCamera::FocusMode focusMode() const"/>
            <function name="focusModeChanged" fullname="QCamera::focusModeChanged" href="qcamera.html#focusModeChanged" status="active" access="public" location="qcamera.h" documented="true" meta="signal" type="void" signature="void focusModeChanged()"/>
            <function name="focusPoint" fullname="QCamera::focusPoint" href="qcamera.html#focusPoint-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="focusPoint" type="QPointF" signature="QPointF focusPoint() const"/>
            <function name="focusPointChanged" fullname="QCamera::focusPointChanged" href="qcamera.html#focusPoint-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="focusPoint" type="void" signature="void focusPointChanged()"/>
            <function name="isActive" fullname="QCamera::isActive" href="qcamera.html#isActive" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" associated-property="active" type="bool" signature="bool isActive() const"/>
            <function name="isAvailable" fullname="QCamera::isAvailable" href="qcamera.html#isAvailable" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" type="bool" signature="bool isAvailable() const"/>
            <function name="isExposureModeSupported" fullname="QCamera::isExposureModeSupported" href="qcamera.html#isExposureModeSupported" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" type="bool" signature="bool isExposureModeSupported(QCamera::ExposureMode mode) const">
                <parameter type="QCamera::ExposureMode" name="mode" default=""/>
            </function>
            <function name="isFlashModeSupported" fullname="QCamera::isFlashModeSupported" href="qcamera.html#isFlashModeSupported" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" type="bool" signature="bool isFlashModeSupported(QCamera::FlashMode mode) const">
                <parameter type="QCamera::FlashMode" name="mode" default=""/>
            </function>
            <function name="isFlashReady" fullname="QCamera::isFlashReady" href="qcamera.html#isFlashReady" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" associated-property="flashReady" type="bool" signature="bool isFlashReady() const"/>
            <function name="isFocusModeSupported" fullname="QCamera::isFocusModeSupported" href="qcamera.html#isFocusModeSupported" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" type="bool" signature="bool isFocusModeSupported(QCamera::FocusMode mode) const">
                <parameter type="QCamera::FocusMode" name="mode" default=""/>
            </function>
            <function name="isTorchModeSupported" fullname="QCamera::isTorchModeSupported" href="qcamera.html#isTorchModeSupported" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" type="bool" signature="bool isTorchModeSupported(QCamera::TorchMode mode) const">
                <parameter type="QCamera::TorchMode" name="mode" default=""/>
            </function>
            <function name="isWhiteBalanceModeSupported" fullname="QCamera::isWhiteBalanceModeSupported" href="qcamera.html#isWhiteBalanceModeSupported" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" type="bool" signature="bool isWhiteBalanceModeSupported(QCamera::WhiteBalanceMode mode) const">
                <parameter type="QCamera::WhiteBalanceMode" name="mode" default=""/>
            </function>
            <function name="isoSensitivity" fullname="QCamera::isoSensitivity" href="qcamera.html#isoSensitivity-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="isoSensitivity" type="int" signature="int isoSensitivity() const"/>
            <function name="isoSensitivityChanged" fullname="QCamera::isoSensitivityChanged" href="qcamera.html#isoSensitivityChanged" status="active" access="public" location="qcamera.h" documented="true" meta="signal" associated-property="isoSensitivity" type="void" signature="void isoSensitivityChanged(int value)">
                <parameter type="int" name="value" default=""/>
            </function>
            <function name="manualExposureTime" fullname="QCamera::manualExposureTime" href="qcamera.html#manualExposureTime" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" associated-property="manualExposureTime" type="float" signature="float manualExposureTime() const"/>
            <function name="manualExposureTimeChanged" fullname="QCamera::manualExposureTimeChanged" href="qcamera.html#manualExposureTime-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="manualExposureTime" type="void" signature="void manualExposureTimeChanged(float speed)">
                <parameter type="float" name="speed" default=""/>
            </function>
            <function name="manualIsoSensitivity" fullname="QCamera::manualIsoSensitivity" href="qcamera.html#manualIsoSensitivity-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="manualIsoSensitivity" type="int" signature="int manualIsoSensitivity() const"/>
            <function name="manualIsoSensitivityChanged" fullname="QCamera::manualIsoSensitivityChanged" href="qcamera.html#manualIsoSensitivity-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="manualIsoSensitivity" type="void" signature="void manualIsoSensitivityChanged(int)">
                <parameter type="int" name="" default=""/>
            </function>
            <function name="maximumExposureTime" fullname="QCamera::maximumExposureTime" href="qcamera.html#maximumExposureTime" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" type="float" signature="float maximumExposureTime() const"/>
            <function name="maximumIsoSensitivity" fullname="QCamera::maximumIsoSensitivity" href="qcamera.html#maximumIsoSensitivity" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" type="int" signature="int maximumIsoSensitivity() const"/>
            <function name="maximumZoomFactor" fullname="QCamera::maximumZoomFactor" href="qcamera.html#maximumZoomFactor-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="maximumZoomFactor" type="float" signature="float maximumZoomFactor() const"/>
            <function name="maximumZoomFactorChanged" fullname="QCamera::maximumZoomFactorChanged" href="qcamera.html#maximumZoomFactor-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="maximumZoomFactor" type="void" signature="void maximumZoomFactorChanged(float)">
                <parameter type="float" name="" default=""/>
            </function>
            <function name="minimumExposureTime" fullname="QCamera::minimumExposureTime" href="qcamera.html#minimumExposureTime" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" type="float" signature="float minimumExposureTime() const"/>
            <function name="minimumIsoSensitivity" fullname="QCamera::minimumIsoSensitivity" href="qcamera.html#minimumIsoSensitivity" status="active" access="public" location="qcamera.h" documented="true" meta="plain" const="true" type="int" signature="int minimumIsoSensitivity() const"/>
            <function name="minimumZoomFactor" fullname="QCamera::minimumZoomFactor" href="qcamera.html#minimumZoomFactor-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="minimumZoomFactor" type="float" signature="float minimumZoomFactor() const"/>
            <function name="minimumZoomFactorChanged" fullname="QCamera::minimumZoomFactorChanged" href="qcamera.html#minimumZoomFactor-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="minimumZoomFactor" type="void" signature="void minimumZoomFactorChanged(float)">
                <parameter type="float" name="" default=""/>
            </function>
            <function name="setActive" fullname="QCamera::setActive" href="qcamera.html#setActive" status="active" access="public" location="qcamera.h" documented="true" meta="slot" associated-property="active" type="void" signature="void setActive(bool active)">
                <parameter type="bool" name="active" default=""/>
            </function>
            <function name="setAutoExposureTime" fullname="QCamera::setAutoExposureTime" href="qcamera.html#setAutoExposureTime" status="active" access="public" location="qcamera.h" documented="true" meta="slot" type="void" signature="void setAutoExposureTime()"/>
            <function name="setAutoIsoSensitivity" fullname="QCamera::setAutoIsoSensitivity" href="qcamera.html#setAutoIsoSensitivity" status="active" access="public" location="qcamera.h" documented="true" meta="slot" type="void" signature="void setAutoIsoSensitivity()"/>
            <function name="setCameraDevice" fullname="QCamera::setCameraDevice" href="qcamera.html#setCameraDevice" status="active" access="public" location="qcamera.h" documented="true" meta="plain" associated-property="cameraDevice" type="void" signature="void setCameraDevice(const QCameraDevice &amp;cameraDevice)">
                <parameter type="const QCameraDevice &amp;" name="cameraDevice" default=""/>
            </function>
            <function name="setCameraFormat" fullname="QCamera::setCameraFormat" href="qcamera.html#setCameraFormat" status="active" access="public" location="qcamera.h" documented="true" meta="plain" associated-property="cameraFormat" type="void" signature="void setCameraFormat(const QCameraFormat &amp;format)">
                <parameter type="const QCameraFormat &amp;" name="format" default=""/>
            </function>
            <function name="setColorTemperature" fullname="QCamera::setColorTemperature" href="qcamera.html#setColorTemperature" status="active" access="public" location="qcamera.h" documented="true" meta="slot" associated-property="colorTemperature" type="void" signature="void setColorTemperature(int colorTemperature)">
                <parameter type="int" name="colorTemperature" default=""/>
            </function>
            <function name="setCustomFocusPoint" fullname="QCamera::setCustomFocusPoint" href="qcamera.html#customFocusPoint-prop" status="active" access="public" location="qcamera.h" meta="plain" associated-property="customFocusPoint" type="void" signature="void setCustomFocusPoint(const QPointF &amp;point)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
            </function>
            <function name="setExposureCompensation" fullname="QCamera::setExposureCompensation" href="qcamera.html#exposureCompensation-prop" status="active" access="public" location="qcamera.h" meta="slot" associated-property="exposureCompensation" type="void" signature="void setExposureCompensation(float ev)">
                <parameter type="float" name="ev" default=""/>
            </function>
            <function name="setExposureMode" fullname="QCamera::setExposureMode" href="qcamera.html#exposureMode-prop" status="active" access="public" location="qcamera.h" meta="slot" associated-property="exposureMode" type="void" signature="void setExposureMode(QCamera::ExposureMode mode)">
                <parameter type="QCamera::ExposureMode" name="mode" default=""/>
            </function>
            <function name="setFlashMode" fullname="QCamera::setFlashMode" href="qcamera.html#flashMode-prop" status="active" access="public" location="qcamera.h" meta="slot" associated-property="flashMode" type="void" signature="void setFlashMode(QCamera::FlashMode mode)">
                <parameter type="QCamera::FlashMode" name="mode" default=""/>
            </function>
            <function name="setFocusDistance" fullname="QCamera::setFocusDistance" href="qcamera.html#focusDistance-prop" status="active" access="public" location="qcamera.h" meta="plain" associated-property="focusDistance" type="void" signature="void setFocusDistance(float d)">
                <parameter type="float" name="d" default=""/>
            </function>
            <function name="setFocusMode" fullname="QCamera::setFocusMode" href="qcamera.html#focusMode-prop" status="active" access="public" location="qcamera.h" meta="plain" associated-property="focusMode" type="void" signature="void setFocusMode(QCamera::FocusMode mode)">
                <parameter type="QCamera::FocusMode" name="mode" default=""/>
            </function>
            <function name="setManualExposureTime" fullname="QCamera::setManualExposureTime" href="qcamera.html#manualExposureTime-prop" status="active" access="public" location="qcamera.h" meta="slot" associated-property="manualExposureTime" type="void" signature="void setManualExposureTime(float seconds)">
                <parameter type="float" name="seconds" default=""/>
            </function>
            <function name="setManualIsoSensitivity" fullname="QCamera::setManualIsoSensitivity" href="qcamera.html#manualIsoSensitivity-prop" status="active" access="public" location="qcamera.h" meta="slot" associated-property="manualIsoSensitivity" type="void" signature="void setManualIsoSensitivity(int iso)">
                <parameter type="int" name="iso" default=""/>
            </function>
            <function name="setTorchMode" fullname="QCamera::setTorchMode" href="qcamera.html#torchMode-prop" status="active" access="public" location="qcamera.h" meta="slot" associated-property="torchMode" type="void" signature="void setTorchMode(QCamera::TorchMode mode)">
                <parameter type="QCamera::TorchMode" name="mode" default=""/>
            </function>
            <function name="setWhiteBalanceMode" fullname="QCamera::setWhiteBalanceMode" href="qcamera.html#setWhiteBalanceMode" status="active" access="public" location="qcamera.h" documented="true" meta="slot" associated-property="whiteBalanceMode" type="void" signature="void setWhiteBalanceMode(QCamera::WhiteBalanceMode mode)">
                <parameter type="QCamera::WhiteBalanceMode" name="mode" default=""/>
            </function>
            <function name="setZoomFactor" fullname="QCamera::setZoomFactor" href="qcamera.html#setZoomFactor" status="active" access="public" location="qcamera.h" documented="true" meta="plain" associated-property="zoomFactor" type="void" signature="void setZoomFactor(float factor)">
                <parameter type="float" name="factor" default=""/>
            </function>
            <function name="start" fullname="QCamera::start" href="qcamera.html#start" status="active" access="public" location="qcamera.h" documented="true" meta="slot" type="void" signature="void start()"/>
            <function name="stop" fullname="QCamera::stop" href="qcamera.html#stop" status="active" access="public" location="qcamera.h" documented="true" meta="slot" type="void" signature="void stop()"/>
            <function name="supportedFeatures" fullname="QCamera::supportedFeatures" href="qcamera.html#supportedFeatures-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="supportedFeatures" type="QCamera::Features" signature="QCamera::Features supportedFeatures() const"/>
            <function name="supportedFeaturesChanged" fullname="QCamera::supportedFeaturesChanged" href="qcamera.html#supportedFeatures-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="supportedFeatures" type="void" signature="void supportedFeaturesChanged()"/>
            <function name="torchMode" fullname="QCamera::torchMode" href="qcamera.html#torchMode-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="torchMode" type="QCamera::TorchMode" signature="QCamera::TorchMode torchMode() const"/>
            <function name="torchModeChanged" fullname="QCamera::torchModeChanged" href="qcamera.html#torchMode-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="torchMode" type="void" signature="void torchModeChanged()"/>
            <function name="whiteBalanceMode" fullname="QCamera::whiteBalanceMode" href="qcamera.html#whiteBalanceMode-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="whiteBalanceMode" type="QCamera::WhiteBalanceMode" signature="QCamera::WhiteBalanceMode whiteBalanceMode() const"/>
            <function name="whiteBalanceModeChanged" fullname="QCamera::whiteBalanceModeChanged" href="qcamera.html#whiteBalanceMode-prop" status="active" access="public" location="qcamera.h" meta="signal" const="true" associated-property="whiteBalanceMode" type="void" signature="void whiteBalanceModeChanged() const"/>
            <function name="zoomFactor" fullname="QCamera::zoomFactor" href="qcamera.html#zoomFactor-prop" status="active" access="public" location="qcamera.h" meta="plain" const="true" associated-property="zoomFactor" type="float" signature="float zoomFactor() const"/>
            <function name="zoomFactorChanged" fullname="QCamera::zoomFactorChanged" href="qcamera.html#zoomFactor-prop" status="active" access="public" location="qcamera.h" meta="signal" associated-property="zoomFactor" type="void" signature="void zoomFactorChanged(float)">
                <parameter type="float" name="" default=""/>
            </function>
            <function name="zoomTo" fullname="QCamera::zoomTo" href="qcamera.html#zoomTo" status="active" access="public" location="qcamera.h" documented="true" meta="slot" type="void" signature="void zoomTo(float factor, float rate)">
                <parameter type="float" name="factor" default=""/>
                <parameter type="float" name="rate" default=""/>
            </function>
            <function name="~QCamera" fullname="QCamera::~QCamera" href="qcamera.html#dtor.QCamera" status="active" access="public" location="qcamera.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QCamera()"/>
            <enum name="Error" fullname="QCamera::Error" href="qcamera.html#Error-enum" status="active" access="public" location="qcamera.h" documented="true">
                <value name="NoError" value="0"/>
                <value name="CameraError" value="1"/>
            </enum>
            <enum name="ExposureMode" fullname="QCamera::ExposureMode" href="qcamera.html#ExposureMode-enum" status="active" access="public" location="qcamera.h" documented="true">
                <value name="ExposureAuto" value="0"/>
                <value name="ExposureManual" value="1"/>
                <value name="ExposurePortrait" value="2"/>
                <value name="ExposureNight" value="3"/>
                <value name="ExposureSports" value="4"/>
                <value name="ExposureSnow" value="5"/>
                <value name="ExposureBeach" value="6"/>
                <value name="ExposureAction" value="7"/>
                <value name="ExposureLandscape" value="8"/>
                <value name="ExposureNightPortrait" value="9"/>
                <value name="ExposureTheatre" value="10"/>
                <value name="ExposureSunset" value="11"/>
                <value name="ExposureSteadyPhoto" value="12"/>
                <value name="ExposureFireworks" value="13"/>
                <value name="ExposureParty" value="14"/>
                <value name="ExposureCandlelight" value="15"/>
                <value name="ExposureBarcode" value="16"/>
            </enum>
            <enum name="Feature" fullname="QCamera::Feature" href="qcamera.html#Feature-enum" status="active" access="public" location="qcamera.h" documented="true" scoped="true" typedef="QCamera::Features">
                <value name="ColorTemperature" value="0x1"/>
                <value name="ExposureCompensation" value="0x2"/>
                <value name="IsoSensitivity" value="0x4"/>
                <value name="ManualExposureTime" value="0x8"/>
                <value name="CustomFocusPoint" value="0x10"/>
                <value name="FocusDistance" value="0x20"/>
            </enum>
            <enum name="FlashMode" fullname="QCamera::FlashMode" href="qcamera.html#FlashMode-enum" status="active" access="public" location="qcamera.h" documented="true">
                <value name="FlashOff" value="0"/>
                <value name="FlashOn" value="1"/>
                <value name="FlashAuto" value="2"/>
            </enum>
            <enum name="FocusMode" fullname="QCamera::FocusMode" href="qcamera.html#FocusMode-enum" status="active" access="public" location="qcamera.h" documented="true">
                <value name="FocusModeAuto" value="0"/>
                <value name="FocusModeAutoNear" value="1"/>
                <value name="FocusModeAutoFar" value="2"/>
                <value name="FocusModeHyperfocal" value="3"/>
                <value name="FocusModeInfinity" value="4"/>
                <value name="FocusModeManual" value="5"/>
            </enum>
            <enum name="TorchMode" fullname="QCamera::TorchMode" href="qcamera.html#TorchMode-enum" status="active" access="public" location="qcamera.h" documented="true">
                <value name="TorchOff" value="0"/>
                <value name="TorchOn" value="1"/>
                <value name="TorchAuto" value="2"/>
            </enum>
            <enum name="WhiteBalanceMode" fullname="QCamera::WhiteBalanceMode" href="qcamera.html#WhiteBalanceMode-enum" status="active" access="public" location="qcamera.h" documented="true">
                <value name="WhiteBalanceAuto" value="0"/>
                <value name="WhiteBalanceManual" value="1"/>
                <value name="WhiteBalanceSunlight" value="2"/>
                <value name="WhiteBalanceCloudy" value="3"/>
                <value name="WhiteBalanceShade" value="4"/>
                <value name="WhiteBalanceTungsten" value="5"/>
                <value name="WhiteBalanceFluorescent" value="6"/>
                <value name="WhiteBalanceFlash" value="7"/>
                <value name="WhiteBalanceSunset" value="8"/>
            </enum>
            <typedef name="Features" fullname="QCamera::Features" href="qcamera.html#Feature-enum" status="active" access="public" location="qcamera.h" enum="QCamera::Feature"/>
            <property name="active" fullname="QCamera::active" href="qcamera.html#active-prop" status="active" access="public" location="qcamera.h" documented="true">
                <getter name="isActive"/>
                <setter name="setActive"/>
                <notifier name="activeChanged"/>
            </property>
            <property name="cameraDevice" fullname="QCamera::cameraDevice" href="qcamera.html#cameraDevice-prop" status="active" access="public" location="qcamera.h" documented="true">
                <getter name="cameraDevice"/>
                <setter name="setCameraDevice"/>
                <notifier name="cameraDeviceChanged"/>
            </property>
            <property name="cameraFormat" fullname="QCamera::cameraFormat" href="qcamera.html#cameraFormat-prop" status="active" access="public" location="qcamera.h" documented="true">
                <getter name="cameraFormat"/>
                <setter name="setCameraFormat"/>
                <notifier name="cameraFormatChanged"/>
            </property>
            <property name="colorTemperature" fullname="QCamera::colorTemperature" href="qcamera.html#colorTemperature-prop" status="active" access="public" location="qcamera.h" documented="true">
                <getter name="colorTemperature"/>
                <setter name="setColorTemperature"/>
                <notifier name="colorTemperatureChanged"/>
            </property>
            <property name="customFocusPoint" fullname="QCamera::customFocusPoint" href="qcamera.html#customFocusPoint-prop" status="active" access="public" location="qcamera.h" documented="true">
                <getter name="customFocusPoint"/>
                <setter name="setCustomFocusPoint"/>
                <notifier name="customFocusPointChanged"/>
            </property>
            <property name="error" fullname="QCamera::error" href="qcamera.html#error-prop" status="active" access="public" location="qcamera.h" documented="true" writable="false">
                <getter name="error"/>
                <notifier name="errorChanged"/>
            </property>
            <property name="errorString" fullname="QCamera::errorString" href="qcamera.html#errorString-prop" status="active" access="public" location="qcamera.h" documented="true" writable="false">
                <getter name="errorString"/>
                <notifier name="errorChanged"/>
            </property>
            <property name="exposureCompensation" fullname="QCamera::exposureCompensation" href="qcamera.html#exposureCompensation-prop" status="active" access="public" location="qcamera.h" documented="true" brief="Exposure compensation in EV units">
                <getter name="exposureCompensation"/>
                <setter name="setExposureCompensation"/>
                <notifier name="exposureCompensationChanged"/>
            </property>
            <property name="exposureMode" fullname="QCamera::exposureMode" href="qcamera.html#exposureMode-prop" status="active" access="public" location="qcamera.h" documented="true" brief="Exposure mode being used">
                <getter name="exposureMode"/>
                <setter name="setExposureMode"/>
                <notifier name="exposureModeChanged"/>
            </property>
            <property name="exposureTime" fullname="QCamera::exposureTime" href="qcamera.html#exposureTime-prop" status="active" access="public" location="qcamera.h" documented="true" writable="false" brief="Camera's exposure time in seconds">
                <getter name="exposureTime"/>
                <notifier name="exposureTimeChanged"/>
            </property>
            <property name="flashMode" fullname="QCamera::flashMode" href="qcamera.html#flashMode-prop" status="active" access="public" location="qcamera.h" documented="true" brief="Flash mode being used">
                <getter name="flashMode"/>
                <setter name="setFlashMode"/>
                <notifier name="flashModeChanged"/>
            </property>
            <property name="flashReady" fullname="QCamera::flashReady" href="qcamera.html#flashReady-prop" status="active" access="public" location="qcamera.h" documented="true" writable="false" brief="Indicates if the flash is charged and ready to use">
                <getter name="isFlashReady"/>
                <notifier name="flashReady"/>
            </property>
            <property name="focusDistance" fullname="QCamera::focusDistance" href="qcamera.html#focusDistance-prop" status="active" access="public" location="qcamera.h" documented="true">
                <getter name="focusDistance"/>
                <setter name="setFocusDistance"/>
                <notifier name="focusDistanceChanged"/>
            </property>
            <property name="focusMode" fullname="QCamera::focusMode" href="qcamera.html#focusMode-prop" status="active" access="public" location="qcamera.h" documented="true" brief="The current camera focus mode">
                <getter name="focusMode"/>
                <setter name="setFocusMode"/>
            </property>
            <property name="focusPoint" fullname="QCamera::focusPoint" href="qcamera.html#focusPoint-prop" status="active" access="public" location="qcamera.h" documented="true" writable="false">
                <getter name="focusPoint"/>
                <notifier name="focusPointChanged"/>
            </property>
            <property name="isoSensitivity" fullname="QCamera::isoSensitivity" href="qcamera.html#isoSensitivity-prop" status="active" access="public" location="qcamera.h" documented="true" writable="false" brief="Sensor ISO sensitivity">
                <getter name="isoSensitivity"/>
                <notifier name="isoSensitivityChanged"/>
            </property>
            <property name="manualExposureTime" fullname="QCamera::manualExposureTime" href="qcamera.html#manualExposureTime-prop" status="active" access="public" location="qcamera.h" documented="true">
                <getter name="manualExposureTime"/>
                <setter name="setManualExposureTime"/>
                <notifier name="manualExposureTimeChanged"/>
            </property>
            <property name="manualIsoSensitivity" fullname="QCamera::manualIsoSensitivity" href="qcamera.html#manualIsoSensitivity-prop" status="active" access="public" location="qcamera.h" documented="true" brief="Describes a manually set ISO sensitivity">
                <getter name="manualIsoSensitivity"/>
                <setter name="setManualIsoSensitivity"/>
                <notifier name="manualIsoSensitivityChanged"/>
            </property>
            <property name="maximumZoomFactor" fullname="QCamera::maximumZoomFactor" href="qcamera.html#maximumZoomFactor-prop" status="active" access="public" location="qcamera.h" documented="true" writable="false">
                <getter name="maximumZoomFactor"/>
                <notifier name="maximumZoomFactorChanged"/>
            </property>
            <property name="minimumZoomFactor" fullname="QCamera::minimumZoomFactor" href="qcamera.html#minimumZoomFactor-prop" status="active" access="public" location="qcamera.h" documented="true" writable="false">
                <getter name="minimumZoomFactor"/>
                <notifier name="minimumZoomFactorChanged"/>
            </property>
            <property name="supportedFeatures" fullname="QCamera::supportedFeatures" href="qcamera.html#supportedFeatures-prop" status="active" access="public" location="qcamera.h" documented="true" writable="false">
                <getter name="supportedFeatures"/>
                <notifier name="supportedFeaturesChanged"/>
            </property>
            <property name="torchMode" fullname="QCamera::torchMode" href="qcamera.html#torchMode-prop" status="active" access="public" location="qcamera.h" documented="true" brief="Torch mode being used">
                <getter name="torchMode"/>
                <setter name="setTorchMode"/>
                <notifier name="torchModeChanged"/>
            </property>
            <property name="whiteBalanceMode" fullname="QCamera::whiteBalanceMode" href="qcamera.html#whiteBalanceMode-prop" status="active" access="public" location="qcamera.h" documented="true">
                <getter name="whiteBalanceMode"/>
                <setter name="setWhiteBalanceMode"/>
                <notifier name="whiteBalanceModeChanged"/>
            </property>
            <property name="zoomFactor" fullname="QCamera::zoomFactor" href="qcamera.html#zoomFactor-prop" status="active" access="public" location="qcamera.h" documented="true" brief="Current zoom factor">
                <getter name="zoomFactor"/>
                <setter name="setZoomFactor"/>
                <notifier name="zoomFactorChanged"/>
            </property>
        </class>
        <class name="QCameraDevice" href="qcameradevice.html" status="active" access="public" location="qcameradevice.h" documented="true" groups="multimedia,multimedia_camera" module="QtMultimedia" brief="General information about camera devices">
            <function name="QCameraDevice" fullname="QCameraDevice::QCameraDevice" href="qcameradevice.html#QCameraDevice" status="active" access="public" location="qcameradevice.h" documented="true" meta="constructor" signature="QCameraDevice()"/>
            <function name="QCameraDevice" fullname="QCameraDevice::QCameraDevice" href="qcameradevice.html#QCameraDevice-1" status="active" access="public" location="qcameradevice.h" documented="true" meta="copy-constructor" overload="true" overload-number="1" signature="QCameraDevice(const QCameraDevice &amp;other)">
                <parameter type="const QCameraDevice &amp;" name="other" default=""/>
            </function>
            <function name="correctionAngle" fullname="QCameraDevice::correctionAngle" href="qcameradevice.html#correctionAngle-prop" status="active" access="public" location="qcameradevice.h" meta="plain" const="true" associated-property="correctionAngle" type="QtVideo::Rotation" signature="QtVideo::Rotation correctionAngle() const"/>
            <function name="description" fullname="QCameraDevice::description" href="qcameradevice.html#description-prop" status="active" access="public" location="qcameradevice.h" meta="plain" const="true" associated-property="description" type="QString" signature="QString description() const"/>
            <function name="id" fullname="QCameraDevice::id" href="qcameradevice.html#id-prop" status="active" access="public" location="qcameradevice.h" meta="plain" const="true" associated-property="id" type="QByteArray" signature="QByteArray id() const"/>
            <function name="isDefault" fullname="QCameraDevice::isDefault" href="qcameradevice.html#isDefault-prop" status="active" access="public" location="qcameradevice.h" meta="plain" const="true" associated-property="isDefault" type="bool" signature="bool isDefault() const"/>
            <function name="isNull" fullname="QCameraDevice::isNull" href="qcameradevice.html#isNull" status="active" access="public" location="qcameradevice.h" documented="true" meta="plain" const="true" type="bool" signature="bool isNull() const"/>
            <function name="operator!=" fullname="QCameraDevice::operator!=" href="qcameradevice.html#operator-not-eq" status="active" access="public" location="qcameradevice.h" documented="true" meta="plain" const="true" type="bool" signature="bool operator!=(const QCameraDevice &amp;other) const">
                <parameter type="const QCameraDevice &amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QCameraDevice::operator=" href="qcameradevice.html#operator-eq" status="active" access="public" location="qcameradevice.h" documented="true" meta="copy-assign" type="QCameraDevice &amp;" signature="QCameraDevice &amp; operator=(const QCameraDevice &amp;other)">
                <parameter type="const QCameraDevice &amp;" name="other" default=""/>
            </function>
            <function name="operator==" fullname="QCameraDevice::operator==" href="qcameradevice.html#operator-eq-eq" status="active" access="public" location="qcameradevice.h" documented="true" meta="plain" const="true" type="bool" signature="bool operator==(const QCameraDevice &amp;other) const">
                <parameter type="const QCameraDevice &amp;" name="other" default=""/>
            </function>
            <function name="photoResolutions" fullname="QCameraDevice::photoResolutions" href="qcameradevice.html#photoResolutions" status="active" access="public" location="qcameradevice.h" documented="true" meta="plain" const="true" type="QList&lt;QSize&gt;" signature="QList&lt;QSize&gt; photoResolutions() const"/>
            <function name="position" fullname="QCameraDevice::position" href="qcameradevice.html#position-prop" status="active" access="public" location="qcameradevice.h" meta="plain" const="true" associated-property="position" type="QCameraDevice::Position" signature="QCameraDevice::Position position() const"/>
            <function name="videoFormats" fullname="QCameraDevice::videoFormats" href="qcameradevice.html#videoFormats-prop" status="active" access="public" location="qcameradevice.h" meta="plain" const="true" associated-property="videoFormats" type="QList&lt;QCameraFormat&gt;" signature="QList&lt;QCameraFormat&gt; videoFormats() const"/>
            <function name="~QCameraDevice" fullname="QCameraDevice::~QCameraDevice" href="qcameradevice.html#dtor.QCameraDevice" status="active" access="public" location="qcameradevice.h" documented="true" meta="destructor" noexcept="true" signature="~QCameraDevice()"/>
            <enum name="Position" fullname="QCameraDevice::Position" href="qcameradevice.html#Position-enum" status="active" access="public" location="qcameradevice.h" documented="true">
                <value name="UnspecifiedPosition" value="0"/>
                <value name="BackFace" value="1"/>
                <value name="FrontFace" value="2"/>
            </enum>
            <property name="correctionAngle" fullname="QCameraDevice::correctionAngle" href="qcameradevice.html#correctionAngle-prop" status="active" access="public" location="qcameradevice.h" since="6.7" documented="true" writable="false">
                <getter name="correctionAngle"/>
            </property>
            <property name="description" fullname="QCameraDevice::description" href="qcameradevice.html#description-prop" status="active" access="public" location="qcameradevice.h" documented="true" writable="false">
                <getter name="description"/>
            </property>
            <property name="id" fullname="QCameraDevice::id" href="qcameradevice.html#id-prop" status="active" access="public" location="qcameradevice.h" documented="true" writable="false">
                <getter name="id"/>
            </property>
            <property name="isDefault" fullname="QCameraDevice::isDefault" href="qcameradevice.html#isDefault-prop" status="active" access="public" location="qcameradevice.h" documented="true" writable="false">
                <getter name="isDefault"/>
            </property>
            <property name="position" fullname="QCameraDevice::position" href="qcameradevice.html#position-prop" status="active" access="public" location="qcameradevice.h" documented="true" writable="false">
                <getter name="position"/>
            </property>
            <property name="videoFormats" fullname="QCameraDevice::videoFormats" href="qcameradevice.html#videoFormats-prop" status="active" access="public" location="qcameradevice.h" documented="true" writable="false">
                <getter name="videoFormats"/>
            </property>
        </class>
        <class name="QCameraFormat" href="qcameraformat.html" status="active" access="public" location="qcameradevice.h" documented="true" groups="multimedia,multimedia_camera" module="QtMultimedia" brief="Describes a video format supported by a camera device">
            <function name="QCameraFormat" fullname="QCameraFormat::QCameraFormat" href="qcameraformat.html#QCameraFormat" status="active" access="public" location="qcameradevice.h" documented="true" meta="constructor" noexcept="true" signature="QCameraFormat()"/>
            <function name="QCameraFormat" fullname="QCameraFormat::QCameraFormat" href="qcameraformat.html#QCameraFormat-1" status="active" access="public" location="qcameradevice.h" documented="true" meta="copy-constructor" noexcept="true" overload="true" overload-number="1" signature="QCameraFormat(const QCameraFormat &amp;other)">
                <parameter type="const QCameraFormat &amp;" name="other" default=""/>
            </function>
            <function name="isNull" fullname="QCameraFormat::isNull" href="qcameraformat.html#isNull" status="active" access="public" location="qcameradevice.h" documented="true" meta="plain" const="true" noexcept="true" type="bool" signature="bool isNull() const"/>
            <function name="maxFrameRate" fullname="QCameraFormat::maxFrameRate" href="qcameraformat.html#maxFrameRate-prop" status="active" access="public" location="qcameradevice.h" meta="plain" const="true" noexcept="true" associated-property="maxFrameRate" type="float" signature="float maxFrameRate() const"/>
            <function name="minFrameRate" fullname="QCameraFormat::minFrameRate" href="qcameraformat.html#minFrameRate-prop" status="active" access="public" location="qcameradevice.h" meta="plain" const="true" noexcept="true" associated-property="minFrameRate" type="float" signature="float minFrameRate() const"/>
            <function name="operator!=" fullname="QCameraFormat::operator!=" href="qcameraformat.html#operator-not-eq" status="active" access="public" location="qcameradevice.h" documented="true" meta="plain" const="true" type="bool" signature="bool operator!=(const QCameraFormat &amp;other) const">
                <parameter type="const QCameraFormat &amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QCameraFormat::operator=" href="qcameraformat.html#operator-eq" status="active" access="public" location="qcameradevice.h" documented="true" meta="copy-assign" noexcept="true" type="QCameraFormat &amp;" signature="QCameraFormat &amp; operator=(const QCameraFormat &amp;other)">
                <parameter type="const QCameraFormat &amp;" name="other" default=""/>
            </function>
            <function name="operator==" fullname="QCameraFormat::operator==" href="qcameraformat.html#operator-eq-eq" status="active" access="public" location="qcameradevice.h" documented="true" meta="plain" const="true" type="bool" signature="bool operator==(const QCameraFormat &amp;other) const">
                <parameter type="const QCameraFormat &amp;" name="other" default=""/>
            </function>
            <function name="pixelFormat" fullname="QCameraFormat::pixelFormat" href="qcameraformat.html#pixelFormat-prop" status="active" access="public" location="qcameradevice.h" meta="plain" const="true" noexcept="true" associated-property="pixelFormat" type="QVideoFrameFormat::PixelFormat" signature="QVideoFrameFormat::PixelFormat pixelFormat() const"/>
            <function name="resolution" fullname="QCameraFormat::resolution" href="qcameraformat.html#resolution-prop" status="active" access="public" location="qcameradevice.h" meta="plain" const="true" noexcept="true" associated-property="resolution" type="QSize" signature="QSize resolution() const"/>
            <function name="~QCameraFormat" fullname="QCameraFormat::~QCameraFormat" href="qcameraformat.html#dtor.QCameraFormat" status="active" access="public" location="qcameradevice.h" documented="true" meta="destructor" noexcept="true" signature="~QCameraFormat()"/>
            <property name="maxFrameRate" fullname="QCameraFormat::maxFrameRate" href="qcameraformat.html#maxFrameRate-prop" status="active" access="public" location="qcameradevice.h" documented="true" writable="false">
                <getter name="maxFrameRate"/>
            </property>
            <property name="minFrameRate" fullname="QCameraFormat::minFrameRate" href="qcameraformat.html#minFrameRate-prop" status="active" access="public" location="qcameradevice.h" documented="true" writable="false">
                <getter name="minFrameRate"/>
            </property>
            <property name="pixelFormat" fullname="QCameraFormat::pixelFormat" href="qcameraformat.html#pixelFormat-prop" status="active" access="public" location="qcameradevice.h" documented="true" writable="false">
                <getter name="pixelFormat"/>
            </property>
            <property name="resolution" fullname="QCameraFormat::resolution" href="qcameraformat.html#resolution-prop" status="active" access="public" location="qcameradevice.h" documented="true" writable="false">
                <getter name="resolution"/>
            </property>
        </class>
        <class name="QCapturableWindow" href="qcapturablewindow.html" status="active" access="public" location="qcapturablewindow.h" since="6.6" documented="true" groups="multimedia,multimedia_video" module="QtMultimedia" brief="Used for getting the basic information of a capturable window">
            <function name="QCapturableWindow" fullname="QCapturableWindow::QCapturableWindow" href="qcapturablewindow.html#QCapturableWindow" status="active" access="public" location="qcapturablewindow.h" documented="true" meta="constructor" signature="QCapturableWindow()"/>
            <function name="QCapturableWindow" fullname="QCapturableWindow::QCapturableWindow" href="qcapturablewindow.html#QCapturableWindow-1" status="active" access="public" location="qcapturablewindow.h" documented="true" meta="copy-constructor" overload="true" overload-number="1" signature="QCapturableWindow(const QCapturableWindow &amp;other)">
                <parameter type="const QCapturableWindow &amp;" name="other" default=""/>
            </function>
            <function name="QCapturableWindow" fullname="QCapturableWindow::QCapturableWindow" href="qcapturablewindow.html#QCapturableWindow-2" status="active" access="public" location="qcapturablewindow.h" documented="true" meta="move-constructor" noexcept="true" overload="true" overload-number="2" signature="QCapturableWindow(QCapturableWindow &amp;&amp;other)">
                <parameter type="QCapturableWindow &amp;&amp;" name="other" default=""/>
            </function>
            <function name="description" fullname="QCapturableWindow::description" href="qcapturablewindow.html#description" status="active" access="public" location="qcapturablewindow.h" documented="true" meta="plain" const="true" associated-property="description" type="QString" signature="QString description() const"/>
            <function name="isValid" fullname="QCapturableWindow::isValid" href="qcapturablewindow.html#isValid" status="active" access="public" location="qcapturablewindow.h" documented="true" meta="plain" const="true" associated-property="isValid" type="bool" signature="bool isValid() const"/>
            <function name="operator!=" href="qcapturablewindow.html#operator-not-eq" status="active" access="public" location="qcapturablewindow.h" documented="true" related="4" meta="plain" noexcept="true" type="bool" signature="bool operator!=(const QCapturableWindow &amp;lhs, const QCapturableWindow &amp;rhs)">
                <parameter type="const QCapturableWindow &amp;" name="lhs" default=""/>
                <parameter type="const QCapturableWindow &amp;" name="rhs" default=""/>
            </function>
            <function name="operator=" fullname="QCapturableWindow::operator=" href="qcapturablewindow.html#operator-eq" status="active" access="public" location="qcapturablewindow.h" documented="true" meta="copy-assign" type="QCapturableWindow &amp;" signature="QCapturableWindow &amp; operator=(const QCapturableWindow &amp;other)">
                <parameter type="const QCapturableWindow &amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QCapturableWindow::operator=" href="qcapturablewindow.html#operator-eq-1" status="active" access="public" location="qcapturablewindow.h" documented="true" meta="move-assign" noexcept="true" overload="true" overload-number="1" type="QCapturableWindow &amp;" signature="QCapturableWindow &amp; operator=(QCapturableWindow &amp;&amp;other)">
                <parameter type="QCapturableWindow &amp;&amp;" name="other" default=""/>
            </function>
            <function name="operator==" href="qcapturablewindow.html#operator-eq-eq" status="active" access="public" location="qcapturablewindow.h" documented="true" related="5" meta="plain" noexcept="true" type="bool" signature="bool operator==(const QCapturableWindow &amp;lhs, const QCapturableWindow &amp;rhs)">
                <parameter type="const QCapturableWindow &amp;" name="lhs" default=""/>
                <parameter type="const QCapturableWindow &amp;" name="rhs" default=""/>
            </function>
            <function name="swap" fullname="QCapturableWindow::swap" href="qcapturablewindow.html#swap" status="active" access="public" location="qcapturablewindow.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QCapturableWindow &amp;other)">
                <parameter type="QCapturableWindow &amp;" name="other" default=""/>
            </function>
            <function name="~QCapturableWindow" fullname="QCapturableWindow::~QCapturableWindow" href="qcapturablewindow.html#dtor.QCapturableWindow" status="active" access="public" location="qcapturablewindow.h" documented="true" meta="destructor" noexcept="true" signature="~QCapturableWindow()"/>
        </class>
        <class name="QGraphicsVideoItem" href="qgraphicsvideoitem.html" status="active" access="public" location="qgraphicsvideoitem.h" documented="true" groups="multimedia" bases="QGraphicsObject" module="QtMultimediaWidgets" brief="Graphics item which display video produced by a QMediaPlayer or QCamera">
            <function name="QGraphicsVideoItem" fullname="QGraphicsVideoItem::QGraphicsVideoItem" href="qgraphicsvideoitem.html#QGraphicsVideoItem" status="active" access="public" location="qgraphicsvideoitem.h" documented="true" meta="constructor" explicit="true" signature="QGraphicsVideoItem(QGraphicsItem *parent)">
                <parameter type="QGraphicsItem *" name="parent" default="nullptr"/>
            </function>
            <function name="aspectRatioMode" fullname="QGraphicsVideoItem::aspectRatioMode" href="qgraphicsvideoitem.html#aspectRatioMode-prop" status="active" access="public" location="qgraphicsvideoitem.h" meta="plain" const="true" associated-property="aspectRatioMode" type="Qt::AspectRatioMode" signature="Qt::AspectRatioMode aspectRatioMode() const"/>
            <function name="boundingRect" fullname="QGraphicsVideoItem::boundingRect" href="qgraphicsvideoitem.html#boundingRect" status="active" access="public" location="qgraphicsvideoitem.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QRectF" signature="QRectF boundingRect() const override"/>
            <function name="nativeSize" fullname="QGraphicsVideoItem::nativeSize" href="qgraphicsvideoitem.html#nativeSize-prop" status="active" access="public" location="qgraphicsvideoitem.h" meta="plain" const="true" associated-property="nativeSize" type="QSizeF" signature="QSizeF nativeSize() const"/>
            <function name="nativeSizeChanged" fullname="QGraphicsVideoItem::nativeSizeChanged" href="qgraphicsvideoitem.html#nativeSize-prop" status="active" access="public" location="qgraphicsvideoitem.h" meta="signal" associated-property="nativeSize" type="void" signature="void nativeSizeChanged(const QSizeF &amp;size)">
                <parameter type="const QSizeF &amp;" name="size" default=""/>
            </function>
            <function name="offset" fullname="QGraphicsVideoItem::offset" href="qgraphicsvideoitem.html#offset-prop" status="active" access="public" location="qgraphicsvideoitem.h" meta="plain" const="true" associated-property="offset" type="QPointF" signature="QPointF offset() const"/>
            <function name="paint" fullname="QGraphicsVideoItem::paint" href="qgraphicsvideoitem.html#paint" status="active" access="public" location="qgraphicsvideoitem.h" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget) override">
                <parameter type="QPainter *" name="painter" default=""/>
                <parameter type="const QStyleOptionGraphicsItem *" name="option" default=""/>
                <parameter type="QWidget *" name="widget" default="nullptr"/>
            </function>
            <function name="setAspectRatioMode" fullname="QGraphicsVideoItem::setAspectRatioMode" href="qgraphicsvideoitem.html#aspectRatioMode-prop" status="active" access="public" location="qgraphicsvideoitem.h" meta="plain" associated-property="aspectRatioMode" type="void" signature="void setAspectRatioMode(Qt::AspectRatioMode mode)">
                <parameter type="Qt::AspectRatioMode" name="mode" default=""/>
            </function>
            <function name="setOffset" fullname="QGraphicsVideoItem::setOffset" href="qgraphicsvideoitem.html#offset-prop" status="active" access="public" location="qgraphicsvideoitem.h" meta="plain" associated-property="offset" type="void" signature="void setOffset(const QPointF &amp;offset)">
                <parameter type="const QPointF &amp;" name="offset" default=""/>
            </function>
            <function name="setSize" fullname="QGraphicsVideoItem::setSize" href="qgraphicsvideoitem.html#size-prop" status="active" access="public" location="qgraphicsvideoitem.h" meta="plain" associated-property="size" type="void" signature="void setSize(const QSizeF &amp;size)">
                <parameter type="const QSizeF &amp;" name="size" default=""/>
            </function>
            <function name="size" fullname="QGraphicsVideoItem::size" href="qgraphicsvideoitem.html#size-prop" status="active" access="public" location="qgraphicsvideoitem.h" meta="plain" const="true" associated-property="size" type="QSizeF" signature="QSizeF size() const"/>
            <function name="type" fullname="QGraphicsVideoItem::type" href="qgraphicsvideoitem.html#type" status="active" access="public" location="qgraphicsvideoitem.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="int" signature="int type() const override"/>
            <function name="videoSink" fullname="QGraphicsVideoItem::videoSink" href="qgraphicsvideoitem.html#videoSink-prop" status="active" access="public" location="qgraphicsvideoitem.h" meta="plain" const="true" associated-property="videoSink" type="QVideoSink *" signature="QVideoSink * videoSink() const"/>
            <function name="~QGraphicsVideoItem" fullname="QGraphicsVideoItem::~QGraphicsVideoItem" href="qgraphicsvideoitem.html#dtor.QGraphicsVideoItem" status="active" access="public" location="qgraphicsvideoitem.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QGraphicsVideoItem()"/>
            <property name="aspectRatioMode" fullname="QGraphicsVideoItem::aspectRatioMode" href="qgraphicsvideoitem.html#aspectRatioMode-prop" status="active" access="public" location="qgraphicsvideoitem.h" documented="true" brief="How a video is scaled to fit the graphics item's size">
                <getter name="aspectRatioMode"/>
                <setter name="setAspectRatioMode"/>
            </property>
            <property name="nativeSize" fullname="QGraphicsVideoItem::nativeSize" href="qgraphicsvideoitem.html#nativeSize-prop" status="active" access="public" location="qgraphicsvideoitem.h" documented="true" writable="false" brief="The native size of the video">
                <getter name="nativeSize"/>
                <notifier name="nativeSizeChanged"/>
            </property>
            <property name="offset" fullname="QGraphicsVideoItem::offset" href="qgraphicsvideoitem.html#offset-prop" status="active" access="public" location="qgraphicsvideoitem.h" documented="true" brief="The video item's offset">
                <getter name="offset"/>
                <setter name="setOffset"/>
            </property>
            <property name="size" fullname="QGraphicsVideoItem::size" href="qgraphicsvideoitem.html#size-prop" status="active" access="public" location="qgraphicsvideoitem.h" documented="true" brief="The video item's size">
                <getter name="size"/>
                <setter name="setSize"/>
            </property>
            <property name="videoSink" fullname="QGraphicsVideoItem::videoSink" href="qgraphicsvideoitem.html#videoSink-prop" status="active" access="public" location="qgraphicsvideoitem.h" documented="true" writable="false" brief="Returns the underlying video sink that can render video frames to the current item. This property is never nullptr. Example of how to render video frames to QGraphicsVideoItem:">
                <getter name="videoSink"/>
            </property>
        </class>
        <class name="QImageCapture" href="qimagecapture.html" status="active" access="public" location="qimagecapture.h" documented="true" groups="multimedia,multimedia_camera" bases="QObject" module="QtMultimedia" brief="Used for the recording of media content">
            <function name="QImageCapture" fullname="QImageCapture::QImageCapture" href="qimagecapture.html#QImageCapture" status="active" access="public" location="qimagecapture.h" documented="true" meta="constructor" explicit="true" signature="QImageCapture(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="addMetaData" fullname="QImageCapture::addMetaData" href="qimagecapture.html#addMetaData" status="active" access="public" location="qimagecapture.h" documented="true" meta="plain" type="void" signature="void addMetaData(const QMediaMetaData &amp;metaData)">
                <parameter type="const QMediaMetaData &amp;" name="metaData" default=""/>
            </function>
            <function name="capture" fullname="QImageCapture::capture" href="qimagecapture.html#capture" status="active" access="public" location="qimagecapture.h" documented="true" meta="slot" type="int" signature="int capture()"/>
            <function name="captureSession" fullname="QImageCapture::captureSession" href="qimagecapture.html#captureSession" status="active" access="public" location="qimagecapture.h" documented="true" meta="plain" const="true" type="QMediaCaptureSession *" signature="QMediaCaptureSession * captureSession() const"/>
            <function name="captureToFile" fullname="QImageCapture::captureToFile" href="qimagecapture.html#captureToFile" status="active" access="public" location="qimagecapture.h" documented="true" meta="slot" type="int" signature="int captureToFile(const QString &amp;file)">
                <parameter type="const QString &amp;" name="file" default="QString()"/>
            </function>
            <function name="error" fullname="QImageCapture::error" href="qimagecapture.html#error-prop" status="active" access="public" location="qimagecapture.h" meta="plain" const="true" associated-property="error" type="QImageCapture::Error" signature="QImageCapture::Error error() const"/>
            <function name="errorChanged" fullname="QImageCapture::errorChanged" href="qimagecapture.html#errorChanged" status="active" access="public" location="qimagecapture.h" meta="signal" associated-property="error,errorString" type="void" signature="void errorChanged()"/>
            <function name="errorOccurred" fullname="QImageCapture::errorOccurred" href="qimagecapture.html#errorOccurred" status="active" access="public" location="qimagecapture.h" documented="true" meta="signal" type="void" signature="void errorOccurred(int id, QImageCapture::Error error, const QString &amp;errorString)">
                <parameter type="int" name="id" default=""/>
                <parameter type="QImageCapture::Error" name="error" default=""/>
                <parameter type="const QString &amp;" name="errorString" default=""/>
            </function>
            <function name="errorString" fullname="QImageCapture::errorString" href="qimagecapture.html#errorString-prop" status="active" access="public" location="qimagecapture.h" meta="plain" const="true" associated-property="errorString" type="QString" signature="QString errorString() const"/>
            <function name="fileFormat" fullname="QImageCapture::fileFormat" href="qimagecapture.html#fileFormat-prop" status="active" access="public" location="qimagecapture.h" meta="plain" const="true" associated-property="fileFormat" type="QImageCapture::FileFormat" signature="QImageCapture::FileFormat fileFormat() const"/>
            <function name="fileFormatChanged" fullname="QImageCapture::fileFormatChanged" href="qimagecapture.html#fileFormat-prop" status="active" access="public" location="qimagecapture.h" meta="signal" associated-property="fileFormat" type="void" signature="void fileFormatChanged()"/>
            <function name="fileFormatDescription" fullname="QImageCapture::fileFormatDescription" href="qimagecapture.html#fileFormatDescription" status="active" access="public" location="qimagecapture.h" documented="true" meta="plain" static="true" type="QString" signature="QString fileFormatDescription(QImageCapture::FileFormat f)">
                <parameter type="QImageCapture::FileFormat" name="f" default=""/>
            </function>
            <function name="fileFormatName" fullname="QImageCapture::fileFormatName" href="qimagecapture.html#fileFormatName" status="active" access="public" location="qimagecapture.h" documented="true" meta="plain" static="true" type="QString" signature="QString fileFormatName(QImageCapture::FileFormat f)">
                <parameter type="QImageCapture::FileFormat" name="f" default=""/>
            </function>
            <function name="imageAvailable" fullname="QImageCapture::imageAvailable" href="qimagecapture.html#imageAvailable" status="active" access="public" location="qimagecapture.h" documented="true" meta="signal" type="void" signature="void imageAvailable(int id, const QVideoFrame &amp;frame)">
                <parameter type="int" name="id" default=""/>
                <parameter type="const QVideoFrame &amp;" name="frame" default=""/>
            </function>
            <function name="imageCaptured" fullname="QImageCapture::imageCaptured" href="qimagecapture.html#imageCaptured" status="active" access="public" location="qimagecapture.h" documented="true" meta="signal" type="void" signature="void imageCaptured(int id, const QImage &amp;preview)">
                <parameter type="int" name="id" default=""/>
                <parameter type="const QImage &amp;" name="preview" default=""/>
            </function>
            <function name="imageExposed" fullname="QImageCapture::imageExposed" href="qimagecapture.html#imageExposed" status="active" access="public" location="qimagecapture.h" documented="true" meta="signal" type="void" signature="void imageExposed(int id)">
                <parameter type="int" name="id" default=""/>
            </function>
            <function name="imageMetadataAvailable" fullname="QImageCapture::imageMetadataAvailable" href="qimagecapture.html#imageMetadataAvailable" status="active" access="public" location="qimagecapture.h" documented="true" meta="signal" type="void" signature="void imageMetadataAvailable(int id, const QMediaMetaData &amp;metaData)">
                <parameter type="int" name="id" default=""/>
                <parameter type="const QMediaMetaData &amp;" name="metaData" default=""/>
            </function>
            <function name="imageSaved" fullname="QImageCapture::imageSaved" href="qimagecapture.html#imageSaved" status="active" access="public" location="qimagecapture.h" documented="true" meta="signal" type="void" signature="void imageSaved(int id, const QString &amp;fileName)">
                <parameter type="int" name="id" default=""/>
                <parameter type="const QString &amp;" name="fileName" default=""/>
            </function>
            <function name="isAvailable" fullname="QImageCapture::isAvailable" href="qimagecapture.html#isAvailable" status="active" access="public" location="qimagecapture.h" documented="true" meta="plain" const="true" type="bool" signature="bool isAvailable() const"/>
            <function name="isReadyForCapture" fullname="QImageCapture::isReadyForCapture" href="qimagecapture.html#readyForCapture-prop" status="active" access="public" location="qimagecapture.h" meta="plain" const="true" associated-property="readyForCapture" type="bool" signature="bool isReadyForCapture() const"/>
            <function name="metaData" fullname="QImageCapture::metaData" href="qimagecapture.html#metaData-prop" status="active" access="public" location="qimagecapture.h" meta="plain" const="true" associated-property="metaData" type="QMediaMetaData" signature="QMediaMetaData metaData() const"/>
            <function name="metaDataChanged" fullname="QImageCapture::metaDataChanged" href="qimagecapture.html#metaData-prop" status="active" access="public" location="qimagecapture.h" meta="signal" associated-property="metaData" type="void" signature="void metaDataChanged()"/>
            <function name="quality" fullname="QImageCapture::quality" href="qimagecapture.html#quality-prop" status="active" access="public" location="qimagecapture.h" meta="plain" const="true" associated-property="quality" type="QImageCapture::Quality" signature="QImageCapture::Quality quality() const"/>
            <function name="qualityChanged" fullname="QImageCapture::qualityChanged" href="qimagecapture.html#quality-prop" status="active" access="public" location="qimagecapture.h" meta="signal" associated-property="quality" type="void" signature="void qualityChanged()"/>
            <function name="readyForCaptureChanged" fullname="QImageCapture::readyForCaptureChanged" href="qimagecapture.html#readyForCaptureChanged" status="active" access="public" location="qimagecapture.h" documented="true" meta="signal" associated-property="readyForCapture" type="void" signature="void readyForCaptureChanged(bool ready)">
                <parameter type="bool" name="ready" default=""/>
            </function>
            <function name="resolution" fullname="QImageCapture::resolution" href="qimagecapture.html#resolution" status="active" access="public" location="qimagecapture.h" documented="true" meta="plain" const="true" type="QSize" signature="QSize resolution() const"/>
            <function name="resolutionChanged" fullname="QImageCapture::resolutionChanged" href="qimagecapture.html#resolutionChanged" status="active" access="public" location="qimagecapture.h" documented="true" meta="signal" type="void" signature="void resolutionChanged()"/>
            <function name="setFileFormat" fullname="QImageCapture::setFileFormat" href="qimagecapture.html#setFileFormat" status="active" access="public" location="qimagecapture.h" documented="true" meta="plain" type="void" signature="void setFileFormat(QImageCapture::FileFormat format)">
                <parameter type="QImageCapture::FileFormat" name="format" default=""/>
            </function>
            <function name="setMetaData" fullname="QImageCapture::setMetaData" href="qimagecapture.html#setMetaData" status="active" access="public" location="qimagecapture.h" documented="true" meta="plain" associated-property="metaData" type="void" signature="void setMetaData(const QMediaMetaData &amp;metaData)">
                <parameter type="const QMediaMetaData &amp;" name="metaData" default=""/>
            </function>
            <function name="setQuality" fullname="QImageCapture::setQuality" href="qimagecapture.html#setQuality" status="active" access="public" location="qimagecapture.h" documented="true" meta="plain" type="void" signature="void setQuality(QImageCapture::Quality quality)">
                <parameter type="QImageCapture::Quality" name="quality" default=""/>
            </function>
            <function name="setResolution" fullname="QImageCapture::setResolution" href="qimagecapture.html#setResolution" status="active" access="public" location="qimagecapture.h" documented="true" meta="plain" type="void" signature="void setResolution(const QSize &amp;resolution)">
                <parameter type="const QSize &amp;" name="resolution" default=""/>
            </function>
            <function name="setResolution" fullname="QImageCapture::setResolution" href="qimagecapture.html#setResolution-1" status="active" access="public" location="qimagecapture.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void setResolution(int width, int height)">
                <parameter type="int" name="width" default=""/>
                <parameter type="int" name="height" default=""/>
            </function>
            <function name="supportedFormats" fullname="QImageCapture::supportedFormats" href="qimagecapture.html#supportedFormats" status="active" access="public" location="qimagecapture.h" documented="true" meta="plain" static="true" type="QList&lt;QImageCapture::FileFormat&gt;" signature="QList&lt;QImageCapture::FileFormat&gt; supportedFormats()"/>
            <function name="~QImageCapture" fullname="QImageCapture::~QImageCapture" href="qimagecapture.html#dtor.QImageCapture" status="active" access="public" location="qimagecapture.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QImageCapture()"/>
            <enum name="Error" fullname="QImageCapture::Error" href="qimagecapture.html#Error-enum" status="active" access="public" location="qimagecapture.h" documented="true">
                <value name="NoError" value="0"/>
                <value name="NotReadyError" value="1"/>
                <value name="ResourceError" value="2"/>
                <value name="OutOfSpaceError" value="3"/>
                <value name="NotSupportedFeatureError" value="4"/>
                <value name="FormatError" value="5"/>
            </enum>
            <enum name="FileFormat" fullname="QImageCapture::FileFormat" href="qimagecapture.html#FileFormat-enum" status="active" access="public" location="qimagecapture.h" documented="true">
                <value name="UnspecifiedFormat" value="0"/>
                <value name="JPEG" value="1"/>
                <value name="PNG" value="2"/>
                <value name="WebP" value="3"/>
                <value name="Tiff" value="4"/>
                <value name="LastFileFormat" value="Tiff"/>
            </enum>
            <enum name="Quality" fullname="QImageCapture::Quality" href="qimagecapture.html#Quality-enum" status="active" access="public" location="qimagecapture.h" documented="true">
                <value name="VeryLowQuality" value="0"/>
                <value name="LowQuality" value="1"/>
                <value name="NormalQuality" value="2"/>
                <value name="HighQuality" value="3"/>
                <value name="VeryHighQuality" value="4"/>
            </enum>
            <property name="error" fullname="QImageCapture::error" href="qimagecapture.html#error-prop" status="active" access="public" location="qimagecapture.h" documented="true" writable="false">
                <getter name="error"/>
                <notifier name="errorChanged"/>
            </property>
            <property name="errorString" fullname="QImageCapture::errorString" href="qimagecapture.html#errorString-prop" status="active" access="public" location="qimagecapture.h" documented="true" writable="false">
                <getter name="errorString"/>
                <notifier name="errorChanged"/>
            </property>
            <property name="fileFormat" fullname="QImageCapture::fileFormat" href="qimagecapture.html#fileFormat-prop" status="active" access="public" location="qimagecapture.h" documented="true" writable="false" brief="Image format">
                <getter name="fileFormat"/>
                <notifier name="fileFormatChanged"/>
            </property>
            <property name="metaData" fullname="QImageCapture::metaData" href="qimagecapture.html#metaData-prop" status="active" access="public" location="qimagecapture.h" documented="true" brief="Meta data that will get embedded into the image">
                <getter name="metaData"/>
                <setter name="setMetaData"/>
                <notifier name="metaDataChanged"/>
            </property>
            <property name="quality" fullname="QImageCapture::quality" href="qimagecapture.html#quality-prop" status="active" access="public" location="qimagecapture.h" documented="true" writable="false" brief="Image encoding quality">
                <getter name="quality"/>
                <notifier name="qualityChanged"/>
            </property>
            <property name="readyForCapture" fullname="QImageCapture::readyForCapture" href="qimagecapture.html#readyForCapture-prop" status="active" access="public" location="qimagecapture.h" documented="true" writable="false">
                <getter name="isReadyForCapture"/>
                <notifier name="readyForCaptureChanged"/>
            </property>
        </class>
        <page name="declarative-camera" href="qtmultimedia-declarative-camera-example.html" status="active" location="declarative-camera.qdoc" documented="true" groups="camera_examples_qml,category Mobile,category Multimedia,multimedia_examples" subtype="example" title="QML Camera Application" fulltitle="QML Camera Application" subtitle="" brief="This Qt Quick based application shows how to use the API to capture a still image or video">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="application-structure" title="Application structure" level="1"/>
            <contents name="using-screen-orientation-to-select-layout" title="Using screen orientation to select layout" level="1"/>
            <contents name="controls-for-capturing" title="Controls for capturing" level="1"/>
            <contents name="image-capturing" title="Image capturing" level="1"/>
            <contents name="zoom-control" title="Zoom control" level="1"/>
            <contents name="flash-and-torch-control" title="Flash and torch control" level="1"/>
            <page name="declarative-camera/CameraButton.qml" href="qtmultimedia-declarative-camera-camerabutton-qml.html" status="active" subtype="file" title="" fulltitle="CameraButton.qml Example File" subtitle="declarative-camera/CameraButton.qml"/>
            <page name="declarative-camera/CameraListButton.qml" href="qtmultimedia-declarative-camera-cameralistbutton-qml.html" status="active" subtype="file" title="" fulltitle="CameraListButton.qml Example File" subtitle="declarative-camera/CameraListButton.qml"/>
            <page name="declarative-camera/CameraListPopup.qml" href="qtmultimedia-declarative-camera-cameralistpopup-qml.html" status="active" subtype="file" title="" fulltitle="CameraListPopup.qml Example File" subtitle="declarative-camera/CameraListPopup.qml"/>
            <page name="declarative-camera/CameraPropertyButton.qml" href="qtmultimedia-declarative-camera-camerapropertybutton-qml.html" status="active" subtype="file" title="" fulltitle="CameraPropertyButton.qml Example File" subtitle="declarative-camera/CameraPropertyButton.qml"/>
            <page name="declarative-camera/CameraPropertyPopup.qml" href="qtmultimedia-declarative-camera-camerapropertypopup-qml.html" status="active" subtype="file" title="" fulltitle="CameraPropertyPopup.qml Example File" subtitle="declarative-camera/CameraPropertyPopup.qml"/>
            <page name="declarative-camera/FlashControl.qml" href="qtmultimedia-declarative-camera-flashcontrol-qml.html" status="active" subtype="file" title="" fulltitle="FlashControl.qml Example File" subtitle="declarative-camera/FlashControl.qml"/>
            <page name="declarative-camera/PhotoCaptureControls.qml" href="qtmultimedia-declarative-camera-photocapturecontrols-qml.html" status="active" subtype="file" title="" fulltitle="PhotoCaptureControls.qml Example File" subtitle="declarative-camera/PhotoCaptureControls.qml"/>
            <page name="declarative-camera/PhotoPreview.qml" href="qtmultimedia-declarative-camera-photopreview-qml.html" status="active" subtype="file" title="" fulltitle="PhotoPreview.qml Example File" subtitle="declarative-camera/PhotoPreview.qml"/>
            <page name="declarative-camera/Popup.qml" href="qtmultimedia-declarative-camera-popup-qml.html" status="active" subtype="file" title="" fulltitle="Popup.qml Example File" subtitle="declarative-camera/Popup.qml"/>
            <page name="declarative-camera/VideoCaptureControls.qml" href="qtmultimedia-declarative-camera-videocapturecontrols-qml.html" status="active" subtype="file" title="" fulltitle="VideoCaptureControls.qml Example File" subtitle="declarative-camera/VideoCaptureControls.qml"/>
            <page name="declarative-camera/VideoPreview.qml" href="qtmultimedia-declarative-camera-videopreview-qml.html" status="active" subtype="file" title="" fulltitle="VideoPreview.qml Example File" subtitle="declarative-camera/VideoPreview.qml"/>
            <page name="declarative-camera/ZoomControl.qml" href="qtmultimedia-declarative-camera-zoomcontrol-qml.html" status="active" subtype="file" title="" fulltitle="ZoomControl.qml Example File" subtitle="declarative-camera/ZoomControl.qml"/>
            <page name="declarative-camera/declarative-camera.qml" href="qtmultimedia-declarative-camera-declarative-camera-qml.html" status="active" subtype="file" title="" fulltitle="declarative-camera.qml Example File" subtitle="declarative-camera/declarative-camera.qml"/>
            <page name="declarative-camera/qmlcamera.cpp" href="qtmultimedia-declarative-camera-qmlcamera-cpp.html" status="active" subtype="file" title="" fulltitle="qmlcamera.cpp Example File" subtitle="declarative-camera/qmlcamera.cpp"/>
            <page name="declarative-camera/CMakeLists.txt" href="qtmultimedia-declarative-camera-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="declarative-camera/CMakeLists.txt"/>
            <page name="declarative-camera/declarative-camera.pro" href="qtmultimedia-declarative-camera-declarative-camera-pro.html" status="active" subtype="file" title="" fulltitle="declarative-camera.pro Example File" subtitle="declarative-camera/declarative-camera.pro"/>
            <page name="declarative-camera/declarative-camera.qmlproject" href="qtmultimedia-declarative-camera-declarative-camera-qmlproject.html" status="active" subtype="file" title="" fulltitle="declarative-camera.qmlproject Example File" subtitle="declarative-camera/declarative-camera.qmlproject"/>
            <page name="declarative-camera/declarative-camera.qrc" href="qtmultimedia-declarative-camera-declarative-camera-qrc.html" status="active" subtype="file" title="" fulltitle="declarative-camera.qrc Example File" subtitle="declarative-camera/declarative-camera.qrc"/>
            <page name="declarative-camera/images/camera_auto_mode.png" href="qtmultimedia-declarative-camera-images-camera-auto-mode-png.html" status="active" subtype="image" title="" fulltitle="camera_auto_mode.png Image File" subtitle="declarative-camera/images/camera_auto_mode.png"/>
            <page name="declarative-camera/images/camera_camera_setting.png" href="qtmultimedia-declarative-camera-images-camera-camera-setting-png.html" status="active" subtype="image" title="" fulltitle="camera_camera_setting.png Image File" subtitle="declarative-camera/images/camera_camera_setting.png"/>
            <page name="declarative-camera/images/camera_flash_auto.png" href="qtmultimedia-declarative-camera-images-camera-flash-auto-png.html" status="active" subtype="image" title="" fulltitle="camera_flash_auto.png Image File" subtitle="declarative-camera/images/camera_flash_auto.png"/>
            <page name="declarative-camera/images/camera_flash_fill.png" href="qtmultimedia-declarative-camera-images-camera-flash-fill-png.html" status="active" subtype="image" title="" fulltitle="camera_flash_fill.png Image File" subtitle="declarative-camera/images/camera_flash_fill.png"/>
            <page name="declarative-camera/images/camera_flash_off.png" href="qtmultimedia-declarative-camera-images-camera-flash-off-png.html" status="active" subtype="image" title="" fulltitle="camera_flash_off.png Image File" subtitle="declarative-camera/images/camera_flash_off.png"/>
            <page name="declarative-camera/images/camera_flash_redeye.png" href="qtmultimedia-declarative-camera-images-camera-flash-redeye-png.html" status="active" subtype="image" title="" fulltitle="camera_flash_redeye.png Image File" subtitle="declarative-camera/images/camera_flash_redeye.png"/>
            <page name="declarative-camera/images/camera_white_balance_cloudy.png" href="qtmultimedia-declarative-camera-images-camera-white-balance-cloudy-png.html" status="active" subtype="image" title="" fulltitle="camera_white_balance_cloudy.png Image File" subtitle="declarative-camera/images/camera_white_balance_cloudy.png"/>
            <page name="declarative-camera/images/camera_white_balance_flourescent.png" href="qtmultimedia-declarative-camera-images-camera-white-balance-flourescent-png.html" status="active" subtype="image" title="" fulltitle="camera_white_balance_flourescent.png Image File" subtitle="declarative-camera/images/camera_white_balance_flourescent.png"/>
            <page name="declarative-camera/images/camera_white_balance_incandescent.png" href="qtmultimedia-declarative-camera-images-camera-white-balance-incandescent-png.html" status="active" subtype="image" title="" fulltitle="camera_white_balance_incandescent.png Image File" subtitle="declarative-camera/images/camera_white_balance_incandescent.png"/>
            <page name="declarative-camera/images/camera_white_balance_sunny.png" href="qtmultimedia-declarative-camera-images-camera-white-balance-sunny-png.html" status="active" subtype="image" title="" fulltitle="camera_white_balance_sunny.png Image File" subtitle="declarative-camera/images/camera_white_balance_sunny.png"/>
            <page name="declarative-camera/images/toolbutton.png" href="qtmultimedia-declarative-camera-images-toolbutton-png.html" status="active" subtype="image" title="" fulltitle="toolbutton.png Image File" subtitle="declarative-camera/images/toolbutton.png"/>
        </page>
        <page name="video/mediaplayer" href="qtmultimedia-video-mediaplayer-example.html" status="active" location="mediaplayer.qdoc" documented="true" groups="category Multimedia,multimedia_examples,video_examples_qml" subtype="example" title="QML Media Player Example" fulltitle="QML Media Player Example" subtitle="" brief="Playing audio and video using Qt Quick">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="using-mediaplayer-and-videooutput" title="Using MediaPlayer and VideoOutput" level="1"/>
            <contents name="playermenubar" title="PlayerMenuBar" level="1"/>
            <contents name="filedialog" title="fileDialog" level="2"/>
            <contents name="loadurl" title="loadUrl" level="2"/>
            <contents name="getting-meta-data" title="Getting meta data" level="2"/>
            <contents name="tracks-information-and-control" title="Tracks information and control" level="2"/>
            <contents name="playbackcontrolpanel" title="playbackControlPanel" level="1"/>
            <contents name="playback-control" title="Playback control" level="2"/>
            <contents name="play-pause-stop" title="Play Pause Stop" level="2"/>
            <contents name="playback-seek-control" title="Playback seek control" level="2"/>
            <contents name="playback-rate-control" title="Playback rate control" level="2"/>
            <contents name="audio-control" title="Audio control" level="2"/>
            <page name="video/mediaplayer/AudioControl.qml" href="qtmultimedia-video-mediaplayer-audiocontrol-qml.html" status="active" subtype="file" title="" fulltitle="AudioControl.qml Example File" subtitle="video/mediaplayer/AudioControl.qml"/>
            <page name="video/mediaplayer/MetadataInfo.qml" href="qtmultimedia-video-mediaplayer-metadatainfo-qml.html" status="active" subtype="file" title="" fulltitle="MetadataInfo.qml Example File" subtitle="video/mediaplayer/MetadataInfo.qml"/>
            <page name="video/mediaplayer/Mute_Icon.svg" href="qtmultimedia-video-mediaplayer-mute-icon-svg.html" status="active" subtype="file" title="" fulltitle="Mute_Icon.svg Example File" subtitle="video/mediaplayer/Mute_Icon.svg"/>
            <page name="video/mediaplayer/PlaybackControl.qml" href="qtmultimedia-video-mediaplayer-playbackcontrol-qml.html" status="active" subtype="file" title="" fulltitle="PlaybackControl.qml Example File" subtitle="video/mediaplayer/PlaybackControl.qml"/>
            <page name="video/mediaplayer/PlaybackRateControl.qml" href="qtmultimedia-video-mediaplayer-playbackratecontrol-qml.html" status="active" subtype="file" title="" fulltitle="PlaybackRateControl.qml Example File" subtitle="video/mediaplayer/PlaybackRateControl.qml"/>
            <page name="video/mediaplayer/PlaybackSeekControl.qml" href="qtmultimedia-video-mediaplayer-playbackseekcontrol-qml.html" status="active" subtype="file" title="" fulltitle="PlaybackSeekControl.qml Example File" subtitle="video/mediaplayer/PlaybackSeekControl.qml"/>
            <page name="video/mediaplayer/PlayerMenuBar.qml" href="qtmultimedia-video-mediaplayer-playermenubar-qml.html" status="active" subtype="file" title="" fulltitle="PlayerMenuBar.qml Example File" subtitle="video/mediaplayer/PlayerMenuBar.qml"/>
            <page name="video/mediaplayer/Speaker_Icon.svg" href="qtmultimedia-video-mediaplayer-speaker-icon-svg.html" status="active" subtype="file" title="" fulltitle="Speaker_Icon.svg Example File" subtitle="video/mediaplayer/Speaker_Icon.svg"/>
            <page name="video/mediaplayer/TracksInfo.qml" href="qtmultimedia-video-mediaplayer-tracksinfo-qml.html" status="active" subtype="file" title="" fulltitle="TracksInfo.qml Example File" subtitle="video/mediaplayer/TracksInfo.qml"/>
            <page name="video/mediaplayer/main.qml" href="qtmultimedia-video-mediaplayer-main-qml.html" status="active" subtype="file" title="" fulltitle="main.qml Example File" subtitle="video/mediaplayer/main.qml"/>
            <page name="video/mediaplayer/main.cpp" href="qtmultimedia-video-mediaplayer-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="video/mediaplayer/main.cpp"/>
            <page name="video/mediaplayer/CMakeLists.txt" href="qtmultimedia-video-mediaplayer-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="video/mediaplayer/CMakeLists.txt"/>
        </page>
        <page name="video/qmlvideo" href="qtmultimedia-video-qmlvideo-example.html" status="active" location="qmlvideo.qdoc" documented="true" groups="category Multimedia,multimedia_examples" subtype="example" title="QML Video Example" fulltitle="QML Video Example" subtitle="" brief="Transforming video and camera viewfinder content">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="application-structure" title="Application Structure" level="1"/>
            <contents name="calculating-and-displaying-qml-painting-rate" title="Calculating and Displaying QML Painting Rate" level="1"/>
            <page name="video/qmlvideo/frequencymonitor.cpp" href="qtmultimedia-video-qmlvideo-frequencymonitor-cpp.html" status="active" subtype="file" title="" fulltitle="frequencymonitor.cpp Example File" subtitle="video/qmlvideo/frequencymonitor.cpp"/>
            <page name="video/qmlvideo/frequencymonitor.h" href="qtmultimedia-video-qmlvideo-frequencymonitor-h.html" status="active" subtype="file" title="" fulltitle="frequencymonitor.h Example File" subtitle="video/qmlvideo/frequencymonitor.h"/>
            <page name="video/qmlvideo/frequencymonitordeclarative.cpp" href="qtmultimedia-video-qmlvideo-frequencymonitordeclarative-cpp.html" status="active" subtype="file" title="" fulltitle="frequencymonitordeclarative.cpp Example File" subtitle="video/qmlvideo/frequencymonitordeclarative.cpp"/>
            <page name="video/qmlvideo/performancemonitor.cpp" href="qtmultimedia-video-qmlvideo-performancemonitor-cpp.html" status="active" subtype="file" title="" fulltitle="performancemonitor.cpp Example File" subtitle="video/qmlvideo/performancemonitor.cpp"/>
            <page name="video/qmlvideo/performancemonitor.h" href="qtmultimedia-video-qmlvideo-performancemonitor-h.html" status="active" subtype="file" title="" fulltitle="performancemonitor.h Example File" subtitle="video/qmlvideo/performancemonitor.h"/>
            <page name="video/qmlvideo/performancemonitordeclarative.cpp" href="qtmultimedia-video-qmlvideo-performancemonitordeclarative-cpp.html" status="active" subtype="file" title="" fulltitle="performancemonitordeclarative.cpp Example File" subtitle="video/qmlvideo/performancemonitordeclarative.cpp"/>
            <page name="video/qmlvideo/performancemonitordeclarative.h" href="qtmultimedia-video-qmlvideo-performancemonitordeclarative-h.html" status="active" subtype="file" title="" fulltitle="performancemonitordeclarative.h Example File" subtitle="video/qmlvideo/performancemonitordeclarative.h"/>
            <page name="video/qmlvideo/qmlvideo.svg" href="qtmultimedia-video-qmlvideo-qmlvideo-svg.html" status="active" subtype="file" title="" fulltitle="qmlvideo.svg Example File" subtitle="video/qmlvideo/qmlvideo.svg"/>
            <page name="video/qmlvideo/trace.h" href="qtmultimedia-video-qmlvideo-trace-h.html" status="active" subtype="file" title="" fulltitle="trace.h Example File" subtitle="video/qmlvideo/trace.h"/>
            <page name="video/qmlvideo/frequencymonitor/FrequencyItem.qml" href="qtmultimedia-video-qmlvideo-frequencymonitor-frequencyitem-qml.html" status="active" subtype="file" title="" fulltitle="FrequencyItem.qml Example File" subtitle="video/qmlvideo/frequencymonitor/FrequencyItem.qml"/>
            <page name="video/qmlvideo/frequencymonitor/frequencymonitorplugin_frequencymonitorPlugin.cpp" href="qtmultimedia-video-qmlvideo-frequencymonitor-frequencymonitorplugin-frequencymonitorplugin-cpp.html" status="active" subtype="file" title="" fulltitle="frequencymonitorplugin_frequencymonitorPlugin.cpp Example File" subtitle="video/qmlvideo/frequencymonitor/frequencymonitorplugin_frequencymonitorPlugin.cpp"/>
            <page name="video/qmlvideo/frequencymonitor/frequencymonitorplugin_frequencymonitorPlugin_in.cpp" href="qtmultimedia-video-qmlvideo-frequencymonitor-frequencymonitorplugin-frequencymonitorplugin-in-cpp.html" status="active" subtype="file" title="" fulltitle="frequencymonitorplugin_frequencymonitorPlugin_in.cpp Example File" subtitle="video/qmlvideo/frequencymonitor/frequencymonitorplugin_frequencymonitorPlugin_in.cpp"/>
            <page name="video/qmlvideo/performancemonitor/PerformanceItem.qml" href="qtmultimedia-video-qmlvideo-performancemonitor-performanceitem-qml.html" status="active" subtype="file" title="" fulltitle="PerformanceItem.qml Example File" subtitle="video/qmlvideo/performancemonitor/PerformanceItem.qml"/>
            <page name="video/qmlvideo/performancemonitor/performancemonitorplugin_performancemonitorPlugin.cpp" href="qtmultimedia-video-qmlvideo-performancemonitor-performancemonitorplugin-performancemonitorplugin-cpp.html" status="active" subtype="file" title="" fulltitle="performancemonitorplugin_performancemonitorPlugin.cpp Example File" subtitle="video/qmlvideo/performancemonitor/performancemonitorplugin_performancemonitorPlugin.cpp"/>
            <page name="video/qmlvideo/performancemonitor/performancemonitorplugin_performancemonitorPlugin_in.cpp" href="qtmultimedia-video-qmlvideo-performancemonitor-performancemonitorplugin-performancemonitorplugin-in-cpp.html" status="active" subtype="file" title="" fulltitle="performancemonitorplugin_performancemonitorPlugin_in.cpp Example File" subtitle="video/qmlvideo/performancemonitor/performancemonitorplugin_performancemonitorPlugin_in.cpp"/>
            <page name="video/qmlvideo/qmlvideo/Button.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-button-qml.html" status="active" subtype="file" title="" fulltitle="Button.qml Example File" subtitle="video/qmlvideo/qmlvideo/Button.qml"/>
            <page name="video/qmlvideo/qmlvideo/CameraBasic.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-camerabasic-qml.html" status="active" subtype="file" title="" fulltitle="CameraBasic.qml Example File" subtitle="video/qmlvideo/qmlvideo/CameraBasic.qml"/>
            <page name="video/qmlvideo/qmlvideo/CameraDrag.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-cameradrag-qml.html" status="active" subtype="file" title="" fulltitle="CameraDrag.qml Example File" subtitle="video/qmlvideo/qmlvideo/CameraDrag.qml"/>
            <page name="video/qmlvideo/qmlvideo/CameraDummy.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-cameradummy-qml.html" status="active" subtype="file" title="" fulltitle="CameraDummy.qml Example File" subtitle="video/qmlvideo/qmlvideo/CameraDummy.qml"/>
            <page name="video/qmlvideo/qmlvideo/CameraFullScreen.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-camerafullscreen-qml.html" status="active" subtype="file" title="" fulltitle="CameraFullScreen.qml Example File" subtitle="video/qmlvideo/qmlvideo/CameraFullScreen.qml"/>
            <page name="video/qmlvideo/qmlvideo/CameraFullScreenInverted.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-camerafullscreeninverted-qml.html" status="active" subtype="file" title="" fulltitle="CameraFullScreenInverted.qml Example File" subtitle="video/qmlvideo/qmlvideo/CameraFullScreenInverted.qml"/>
            <page name="video/qmlvideo/qmlvideo/CameraItem.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-cameraitem-qml.html" status="active" subtype="file" title="" fulltitle="CameraItem.qml Example File" subtitle="video/qmlvideo/qmlvideo/CameraItem.qml"/>
            <page name="video/qmlvideo/qmlvideo/CameraMove.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-cameramove-qml.html" status="active" subtype="file" title="" fulltitle="CameraMove.qml Example File" subtitle="video/qmlvideo/qmlvideo/CameraMove.qml"/>
            <page name="video/qmlvideo/qmlvideo/CameraOverlay.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-cameraoverlay-qml.html" status="active" subtype="file" title="" fulltitle="CameraOverlay.qml Example File" subtitle="video/qmlvideo/qmlvideo/CameraOverlay.qml"/>
            <page name="video/qmlvideo/qmlvideo/CameraResize.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-cameraresize-qml.html" status="active" subtype="file" title="" fulltitle="CameraResize.qml Example File" subtitle="video/qmlvideo/qmlvideo/CameraResize.qml"/>
            <page name="video/qmlvideo/qmlvideo/CameraRotate.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-camerarotate-qml.html" status="active" subtype="file" title="" fulltitle="CameraRotate.qml Example File" subtitle="video/qmlvideo/qmlvideo/CameraRotate.qml"/>
            <page name="video/qmlvideo/qmlvideo/CameraSpin.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-cameraspin-qml.html" status="active" subtype="file" title="" fulltitle="CameraSpin.qml Example File" subtitle="video/qmlvideo/qmlvideo/CameraSpin.qml"/>
            <page name="video/qmlvideo/qmlvideo/Content.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-content-qml.html" status="active" subtype="file" title="" fulltitle="Content.qml Example File" subtitle="video/qmlvideo/qmlvideo/Content.qml"/>
            <page name="video/qmlvideo/qmlvideo/ErrorDialog.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-errordialog-qml.html" status="active" subtype="file" title="" fulltitle="ErrorDialog.qml Example File" subtitle="video/qmlvideo/qmlvideo/ErrorDialog.qml"/>
            <page name="video/qmlvideo/qmlvideo/Main.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-main-qml.html" status="active" subtype="file" title="" fulltitle="Main.qml Example File" subtitle="video/qmlvideo/qmlvideo/Main.qml"/>
            <page name="video/qmlvideo/qmlvideo/Scene.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-scene-qml.html" status="active" subtype="file" title="" fulltitle="Scene.qml Example File" subtitle="video/qmlvideo/qmlvideo/Scene.qml"/>
            <page name="video/qmlvideo/qmlvideo/SceneBasic.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-scenebasic-qml.html" status="active" subtype="file" title="" fulltitle="SceneBasic.qml Example File" subtitle="video/qmlvideo/qmlvideo/SceneBasic.qml"/>
            <page name="video/qmlvideo/qmlvideo/SceneDrag.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-scenedrag-qml.html" status="active" subtype="file" title="" fulltitle="SceneDrag.qml Example File" subtitle="video/qmlvideo/qmlvideo/SceneDrag.qml"/>
            <page name="video/qmlvideo/qmlvideo/SceneFullScreen.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-scenefullscreen-qml.html" status="active" subtype="file" title="" fulltitle="SceneFullScreen.qml Example File" subtitle="video/qmlvideo/qmlvideo/SceneFullScreen.qml"/>
            <page name="video/qmlvideo/qmlvideo/SceneFullScreenInverted.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-scenefullscreeninverted-qml.html" status="active" subtype="file" title="" fulltitle="SceneFullScreenInverted.qml Example File" subtitle="video/qmlvideo/qmlvideo/SceneFullScreenInverted.qml"/>
            <page name="video/qmlvideo/qmlvideo/SceneMove.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-scenemove-qml.html" status="active" subtype="file" title="" fulltitle="SceneMove.qml Example File" subtitle="video/qmlvideo/qmlvideo/SceneMove.qml"/>
            <page name="video/qmlvideo/qmlvideo/SceneMulti.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-scenemulti-qml.html" status="active" subtype="file" title="" fulltitle="SceneMulti.qml Example File" subtitle="video/qmlvideo/qmlvideo/SceneMulti.qml"/>
            <page name="video/qmlvideo/qmlvideo/SceneOverlay.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-sceneoverlay-qml.html" status="active" subtype="file" title="" fulltitle="SceneOverlay.qml Example File" subtitle="video/qmlvideo/qmlvideo/SceneOverlay.qml"/>
            <page name="video/qmlvideo/qmlvideo/SceneResize.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-sceneresize-qml.html" status="active" subtype="file" title="" fulltitle="SceneResize.qml Example File" subtitle="video/qmlvideo/qmlvideo/SceneResize.qml"/>
            <page name="video/qmlvideo/qmlvideo/SceneRotate.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-scenerotate-qml.html" status="active" subtype="file" title="" fulltitle="SceneRotate.qml Example File" subtitle="video/qmlvideo/qmlvideo/SceneRotate.qml"/>
            <page name="video/qmlvideo/qmlvideo/SceneSelectionPanel.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-sceneselectionpanel-qml.html" status="active" subtype="file" title="" fulltitle="SceneSelectionPanel.qml Example File" subtitle="video/qmlvideo/qmlvideo/SceneSelectionPanel.qml"/>
            <page name="video/qmlvideo/qmlvideo/SceneSpin.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-scenespin-qml.html" status="active" subtype="file" title="" fulltitle="SceneSpin.qml Example File" subtitle="video/qmlvideo/qmlvideo/SceneSpin.qml"/>
            <page name="video/qmlvideo/qmlvideo/SeekControl.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-seekcontrol-qml.html" status="active" subtype="file" title="" fulltitle="SeekControl.qml Example File" subtitle="video/qmlvideo/qmlvideo/SeekControl.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoBasic.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videobasic-qml.html" status="active" subtype="file" title="" fulltitle="VideoBasic.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoBasic.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoDrag.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videodrag-qml.html" status="active" subtype="file" title="" fulltitle="VideoDrag.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoDrag.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoDummy.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videodummy-qml.html" status="active" subtype="file" title="" fulltitle="VideoDummy.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoDummy.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoFillMode.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videofillmode-qml.html" status="active" subtype="file" title="" fulltitle="VideoFillMode.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoFillMode.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoFullScreen.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videofullscreen-qml.html" status="active" subtype="file" title="" fulltitle="VideoFullScreen.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoFullScreen.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoFullScreenInverted.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videofullscreeninverted-qml.html" status="active" subtype="file" title="" fulltitle="VideoFullScreenInverted.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoFullScreenInverted.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoItem.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videoitem-qml.html" status="active" subtype="file" title="" fulltitle="VideoItem.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoItem.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoMetadata.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videometadata-qml.html" status="active" subtype="file" title="" fulltitle="VideoMetadata.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoMetadata.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoMove.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videomove-qml.html" status="active" subtype="file" title="" fulltitle="VideoMove.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoMove.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoOverlay.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videooverlay-qml.html" status="active" subtype="file" title="" fulltitle="VideoOverlay.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoOverlay.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoPlaybackRate.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videoplaybackrate-qml.html" status="active" subtype="file" title="" fulltitle="VideoPlaybackRate.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoPlaybackRate.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoResize.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videoresize-qml.html" status="active" subtype="file" title="" fulltitle="VideoResize.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoResize.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoRotate.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videorotate-qml.html" status="active" subtype="file" title="" fulltitle="VideoRotate.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoRotate.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoSeek.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videoseek-qml.html" status="active" subtype="file" title="" fulltitle="VideoSeek.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoSeek.qml"/>
            <page name="video/qmlvideo/qmlvideo/VideoSpin.qml" href="qtmultimedia-video-qmlvideo-qmlvideo-videospin-qml.html" status="active" subtype="file" title="" fulltitle="VideoSpin.qml Example File" subtitle="video/qmlvideo/qmlvideo/VideoSpin.qml"/>
            <page name="video/qmlvideo/qmlvideo/qmlvideoplugin_qmlvideoPlugin.cpp" href="qtmultimedia-video-qmlvideo-qmlvideo-qmlvideoplugin-qmlvideoplugin-cpp.html" status="active" subtype="file" title="" fulltitle="qmlvideoplugin_qmlvideoPlugin.cpp Example File" subtitle="video/qmlvideo/qmlvideo/qmlvideoplugin_qmlvideoPlugin.cpp"/>
            <page name="video/qmlvideo/qmlvideo/qmlvideoplugin_qmlvideoPlugin_in.cpp" href="qtmultimedia-video-qmlvideo-qmlvideo-qmlvideoplugin-qmlvideoplugin-in-cpp.html" status="active" subtype="file" title="" fulltitle="qmlvideoplugin_qmlvideoPlugin_in.cpp Example File" subtitle="video/qmlvideo/qmlvideo/qmlvideoplugin_qmlvideoPlugin_in.cpp"/>
            <page name="video/qmlvideo/main.cpp" href="qtmultimedia-video-qmlvideo-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="video/qmlvideo/main.cpp"/>
            <page name="video/qmlvideo/CMakeLists.txt" href="qtmultimedia-video-qmlvideo-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="video/qmlvideo/CMakeLists.txt"/>
            <page name="video/qmlvideo/qmlvideo.pro" href="qtmultimedia-video-qmlvideo-qmlvideo-pro.html" status="active" subtype="file" title="" fulltitle="qmlvideo.pro Example File" subtitle="video/qmlvideo/qmlvideo.pro"/>
            <page name="video/qmlvideo/frequencymonitor/CMakeLists.txt" href="qtmultimedia-video-qmlvideo-frequencymonitor-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="video/qmlvideo/frequencymonitor/CMakeLists.txt"/>
            <page name="video/qmlvideo/frequencymonitor/frequencymonitor_qml_module_dir_map.qrc" href="qtmultimedia-video-qmlvideo-frequencymonitor-frequencymonitor-qml-module-dir-map-qrc.html" status="active" subtype="file" title="" fulltitle="frequencymonitor_qml_module_dir_map.qrc Example File" subtitle="video/qmlvideo/frequencymonitor/frequencymonitor_qml_module_dir_map.qrc"/>
            <page name="video/qmlvideo/frequencymonitor/qmldir" href="qtmultimedia-video-qmlvideo-frequencymonitor-qmldir.html" status="active" subtype="file" title="" fulltitle="qmldir Example File" subtitle="video/qmlvideo/frequencymonitor/qmldir"/>
            <page name="video/qmlvideo/performancemonitor/CMakeLists.txt" href="qtmultimedia-video-qmlvideo-performancemonitor-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="video/qmlvideo/performancemonitor/CMakeLists.txt"/>
            <page name="video/qmlvideo/performancemonitor/performancemonitor_qml_module_dir_map.qrc" href="qtmultimedia-video-qmlvideo-performancemonitor-performancemonitor-qml-module-dir-map-qrc.html" status="active" subtype="file" title="" fulltitle="performancemonitor_qml_module_dir_map.qrc Example File" subtitle="video/qmlvideo/performancemonitor/performancemonitor_qml_module_dir_map.qrc"/>
            <page name="video/qmlvideo/performancemonitor/qmldir" href="qtmultimedia-video-qmlvideo-performancemonitor-qmldir.html" status="active" subtype="file" title="" fulltitle="qmldir Example File" subtitle="video/qmlvideo/performancemonitor/qmldir"/>
            <page name="video/qmlvideo/qmlvideo/CMakeLists.txt" href="qtmultimedia-video-qmlvideo-qmlvideo-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="video/qmlvideo/qmlvideo/CMakeLists.txt"/>
            <page name="video/qmlvideo/qmlvideo/qmldir" href="qtmultimedia-video-qmlvideo-qmlvideo-qmldir.html" status="active" subtype="file" title="" fulltitle="qmldir Example File" subtitle="video/qmlvideo/qmlvideo/qmldir"/>
            <page name="video/qmlvideo/qmlvideo/qmlvideo_qml_module_dir_map.qrc" href="qtmultimedia-video-qmlvideo-qmlvideo-qmlvideo-qml-module-dir-map-qrc.html" status="active" subtype="file" title="" fulltitle="qmlvideo_qml_module_dir_map.qrc Example File" subtitle="video/qmlvideo/qmlvideo/qmlvideo_qml_module_dir_map.qrc"/>
            <page name="video/qmlvideo/qmlvideo.png" href="qtmultimedia-video-qmlvideo-qmlvideo-png.html" status="active" subtype="image" title="" fulltitle="qmlvideo.png Image File" subtitle="video/qmlvideo/qmlvideo.png"/>
            <page name="video/qmlvideo/qmlvideo/images/folder.png" href="qtmultimedia-video-qmlvideo-qmlvideo-images-folder-png.html" status="active" subtype="image" title="" fulltitle="folder.png Image File" subtitle="video/qmlvideo/qmlvideo/images/folder.png"/>
            <page name="video/qmlvideo/qmlvideo/images/leaves.jpg" href="qtmultimedia-video-qmlvideo-qmlvideo-images-leaves-jpg.html" status="active" subtype="image" title="" fulltitle="leaves.jpg Image File" subtitle="video/qmlvideo/qmlvideo/images/leaves.jpg"/>
            <page name="video/qmlvideo/qmlvideo/images/up.png" href="qtmultimedia-video-qmlvideo-qmlvideo-images-up-png.html" status="active" subtype="image" title="" fulltitle="up.png Image File" subtitle="video/qmlvideo/qmlvideo/images/up.png"/>
        </page>
        <page name="video/recorder" href="qtmultimedia-video-recorder-example.html" status="active" location="recorder.qdoc" documented="true" groups="camera_examples_qml,category Multimedia,multimedia_examples,video_examples_qml" subtype="example" title="QML Video Recorder" fulltitle="QML Video Recorder" subtitle="" brief="Recording audio and video using Qt Quick">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="overview" title="Overview" level="1"/>
            <contents name="recording" title="Recording" level="1"/>
            <contents name="capturesession" title="captureSession" level="2"/>
            <contents name="recorder" title="recorder" level="2"/>
            <contents name="controls" title="controls" level="2"/>
            <contents name="selecting-a-video-source" title="Selecting a video source" level="3"/>
            <contents name="selecting-an-audio-input" title="Selecting an audio input" level="3"/>
            <page name="video/recorder/AudioInputSelect.qml" href="qtmultimedia-video-recorder-audioinputselect-qml.html" status="active" subtype="file" title="" fulltitle="AudioInputSelect.qml Example File" subtitle="video/recorder/AudioInputSelect.qml"/>
            <page name="video/recorder/Controls.qml" href="qtmultimedia-video-recorder-controls-qml.html" status="active" subtype="file" title="" fulltitle="Controls.qml Example File" subtitle="video/recorder/Controls.qml"/>
            <page name="video/recorder/MediaList.qml" href="qtmultimedia-video-recorder-medialist-qml.html" status="active" subtype="file" title="" fulltitle="MediaList.qml Example File" subtitle="video/recorder/MediaList.qml"/>
            <page name="video/recorder/Playback.qml" href="qtmultimedia-video-recorder-playback-qml.html" status="active" subtype="file" title="" fulltitle="Playback.qml Example File" subtitle="video/recorder/Playback.qml"/>
            <page name="video/recorder/RecordButton.qml" href="qtmultimedia-video-recorder-recordbutton-qml.html" status="active" subtype="file" title="" fulltitle="RecordButton.qml Example File" subtitle="video/recorder/RecordButton.qml"/>
            <page name="video/recorder/SettingsEncoder.qml" href="qtmultimedia-video-recorder-settingsencoder-qml.html" status="active" subtype="file" title="" fulltitle="SettingsEncoder.qml Example File" subtitle="video/recorder/SettingsEncoder.qml"/>
            <page name="video/recorder/SettingsMetaData.qml" href="qtmultimedia-video-recorder-settingsmetadata-qml.html" status="active" subtype="file" title="" fulltitle="SettingsMetaData.qml Example File" subtitle="video/recorder/SettingsMetaData.qml"/>
            <page name="video/recorder/Style.qml" href="qtmultimedia-video-recorder-style-qml.html" status="active" subtype="file" title="" fulltitle="Style.qml Example File" subtitle="video/recorder/Style.qml"/>
            <page name="video/recorder/StyleParameter.qml" href="qtmultimedia-video-recorder-styleparameter-qml.html" status="active" subtype="file" title="" fulltitle="StyleParameter.qml Example File" subtitle="video/recorder/StyleParameter.qml"/>
            <page name="video/recorder/StyleRectangle.qml" href="qtmultimedia-video-recorder-stylerectangle-qml.html" status="active" subtype="file" title="" fulltitle="StyleRectangle.qml Example File" subtitle="video/recorder/StyleRectangle.qml"/>
            <page name="video/recorder/StyleSlider.qml" href="qtmultimedia-video-recorder-styleslider-qml.html" status="active" subtype="file" title="" fulltitle="StyleSlider.qml Example File" subtitle="video/recorder/StyleSlider.qml"/>
            <page name="video/recorder/VideoSourceSelect.qml" href="qtmultimedia-video-recorder-videosourceselect-qml.html" status="active" subtype="file" title="" fulltitle="VideoSourceSelect.qml Example File" subtitle="video/recorder/VideoSourceSelect.qml"/>
            <page name="video/recorder/main.qml" href="qtmultimedia-video-recorder-main-qml.html" status="active" subtype="file" title="" fulltitle="main.qml Example File" subtitle="video/recorder/main.qml"/>
            <page name="video/recorder/main_no_permissions.qml" href="qtmultimedia-video-recorder-main-no-permissions-qml.html" status="active" subtype="file" title="" fulltitle="main_no_permissions.qml Example File" subtitle="video/recorder/main_no_permissions.qml"/>
            <page name="video/recorder/main.cpp" href="qtmultimedia-video-recorder-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="video/recorder/main.cpp"/>
            <page name="video/recorder/CMakeLists.txt" href="qtmultimedia-video-recorder-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="video/recorder/CMakeLists.txt"/>
            <page name="video/recorder/qmldir" href="qtmultimedia-video-recorder-qmldir.html" status="active" subtype="file" title="" fulltitle="qmldir Example File" subtitle="video/recorder/qmldir"/>
        </page>
        <class name="QMediaCaptureSession" href="qmediacapturesession.html" status="active" access="public" location="qmediacapturesession.h" documented="true" groups="multimedia,multimedia_audio,multimedia_video" bases="QObject" module="QtMultimedia" brief="Allows capturing of audio and video content">
            <function name="QMediaCaptureSession" fullname="QMediaCaptureSession::QMediaCaptureSession" href="qmediacapturesession.html#QMediaCaptureSession" status="active" access="public" location="qmediacapturesession.h" documented="true" meta="constructor" explicit="true" signature="QMediaCaptureSession(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="audioInput" fullname="QMediaCaptureSession::audioInput" href="qmediacapturesession.html#audioInput-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" const="true" associated-property="audioInput" type="QAudioInput *" signature="QAudioInput * audioInput() const"/>
            <function name="audioInputChanged" fullname="QMediaCaptureSession::audioInputChanged" href="qmediacapturesession.html#audioInput-prop" status="active" access="public" location="qmediacapturesession.h" meta="signal" associated-property="audioInput" type="void" signature="void audioInputChanged()"/>
            <function name="audioOutput" fullname="QMediaCaptureSession::audioOutput" href="qmediacapturesession.html#audioOutput-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" const="true" associated-property="audioOutput" type="QAudioOutput *" signature="QAudioOutput * audioOutput() const"/>
            <function name="audioOutputChanged" fullname="QMediaCaptureSession::audioOutputChanged" href="qmediacapturesession.html#audioOutput-prop" status="active" access="public" location="qmediacapturesession.h" meta="signal" associated-property="audioOutput" type="void" signature="void audioOutputChanged()"/>
            <function name="camera" fullname="QMediaCaptureSession::camera" href="qmediacapturesession.html#camera-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" const="true" associated-property="camera" type="QCamera *" signature="QCamera * camera() const"/>
            <function name="cameraChanged" fullname="QMediaCaptureSession::cameraChanged" href="qmediacapturesession.html#camera-prop" status="active" access="public" location="qmediacapturesession.h" meta="signal" associated-property="camera" type="void" signature="void cameraChanged()"/>
            <function name="imageCapture" fullname="QMediaCaptureSession::imageCapture" href="qmediacapturesession.html#imageCapture-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" associated-property="imageCapture" type="QImageCapture *" signature="QImageCapture * imageCapture()"/>
            <function name="imageCaptureChanged" fullname="QMediaCaptureSession::imageCaptureChanged" href="qmediacapturesession.html#imageCapture-prop" status="active" access="public" location="qmediacapturesession.h" meta="signal" associated-property="imageCapture" type="void" signature="void imageCaptureChanged()"/>
            <function name="recorder" fullname="QMediaCaptureSession::recorder" href="qmediacapturesession.html#recorder-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" associated-property="recorder" type="QMediaRecorder *" signature="QMediaRecorder * recorder()"/>
            <function name="recorderChanged" fullname="QMediaCaptureSession::recorderChanged" href="qmediacapturesession.html#recorder-prop" status="active" access="public" location="qmediacapturesession.h" meta="signal" associated-property="recorder" type="void" signature="void recorderChanged()"/>
            <function name="screenCapture" fullname="QMediaCaptureSession::screenCapture" href="qmediacapturesession.html#screenCapture-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" associated-property="screenCapture" type="QScreenCapture *" signature="QScreenCapture * screenCapture()"/>
            <function name="screenCaptureChanged" fullname="QMediaCaptureSession::screenCaptureChanged" href="qmediacapturesession.html#screenCapture-prop" status="active" access="public" location="qmediacapturesession.h" meta="signal" associated-property="screenCapture" type="void" signature="void screenCaptureChanged()"/>
            <function name="setAudioInput" fullname="QMediaCaptureSession::setAudioInput" href="qmediacapturesession.html#setAudioInput" status="active" access="public" location="qmediacapturesession.h" documented="true" meta="plain" associated-property="audioInput" type="void" signature="void setAudioInput(QAudioInput *input)">
                <parameter type="QAudioInput *" name="input" default=""/>
            </function>
            <function name="setAudioOutput" fullname="QMediaCaptureSession::setAudioOutput" href="qmediacapturesession.html#setAudioOutput" status="active" access="public" location="qmediacapturesession.h" documented="true" meta="plain" associated-property="audioOutput" type="void" signature="void setAudioOutput(QAudioOutput *output)">
                <parameter type="QAudioOutput *" name="output" default=""/>
            </function>
            <function name="setCamera" fullname="QMediaCaptureSession::setCamera" href="qmediacapturesession.html#camera-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" associated-property="camera" type="void" signature="void setCamera(QCamera *camera)">
                <parameter type="QCamera *" name="camera" default=""/>
            </function>
            <function name="setImageCapture" fullname="QMediaCaptureSession::setImageCapture" href="qmediacapturesession.html#imageCapture-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" associated-property="imageCapture" type="void" signature="void setImageCapture(QImageCapture *imageCapture)">
                <parameter type="QImageCapture *" name="imageCapture" default=""/>
            </function>
            <function name="setRecorder" fullname="QMediaCaptureSession::setRecorder" href="qmediacapturesession.html#recorder-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" associated-property="recorder" type="void" signature="void setRecorder(QMediaRecorder *recorder)">
                <parameter type="QMediaRecorder *" name="recorder" default=""/>
            </function>
            <function name="setScreenCapture" fullname="QMediaCaptureSession::setScreenCapture" href="qmediacapturesession.html#screenCapture-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" associated-property="screenCapture" type="void" signature="void setScreenCapture(QScreenCapture *screenCapture)">
                <parameter type="QScreenCapture *" name="screenCapture" default=""/>
            </function>
            <function name="setVideoOutput" fullname="QMediaCaptureSession::setVideoOutput" href="qmediacapturesession.html#setVideoOutput" status="active" access="public" location="qmediacapturesession.h" documented="true" meta="plain" associated-property="videoOutput" type="void" signature="void setVideoOutput(QObject *output)">
                <parameter type="QObject *" name="output" default=""/>
            </function>
            <function name="setVideoSink" fullname="QMediaCaptureSession::setVideoSink" href="qmediacapturesession.html#setVideoSink" status="active" access="public" location="qmediacapturesession.h" documented="true" meta="plain" type="void" signature="void setVideoSink(QVideoSink *sink)">
                <parameter type="QVideoSink *" name="sink" default=""/>
            </function>
            <function name="setWindowCapture" fullname="QMediaCaptureSession::setWindowCapture" href="qmediacapturesession.html#windowCapture-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" associated-property="windowCapture" type="void" signature="void setWindowCapture(QWindowCapture *windowCapture)">
                <parameter type="QWindowCapture *" name="windowCapture" default=""/>
            </function>
            <function name="videoOutput" fullname="QMediaCaptureSession::videoOutput" href="qmediacapturesession.html#videoOutput-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" const="true" associated-property="videoOutput" type="QObject *" signature="QObject * videoOutput() const"/>
            <function name="videoOutputChanged" fullname="QMediaCaptureSession::videoOutputChanged" href="qmediacapturesession.html#videoOutput-prop" status="active" access="public" location="qmediacapturesession.h" meta="signal" associated-property="videoOutput" type="void" signature="void videoOutputChanged()"/>
            <function name="videoSink" fullname="QMediaCaptureSession::videoSink" href="qmediacapturesession.html#videoSink" status="active" access="public" location="qmediacapturesession.h" documented="true" meta="plain" const="true" type="QVideoSink *" signature="QVideoSink * videoSink() const"/>
            <function name="windowCapture" fullname="QMediaCaptureSession::windowCapture" href="qmediacapturesession.html#windowCapture-prop" status="active" access="public" location="qmediacapturesession.h" meta="plain" associated-property="windowCapture" type="QWindowCapture *" signature="QWindowCapture * windowCapture()"/>
            <function name="windowCaptureChanged" fullname="QMediaCaptureSession::windowCaptureChanged" href="qmediacapturesession.html#windowCapture-prop" status="active" access="public" location="qmediacapturesession.h" meta="signal" associated-property="windowCapture" type="void" signature="void windowCaptureChanged()"/>
            <function name="~QMediaCaptureSession" fullname="QMediaCaptureSession::~QMediaCaptureSession" href="qmediacapturesession.html#dtor.QMediaCaptureSession" status="active" access="public" location="qmediacapturesession.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QMediaCaptureSession()"/>
            <property name="audioInput" fullname="QMediaCaptureSession::audioInput" href="qmediacapturesession.html#audioInput-prop" status="active" access="public" location="qmediacapturesession.h" documented="true">
                <getter name="audioInput"/>
                <setter name="setAudioInput"/>
                <notifier name="audioInputChanged"/>
            </property>
            <property name="audioOutput" fullname="QMediaCaptureSession::audioOutput" href="qmediacapturesession.html#audioOutput-prop" status="active" access="public" location="qmediacapturesession.h" documented="true">
                <getter name="audioOutput"/>
                <setter name="setAudioOutput"/>
                <notifier name="audioOutputChanged"/>
            </property>
            <property name="camera" fullname="QMediaCaptureSession::camera" href="qmediacapturesession.html#camera-prop" status="active" access="public" location="qmediacapturesession.h" documented="true" brief="Used to capture video">
                <getter name="camera"/>
                <setter name="setCamera"/>
                <notifier name="cameraChanged"/>
            </property>
            <property name="imageCapture" fullname="QMediaCaptureSession::imageCapture" href="qmediacapturesession.html#imageCapture-prop" status="active" access="public" location="qmediacapturesession.h" documented="true" brief="The object used to capture still images">
                <getter name="imageCapture"/>
                <setter name="setImageCapture"/>
                <notifier name="imageCaptureChanged"/>
            </property>
            <property name="recorder" fullname="QMediaCaptureSession::recorder" href="qmediacapturesession.html#recorder-prop" status="active" access="public" location="qmediacapturesession.h" documented="true" brief="Object used to capture audio/video">
                <getter name="recorder"/>
                <setter name="setRecorder"/>
                <notifier name="recorderChanged"/>
            </property>
            <property name="screenCapture" fullname="QMediaCaptureSession::screenCapture" href="qmediacapturesession.html#screenCapture-prop" status="active" access="public" location="qmediacapturesession.h" since="6.5" documented="true" brief="Object used to capture a screen">
                <getter name="screenCapture"/>
                <setter name="setScreenCapture"/>
                <notifier name="screenCaptureChanged"/>
            </property>
            <property name="videoOutput" fullname="QMediaCaptureSession::videoOutput" href="qmediacapturesession.html#videoOutput-prop" status="active" access="public" location="qmediacapturesession.h" documented="true">
                <getter name="videoOutput"/>
                <setter name="setVideoOutput"/>
                <notifier name="videoOutputChanged"/>
            </property>
            <property name="windowCapture" fullname="QMediaCaptureSession::windowCapture" href="qmediacapturesession.html#windowCapture-prop" status="active" access="public" location="qmediacapturesession.h" since="6.6" documented="true" brief="Object used to capture a window">
                <getter name="windowCapture"/>
                <setter name="setWindowCapture"/>
                <notifier name="windowCaptureChanged"/>
            </property>
        </class>
        <class name="QMediaDevices" href="qmediadevices.html" status="active" access="public" location="qmediadevices.h" documented="true" groups="multimedia" bases="QObject" module="QtMultimedia" brief="Information about available multimedia input and output devices">
            <function name="audioInputs" fullname="QMediaDevices::audioInputs" href="qmediadevices.html#audioInputs-prop" status="active" access="public" location="qmediadevices.h" meta="plain" static="true" associated-property="audioInputs" type="QList&lt;QAudioDevice&gt;" signature="QList&lt;QAudioDevice&gt; audioInputs()"/>
            <function name="audioInputsChanged" fullname="QMediaDevices::audioInputsChanged" href="qmediadevices.html#audioInputsChanged" status="active" access="public" location="qmediadevices.h" meta="signal" associated-property="audioInputs,defaultAudioInput" type="void" signature="void audioInputsChanged()"/>
            <function name="audioOutputs" fullname="QMediaDevices::audioOutputs" href="qmediadevices.html#audioOutputs-prop" status="active" access="public" location="qmediadevices.h" meta="plain" static="true" associated-property="audioOutputs" type="QList&lt;QAudioDevice&gt;" signature="QList&lt;QAudioDevice&gt; audioOutputs()"/>
            <function name="audioOutputsChanged" fullname="QMediaDevices::audioOutputsChanged" href="qmediadevices.html#audioOutputsChanged" status="active" access="public" location="qmediadevices.h" meta="signal" associated-property="audioOutputs,defaultAudioOutput" type="void" signature="void audioOutputsChanged()"/>
            <function name="defaultAudioInput" fullname="QMediaDevices::defaultAudioInput" href="qmediadevices.html#defaultAudioInput-prop" status="active" access="public" location="qmediadevices.h" meta="plain" static="true" associated-property="defaultAudioInput" type="QAudioDevice" signature="QAudioDevice defaultAudioInput()"/>
            <function name="defaultAudioOutput" fullname="QMediaDevices::defaultAudioOutput" href="qmediadevices.html#defaultAudioOutput-prop" status="active" access="public" location="qmediadevices.h" meta="plain" static="true" associated-property="defaultAudioOutput" type="QAudioDevice" signature="QAudioDevice defaultAudioOutput()"/>
            <function name="defaultVideoInput" fullname="QMediaDevices::defaultVideoInput" href="qmediadevices.html#defaultVideoInput-prop" status="active" access="public" location="qmediadevices.h" meta="plain" static="true" associated-property="defaultVideoInput" type="QCameraDevice" signature="QCameraDevice defaultVideoInput()"/>
            <function name="videoInputs" fullname="QMediaDevices::videoInputs" href="qmediadevices.html#videoInputs-prop" status="active" access="public" location="qmediadevices.h" meta="plain" static="true" associated-property="videoInputs" type="QList&lt;QCameraDevice&gt;" signature="QList&lt;QCameraDevice&gt; videoInputs()"/>
            <function name="videoInputsChanged" fullname="QMediaDevices::videoInputsChanged" href="qmediadevices.html#videoInputsChanged" status="active" access="public" location="qmediadevices.h" meta="signal" associated-property="defaultVideoInput,videoInputs" type="void" signature="void videoInputsChanged()"/>
            <property name="audioInputs" fullname="QMediaDevices::audioInputs" href="qmediadevices.html#audioInputs-prop" status="active" access="public" location="qmediadevices.h" documented="true" writable="false">
                <getter name="audioInputs"/>
                <notifier name="audioInputsChanged"/>
            </property>
            <property name="audioOutputs" fullname="QMediaDevices::audioOutputs" href="qmediadevices.html#audioOutputs-prop" status="active" access="public" location="qmediadevices.h" documented="true" writable="false">
                <getter name="audioOutputs"/>
                <notifier name="audioOutputsChanged"/>
            </property>
            <property name="defaultAudioInput" fullname="QMediaDevices::defaultAudioInput" href="qmediadevices.html#defaultAudioInput-prop" status="active" access="public" location="qmediadevices.h" documented="true" writable="false">
                <getter name="defaultAudioInput"/>
                <notifier name="audioInputsChanged"/>
            </property>
            <property name="defaultAudioOutput" fullname="QMediaDevices::defaultAudioOutput" href="qmediadevices.html#defaultAudioOutput-prop" status="active" access="public" location="qmediadevices.h" documented="true" writable="false">
                <getter name="defaultAudioOutput"/>
                <notifier name="audioOutputsChanged"/>
            </property>
            <property name="defaultVideoInput" fullname="QMediaDevices::defaultVideoInput" href="qmediadevices.html#defaultVideoInput-prop" status="active" access="public" location="qmediadevices.h" documented="true" writable="false">
                <getter name="defaultVideoInput"/>
                <notifier name="videoInputsChanged"/>
            </property>
            <property name="videoInputs" fullname="QMediaDevices::videoInputs" href="qmediadevices.html#videoInputs-prop" status="active" access="public" location="qmediadevices.h" documented="true" writable="false">
                <getter name="videoInputs"/>
                <notifier name="videoInputsChanged"/>
            </property>
        </class>
        <class name="QMediaFormat" href="qmediaformat.html" status="active" access="public" location="qmediaformat.h" documented="true" groups="multimedia" module="QtMultimedia" brief="Describes an encoding format for a multimedia file or stream">
            <function name="QMediaFormat" fullname="QMediaFormat::QMediaFormat" href="qmediaformat.html#QMediaFormat" status="active" access="public" location="qmediaformat.h" documented="true" meta="constructor" signature="QMediaFormat(QMediaFormat::FileFormat format)">
                <parameter type="QMediaFormat::FileFormat" name="format" default="UnspecifiedFormat"/>
            </function>
            <function name="QMediaFormat" fullname="QMediaFormat::QMediaFormat" href="qmediaformat.html#QMediaFormat-1" status="active" access="public" location="qmediaformat.h" documented="true" meta="copy-constructor" noexcept="true" overload="true" overload-number="1" signature="QMediaFormat(const QMediaFormat &amp;other)">
                <parameter type="const QMediaFormat &amp;" name="other" default=""/>
            </function>
            <function name="QMediaFormat" fullname="QMediaFormat::QMediaFormat" href="qmediaformat.html#QMediaFormat-2" status="active" access="public" location="qmediaformat.h" documented="true" meta="move-constructor" noexcept="true" overload="true" overload-number="2" signature="QMediaFormat(QMediaFormat &amp;&amp;other)">
                <parameter type="QMediaFormat &amp;&amp;" name="other" default=""/>
            </function>
            <function name="audioCodec" fullname="QMediaFormat::audioCodec" href="qmediaformat.html#audioCodec" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" const="true" associated-property="audioCodec" type="QMediaFormat::AudioCodec" signature="QMediaFormat::AudioCodec audioCodec() const"/>
            <function name="audioCodecDescription" fullname="QMediaFormat::audioCodecDescription" href="qmediaformat.html#audioCodecDescription" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" static="true" type="QString" signature="QString audioCodecDescription(QMediaFormat::AudioCodec codec)">
                <parameter type="QMediaFormat::AudioCodec" name="codec" default=""/>
            </function>
            <function name="audioCodecName" fullname="QMediaFormat::audioCodecName" href="qmediaformat.html#audioCodecName" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" static="true" type="QString" signature="QString audioCodecName(QMediaFormat::AudioCodec codec)">
                <parameter type="QMediaFormat::AudioCodec" name="codec" default=""/>
            </function>
            <function name="fileFormat" fullname="QMediaFormat::fileFormat" href="qmediaformat.html#fileFormat-prop" status="active" access="public" location="qmediaformat.h" meta="plain" const="true" associated-property="fileFormat" type="QMediaFormat::FileFormat" signature="QMediaFormat::FileFormat fileFormat() const"/>
            <function name="fileFormatDescription" fullname="QMediaFormat::fileFormatDescription" href="qmediaformat.html#fileFormatDescription" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" static="true" type="QString" signature="QString fileFormatDescription(QMediaFormat::FileFormat fileFormat)">
                <parameter type="QMediaFormat::FileFormat" name="fileFormat" default=""/>
            </function>
            <function name="fileFormatName" fullname="QMediaFormat::fileFormatName" href="qmediaformat.html#fileFormatName" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" static="true" type="QString" signature="QString fileFormatName(QMediaFormat::FileFormat fileFormat)">
                <parameter type="QMediaFormat::FileFormat" name="fileFormat" default=""/>
            </function>
            <function name="isSupported" fullname="QMediaFormat::isSupported" href="qmediaformat.html#isSupported" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" const="true" type="bool" signature="bool isSupported(QMediaFormat::ConversionMode mode) const">
                <parameter type="QMediaFormat::ConversionMode" name="mode" default=""/>
            </function>
            <function name="mimeType" fullname="QMediaFormat::mimeType" href="qmediaformat.html#mimeType" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" const="true" type="QMimeType" signature="QMimeType mimeType() const"/>
            <function name="operator!=" fullname="QMediaFormat::operator!=" href="qmediaformat.html#operator-not-eq" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" const="true" type="bool" signature="bool operator!=(const QMediaFormat &amp;other) const">
                <parameter type="const QMediaFormat &amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QMediaFormat::operator=" href="qmediaformat.html#operator-eq" status="active" access="public" location="qmediaformat.h" documented="true" meta="copy-assign" noexcept="true" type="QMediaFormat &amp;" signature="QMediaFormat &amp; operator=(const QMediaFormat &amp;other)">
                <parameter type="const QMediaFormat &amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QMediaFormat::operator=" href="qmediaformat.html#operator-eq-1" status="active" access="public" location="qmediaformat.h" documented="true" meta="move-assign" noexcept="true" overload="true" overload-number="1" type="QMediaFormat &amp;" signature="QMediaFormat &amp; operator=(QMediaFormat &amp;&amp;other)">
                <parameter type="QMediaFormat &amp;&amp;" name="other" default=""/>
            </function>
            <function name="operator==" fullname="QMediaFormat::operator==" href="qmediaformat.html#operator-eq-eq" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" const="true" type="bool" signature="bool operator==(const QMediaFormat &amp;other) const">
                <parameter type="const QMediaFormat &amp;" name="other" default=""/>
            </function>
            <function name="resolveForEncoding" fullname="QMediaFormat::resolveForEncoding" href="qmediaformat.html#resolveForEncoding" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" type="void" signature="void resolveForEncoding(QMediaFormat::ResolveFlags flags)">
                <parameter type="QMediaFormat::ResolveFlags" name="flags" default=""/>
            </function>
            <function name="setAudioCodec" fullname="QMediaFormat::setAudioCodec" href="qmediaformat.html#setAudioCodec" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" associated-property="audioCodec" type="void" signature="void setAudioCodec(QMediaFormat::AudioCodec codec)">
                <parameter type="QMediaFormat::AudioCodec" name="codec" default=""/>
            </function>
            <function name="setFileFormat" fullname="QMediaFormat::setFileFormat" href="qmediaformat.html#fileFormat-prop" status="active" access="public" location="qmediaformat.h" meta="plain" associated-property="fileFormat" type="void" signature="void setFileFormat(QMediaFormat::FileFormat f)">
                <parameter type="QMediaFormat::FileFormat" name="f" default=""/>
            </function>
            <function name="setVideoCodec" fullname="QMediaFormat::setVideoCodec" href="qmediaformat.html#setVideoCodec" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" associated-property="videoCodec" type="void" signature="void setVideoCodec(QMediaFormat::VideoCodec codec)">
                <parameter type="QMediaFormat::VideoCodec" name="codec" default=""/>
            </function>
            <function name="supportedAudioCodecs" fullname="QMediaFormat::supportedAudioCodecs" href="qmediaformat.html#supportedAudioCodecs" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" type="QList&lt;QMediaFormat::AudioCodec&gt;" signature="QList&lt;QMediaFormat::AudioCodec&gt; supportedAudioCodecs(QMediaFormat::ConversionMode m)">
                <parameter type="QMediaFormat::ConversionMode" name="m" default=""/>
            </function>
            <function name="supportedFileFormats" fullname="QMediaFormat::supportedFileFormats" href="qmediaformat.html#supportedFileFormats" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" type="QList&lt;QMediaFormat::FileFormat&gt;" signature="QList&lt;QMediaFormat::FileFormat&gt; supportedFileFormats(QMediaFormat::ConversionMode m)">
                <parameter type="QMediaFormat::ConversionMode" name="m" default=""/>
            </function>
            <function name="supportedVideoCodecs" fullname="QMediaFormat::supportedVideoCodecs" href="qmediaformat.html#supportedVideoCodecs" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" type="QList&lt;QMediaFormat::VideoCodec&gt;" signature="QList&lt;QMediaFormat::VideoCodec&gt; supportedVideoCodecs(QMediaFormat::ConversionMode m)">
                <parameter type="QMediaFormat::ConversionMode" name="m" default=""/>
            </function>
            <function name="swap" fullname="QMediaFormat::swap" href="qmediaformat.html#swap" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QMediaFormat &amp;other)">
                <parameter type="QMediaFormat &amp;" name="other" default=""/>
            </function>
            <function name="videoCodec" fullname="QMediaFormat::videoCodec" href="qmediaformat.html#videoCodec" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" const="true" associated-property="videoCodec" type="QMediaFormat::VideoCodec" signature="QMediaFormat::VideoCodec videoCodec() const"/>
            <function name="videoCodecDescription" fullname="QMediaFormat::videoCodecDescription" href="qmediaformat.html#videoCodecDescription" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" static="true" type="QString" signature="QString videoCodecDescription(QMediaFormat::VideoCodec codec)">
                <parameter type="QMediaFormat::VideoCodec" name="codec" default=""/>
            </function>
            <function name="videoCodecName" fullname="QMediaFormat::videoCodecName" href="qmediaformat.html#videoCodecName" status="active" access="public" location="qmediaformat.h" documented="true" meta="plain" static="true" type="QString" signature="QString videoCodecName(QMediaFormat::VideoCodec codec)">
                <parameter type="QMediaFormat::VideoCodec" name="codec" default=""/>
            </function>
            <function name="~QMediaFormat" fullname="QMediaFormat::~QMediaFormat" href="qmediaformat.html#dtor.QMediaFormat" status="active" access="public" location="qmediaformat.h" documented="true" meta="destructor" noexcept="true" signature="~QMediaFormat()"/>
            <enum name="AudioCodec" fullname="QMediaFormat::AudioCodec" href="qmediaformat.html#AudioCodec-enum" status="active" access="public" location="qmediaformat.h" documented="true" scoped="true">
                <value name="Unspecified" value="-1"/>
                <value name="MP3" value="0"/>
                <value name="AAC" value="1"/>
                <value name="AC3" value="2"/>
                <value name="EAC3" value="3"/>
                <value name="FLAC" value="4"/>
                <value name="DolbyTrueHD" value="5"/>
                <value name="Opus" value="6"/>
                <value name="Vorbis" value="7"/>
                <value name="Wave" value="8"/>
                <value name="WMA" value="9"/>
                <value name="ALAC" value="10"/>
                <value name="LastAudioCodec" value="ALAC"/>
            </enum>
            <enum name="ConversionMode" fullname="QMediaFormat::ConversionMode" href="qmediaformat.html#ConversionMode-enum" status="active" access="public" location="qmediaformat.h" documented="true">
                <value name="Encode" value="0"/>
                <value name="Decode" value="1"/>
            </enum>
            <enum name="FileFormat" fullname="QMediaFormat::FileFormat" href="qmediaformat.html#FileFormat-enum" status="active" access="public" location="qmediaformat.h" documented="true">
                <value name="UnspecifiedFormat" value="-1"/>
                <value name="WMV" value="0"/>
                <value name="AVI" value="1"/>
                <value name="Matroska" value="2"/>
                <value name="MPEG4" value="3"/>
                <value name="Ogg" value="4"/>
                <value name="QuickTime" value="5"/>
                <value name="WebM" value="6"/>
                <value name="Mpeg4Audio" value="7"/>
                <value name="AAC" value="8"/>
                <value name="WMA" value="9"/>
                <value name="MP3" value="10"/>
                <value name="FLAC" value="11"/>
                <value name="Wave" value="12"/>
                <value name="LastFileFormat" value="Wave"/>
            </enum>
            <enum name="ResolveFlags" fullname="QMediaFormat::ResolveFlags" href="qmediaformat.html#ResolveFlags-enum" status="active" access="public" location="qmediaformat.h" documented="true">
                <value name="NoFlags" value="0"/>
                <value name="RequiresVideo" value="1"/>
            </enum>
            <enum name="VideoCodec" fullname="QMediaFormat::VideoCodec" href="qmediaformat.html#VideoCodec-enum" status="active" access="public" location="qmediaformat.h" documented="true" scoped="true">
                <value name="Unspecified" value="-1"/>
                <value name="MPEG1" value="0"/>
                <value name="MPEG2" value="1"/>
                <value name="MPEG4" value="2"/>
                <value name="H264" value="3"/>
                <value name="H265" value="4"/>
                <value name="VP8" value="5"/>
                <value name="VP9" value="6"/>
                <value name="AV1" value="7"/>
                <value name="Theora" value="8"/>
                <value name="WMV" value="9"/>
                <value name="MotionJPEG" value="10"/>
                <value name="LastVideoCodec" value="MotionJPEG"/>
            </enum>
            <property name="audioCodec" fullname="QMediaFormat::audioCodec" href="qmediaformat.html#audioCodec-prop" status="active" access="public" location="qmediaformat.h" documented="true" brief="Audio codec of the media">
                <getter name="audioCodec"/>
                <setter name="setAudioCodec"/>
            </property>
            <property name="fileFormat" fullname="QMediaFormat::fileFormat" href="qmediaformat.html#fileFormat-prop" status="active" access="public" location="qmediaformat.h" documented="true" brief="File (container) format of the media">
                <getter name="fileFormat"/>
                <setter name="setFileFormat"/>
            </property>
            <property name="videoCodec" fullname="QMediaFormat::videoCodec" href="qmediaformat.html#videoCodec-prop" status="active" access="public" location="qmediaformat.h" documented="true" brief="Video codec of the media">
                <getter name="videoCodec"/>
                <setter name="setVideoCodec"/>
            </property>
        </class>
        <class name="QMediaMetaData" href="qmediametadata.html" status="active" access="public" location="qmediametadata.h" documented="true" module="QtMultimedia" brief="Provides meta-data for media files">
            <function name="clear" fullname="QMediaMetaData::clear" href="qmediametadata.html#clear" status="active" access="public" location="qmediametadata.h" documented="true" meta="plain" type="void" signature="void clear()"/>
            <function name="insert" fullname="QMediaMetaData::insert" href="qmediametadata.html#insert" status="active" access="public" location="qmediametadata.h" documented="true" meta="plain" type="void" signature="void insert(QMediaMetaData::Key k, const QVariant &amp;value)">
                <parameter type="QMediaMetaData::Key" name="k" default=""/>
                <parameter type="const QVariant &amp;" name="value" default=""/>
            </function>
            <function name="isEmpty" fullname="QMediaMetaData::isEmpty" href="qmediametadata.html#isEmpty" status="active" access="public" location="qmediametadata.h" documented="true" meta="plain" const="true" type="bool" signature="bool isEmpty() const"/>
            <function name="keyType" fullname="QMediaMetaData::keyType" href="qmediametadata.html#keyType" status="active" access="protected" location="qmediametadata.h" documented="true" meta="plain" static="true" type="QMetaType" signature="QMetaType keyType(QMediaMetaData::Key key)">
                <parameter type="QMediaMetaData::Key" name="key" default=""/>
            </function>
            <function name="keys" fullname="QMediaMetaData::keys" href="qmediametadata.html#keys" status="active" access="public" location="qmediametadata.h" documented="true" meta="plain" const="true" type="QList&lt;QMediaMetaData::Key&gt;" signature="QList&lt;QMediaMetaData::Key&gt; keys() const"/>
            <function name="metaDataKeyToString" fullname="QMediaMetaData::metaDataKeyToString" href="qmediametadata.html#metaDataKeyToString" status="active" access="public" location="qmediametadata.h" documented="true" meta="plain" static="true" type="QString" signature="QString metaDataKeyToString(QMediaMetaData::Key key)">
                <parameter type="QMediaMetaData::Key" name="key" default=""/>
            </function>
            <function name="operator!=" href="qmediametadata.html#operator-not-eq" status="active" access="public" location="qmediametadata.h" documented="true" related="6" meta="plain" type="bool" signature="bool operator!=(const QMediaMetaData &amp;a, const QMediaMetaData &amp;b)">
                <parameter type="const QMediaMetaData &amp;" name="a" default=""/>
                <parameter type="const QMediaMetaData &amp;" name="b" default=""/>
            </function>
            <function name="operator==" href="qmediametadata.html#operator-eq-eq" status="active" access="public" location="qmediametadata.h" documented="true" related="7" meta="plain" type="bool" signature="bool operator==(const QMediaMetaData &amp;a, const QMediaMetaData &amp;b)">
                <parameter type="const QMediaMetaData &amp;" name="a" default=""/>
                <parameter type="const QMediaMetaData &amp;" name="b" default=""/>
            </function>
            <function name="operator[]" fullname="QMediaMetaData::operator[]" href="qmediametadata.html#operator-5b-5d" status="active" access="public" location="qmediametadata.h" documented="true" meta="plain" type="QVariant &amp;" signature="QVariant &amp; operator[](QMediaMetaData::Key k)">
                <parameter type="QMediaMetaData::Key" name="k" default=""/>
            </function>
            <function name="remove" fullname="QMediaMetaData::remove" href="qmediametadata.html#remove" status="active" access="public" location="qmediametadata.h" documented="true" meta="plain" type="void" signature="void remove(QMediaMetaData::Key k)">
                <parameter type="QMediaMetaData::Key" name="k" default=""/>
            </function>
            <function name="stringValue" fullname="QMediaMetaData::stringValue" href="qmediametadata.html#stringValue" status="active" access="public" location="qmediametadata.h" documented="true" meta="plain" const="true" type="QString" signature="QString stringValue(QMediaMetaData::Key key) const">
                <parameter type="QMediaMetaData::Key" name="key" default=""/>
            </function>
            <function name="value" fullname="QMediaMetaData::value" href="qmediametadata.html#value" status="active" access="public" location="qmediametadata.h" documented="true" meta="plain" const="true" type="QVariant" signature="QVariant value(QMediaMetaData::Key key) const">
                <parameter type="QMediaMetaData::Key" name="key" default=""/>
            </function>
            <enum name="Key" fullname="QMediaMetaData::Key" href="qmediametadata.html#Key-enum" status="active" access="public" location="qmediametadata.h" documented="true">
                <value name="Title" value="0"/>
                <value name="Author" value="1"/>
                <value name="Comment" value="2"/>
                <value name="Description" value="3"/>
                <value name="Genre" value="4"/>
                <value name="Date" value="5"/>
                <value name="Language" value="6"/>
                <value name="Publisher" value="7"/>
                <value name="Copyright" value="8"/>
                <value name="Url" value="9"/>
                <value name="Duration" value="10"/>
                <value name="MediaType" value="11"/>
                <value name="FileFormat" value="12"/>
                <value name="AudioBitRate" value="13"/>
                <value name="AudioCodec" value="14"/>
                <value name="VideoBitRate" value="15"/>
                <value name="VideoCodec" value="16"/>
                <value name="VideoFrameRate" value="17"/>
                <value name="AlbumTitle" value="18"/>
                <value name="AlbumArtist" value="19"/>
                <value name="ContributingArtist" value="20"/>
                <value name="TrackNumber" value="21"/>
                <value name="Composer" value="22"/>
                <value name="LeadPerformer" value="23"/>
                <value name="ThumbnailImage" value="24"/>
                <value name="CoverArtImage" value="25"/>
                <value name="Orientation" value="26"/>
                <value name="Resolution" value="27"/>
            </enum>
            <variable name="data" fullname="QMediaMetaData::data" href="qmediametadata.html#data-var" status="active" access="protected" location="qmediametadata.h" documented="true" type="QHash&lt;QMediaMetaData::Key, QVariant&gt;" static="false" brief="The meta data"/>
        </class>
        <class name="QMediaPlayer" href="qmediaplayer.html" status="active" access="public" location="qmediaplayer.h" documented="true" groups="multimedia,multimedia_playback,multimedia_video" bases="QObject" module="QtMultimedia" brief="Allows the playing of a media files">
            <function name="QMediaPlayer" fullname="QMediaPlayer::QMediaPlayer" href="qmediaplayer.html#QMediaPlayer" status="active" access="public" location="qmediaplayer.h" documented="true" meta="constructor" explicit="true" signature="QMediaPlayer(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="activeAudioTrack" fullname="QMediaPlayer::activeAudioTrack" href="qmediaplayer.html#activeAudioTrack-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="activeAudioTrack" type="int" signature="int activeAudioTrack() const"/>
            <function name="activeSubtitleTrack" fullname="QMediaPlayer::activeSubtitleTrack" href="qmediaplayer.html#activeSubtitleTrack-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="activeSubtitleTrack" type="int" signature="int activeSubtitleTrack() const"/>
            <function name="activeTracksChanged" fullname="QMediaPlayer::activeTracksChanged" href="qmediaplayer.html#activeTracksChanged" status="active" access="public" location="qmediaplayer.h" meta="signal" associated-property="activeAudioTrack,activeSubtitleTrack,activeVideoTrack" type="void" signature="void activeTracksChanged()"/>
            <function name="activeVideoTrack" fullname="QMediaPlayer::activeVideoTrack" href="qmediaplayer.html#activeVideoTrack-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="activeVideoTrack" type="int" signature="int activeVideoTrack() const"/>
            <function name="audioOutput" fullname="QMediaPlayer::audioOutput" href="qmediaplayer.html#audioOutput-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="audioOutput" type="QAudioOutput *" signature="QAudioOutput * audioOutput() const"/>
            <function name="audioOutputChanged" fullname="QMediaPlayer::audioOutputChanged" href="qmediaplayer.html#audioOutput-prop" status="active" access="public" location="qmediaplayer.h" meta="signal" associated-property="audioOutput" type="void" signature="void audioOutputChanged()"/>
            <function name="audioTracks" fullname="QMediaPlayer::audioTracks" href="qmediaplayer.html#audioTracks-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="audioTracks" type="QList&lt;QMediaMetaData&gt;" signature="QList&lt;QMediaMetaData&gt; audioTracks() const"/>
            <function name="bufferProgress" fullname="QMediaPlayer::bufferProgress" href="qmediaplayer.html#bufferProgress" status="active" access="public" location="qmediaplayer.h" documented="true" meta="plain" const="true" associated-property="bufferProgress" type="float" signature="float bufferProgress() const"/>
            <function name="bufferProgressChanged" fullname="QMediaPlayer::bufferProgressChanged" href="qmediaplayer.html#bufferProgressChanged" status="active" access="public" location="qmediaplayer.h" documented="true" meta="signal" associated-property="bufferProgress" type="void" signature="void bufferProgressChanged(float filled)">
                <parameter type="float" name="filled" default=""/>
            </function>
            <function name="bufferedTimeRange" fullname="QMediaPlayer::bufferedTimeRange" href="qmediaplayer.html#bufferedTimeRange" status="active" access="public" location="qmediaplayer.h" documented="true" meta="plain" const="true" type="QMediaTimeRange" signature="QMediaTimeRange bufferedTimeRange() const"/>
            <function name="duration" fullname="QMediaPlayer::duration" href="qmediaplayer.html#duration" status="active" access="public" location="qmediaplayer.h" documented="true" meta="plain" const="true" associated-property="duration" type="qint64" signature="qint64 duration() const"/>
            <function name="durationChanged" fullname="QMediaPlayer::durationChanged" href="qmediaplayer.html#durationChanged" status="active" access="public" location="qmediaplayer.h" documented="true" meta="signal" associated-property="duration" type="void" signature="void durationChanged(qint64 duration)">
                <parameter type="qint64" name="duration" default=""/>
            </function>
            <function name="error" fullname="QMediaPlayer::error" href="qmediaplayer.html#error" status="active" access="public" location="qmediaplayer.h" documented="true" meta="plain" const="true" associated-property="error" type="QMediaPlayer::Error" signature="QMediaPlayer::Error error() const"/>
            <function name="errorChanged" fullname="QMediaPlayer::errorChanged" href="qmediaplayer.html#errorChanged" status="active" access="public" location="qmediaplayer.h" meta="signal" associated-property="error,errorString" type="void" signature="void errorChanged()"/>
            <function name="errorOccurred" fullname="QMediaPlayer::errorOccurred" href="qmediaplayer.html#errorOccurred" status="active" access="public" location="qmediaplayer.h" documented="true" meta="signal" type="void" signature="void errorOccurred(QMediaPlayer::Error error, const QString &amp;errorString)">
                <parameter type="QMediaPlayer::Error" name="error" default=""/>
                <parameter type="const QString &amp;" name="errorString" default=""/>
            </function>
            <function name="errorString" fullname="QMediaPlayer::errorString" href="qmediaplayer.html#errorString-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="errorString" type="QString" signature="QString errorString() const"/>
            <function name="hasAudio" fullname="QMediaPlayer::hasAudio" href="qmediaplayer.html#hasAudio-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="hasAudio" type="bool" signature="bool hasAudio() const"/>
            <function name="hasAudioChanged" fullname="QMediaPlayer::hasAudioChanged" href="qmediaplayer.html#hasAudioChanged" status="active" access="public" location="qmediaplayer.h" documented="true" meta="signal" associated-property="hasAudio" type="void" signature="void hasAudioChanged(bool available)">
                <parameter type="bool" name="available" default=""/>
            </function>
            <function name="hasVideo" fullname="QMediaPlayer::hasVideo" href="qmediaplayer.html#hasVideo-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="hasVideo" type="bool" signature="bool hasVideo() const"/>
            <function name="hasVideoChanged" fullname="QMediaPlayer::hasVideoChanged" href="qmediaplayer.html#hasVideoChanged" status="active" access="public" location="qmediaplayer.h" documented="true" meta="signal" associated-property="hasVideo" type="void" signature="void hasVideoChanged(bool videoAvailable)">
                <parameter type="bool" name="videoAvailable" default=""/>
            </function>
            <function name="isAvailable" fullname="QMediaPlayer::isAvailable" href="qmediaplayer.html#isAvailable" status="active" access="public" location="qmediaplayer.h" documented="true" meta="plain" const="true" type="bool" signature="bool isAvailable() const"/>
            <function name="isPlaying" fullname="QMediaPlayer::isPlaying" href="qmediaplayer.html#playing-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="playing" type="bool" signature="bool isPlaying() const"/>
            <function name="isSeekable" fullname="QMediaPlayer::isSeekable" href="qmediaplayer.html#isSeekable" status="active" access="public" location="qmediaplayer.h" documented="true" meta="plain" const="true" associated-property="seekable" type="bool" signature="bool isSeekable() const"/>
            <function name="loops" fullname="QMediaPlayer::loops" href="qmediaplayer.html#loops-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="loops" type="int" signature="int loops() const"/>
            <function name="loopsChanged" fullname="QMediaPlayer::loopsChanged" href="qmediaplayer.html#loops-prop" status="active" access="public" location="qmediaplayer.h" meta="signal" associated-property="loops" type="void" signature="void loopsChanged()"/>
            <function name="mediaStatus" fullname="QMediaPlayer::mediaStatus" href="qmediaplayer.html#mediaStatus-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="mediaStatus" type="QMediaPlayer::MediaStatus" signature="QMediaPlayer::MediaStatus mediaStatus() const"/>
            <function name="mediaStatusChanged" fullname="QMediaPlayer::mediaStatusChanged" href="qmediaplayer.html#mediaStatusChanged" status="active" access="public" location="qmediaplayer.h" documented="true" meta="signal" associated-property="mediaStatus" type="void" signature="void mediaStatusChanged(QMediaPlayer::MediaStatus status)">
                <parameter type="QMediaPlayer::MediaStatus" name="status" default=""/>
            </function>
            <function name="metaData" fullname="QMediaPlayer::metaData" href="qmediaplayer.html#metaData-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="metaData" type="QMediaMetaData" signature="QMediaMetaData metaData() const"/>
            <function name="metaDataChanged" fullname="QMediaPlayer::metaDataChanged" href="qmediaplayer.html#metaData-prop" status="active" access="public" location="qmediaplayer.h" meta="signal" associated-property="metaData" type="void" signature="void metaDataChanged()"/>
            <function name="pause" fullname="QMediaPlayer::pause" href="qmediaplayer.html#pause" status="active" access="public" location="qmediaplayer.h" documented="true" meta="slot" type="void" signature="void pause()"/>
            <function name="play" fullname="QMediaPlayer::play" href="qmediaplayer.html#play" status="active" access="public" location="qmediaplayer.h" documented="true" meta="slot" type="void" signature="void play()"/>
            <function name="playbackRate" fullname="QMediaPlayer::playbackRate" href="qmediaplayer.html#playbackRate" status="active" access="public" location="qmediaplayer.h" documented="true" meta="plain" const="true" associated-property="playbackRate" type="qreal" signature="qreal playbackRate() const"/>
            <function name="playbackRateChanged" fullname="QMediaPlayer::playbackRateChanged" href="qmediaplayer.html#playbackRateChanged" status="active" access="public" location="qmediaplayer.h" documented="true" meta="signal" associated-property="playbackRate" type="void" signature="void playbackRateChanged(qreal rate)">
                <parameter type="qreal" name="rate" default=""/>
            </function>
            <function name="playbackState" fullname="QMediaPlayer::playbackState" href="qmediaplayer.html#playbackState-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="playbackState" type="QMediaPlayer::PlaybackState" signature="QMediaPlayer::PlaybackState playbackState() const"/>
            <function name="playbackStateChanged" fullname="QMediaPlayer::playbackStateChanged" href="qmediaplayer.html#playbackState-prop" status="active" access="public" location="qmediaplayer.h" meta="signal" associated-property="playbackState" type="void" signature="void playbackStateChanged(QMediaPlayer::PlaybackState newState)">
                <parameter type="QMediaPlayer::PlaybackState" name="newState" default=""/>
            </function>
            <function name="playingChanged" fullname="QMediaPlayer::playingChanged" href="qmediaplayer.html#playing-prop" status="active" access="public" location="qmediaplayer.h" meta="signal" associated-property="playing" type="void" signature="void playingChanged(bool playing)">
                <parameter type="bool" name="playing" default=""/>
            </function>
            <function name="position" fullname="QMediaPlayer::position" href="qmediaplayer.html#position" status="active" access="public" location="qmediaplayer.h" documented="true" meta="plain" const="true" associated-property="position" type="qint64" signature="qint64 position() const"/>
            <function name="positionChanged" fullname="QMediaPlayer::positionChanged" href="qmediaplayer.html#positionChanged" status="active" access="public" location="qmediaplayer.h" documented="true" meta="signal" associated-property="position" type="void" signature="void positionChanged(qint64 position)">
                <parameter type="qint64" name="position" default=""/>
            </function>
            <function name="seekableChanged" fullname="QMediaPlayer::seekableChanged" href="qmediaplayer.html#seekableChanged" status="active" access="public" location="qmediaplayer.h" documented="true" meta="signal" associated-property="seekable" type="void" signature="void seekableChanged(bool seekable)">
                <parameter type="bool" name="seekable" default=""/>
            </function>
            <function name="setActiveAudioTrack" fullname="QMediaPlayer::setActiveAudioTrack" href="qmediaplayer.html#activeAudioTrack-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" associated-property="activeAudioTrack" type="void" signature="void setActiveAudioTrack(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="setActiveSubtitleTrack" fullname="QMediaPlayer::setActiveSubtitleTrack" href="qmediaplayer.html#activeSubtitleTrack-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" associated-property="activeSubtitleTrack" type="void" signature="void setActiveSubtitleTrack(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="setActiveVideoTrack" fullname="QMediaPlayer::setActiveVideoTrack" href="qmediaplayer.html#activeVideoTrack-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" associated-property="activeVideoTrack" type="void" signature="void setActiveVideoTrack(int index)">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="setAudioOutput" fullname="QMediaPlayer::setAudioOutput" href="qmediaplayer.html#audioOutput-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" associated-property="audioOutput" type="void" signature="void setAudioOutput(QAudioOutput *output)">
                <parameter type="QAudioOutput *" name="output" default=""/>
            </function>
            <function name="setLoops" fullname="QMediaPlayer::setLoops" href="qmediaplayer.html#loops-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" associated-property="loops" type="void" signature="void setLoops(int loops)">
                <parameter type="int" name="loops" default=""/>
            </function>
            <function name="setPlaybackRate" fullname="QMediaPlayer::setPlaybackRate" href="qmediaplayer.html#playbackRate-prop" status="active" access="public" location="qmediaplayer.h" meta="slot" associated-property="playbackRate" type="void" signature="void setPlaybackRate(qreal rate)">
                <parameter type="qreal" name="rate" default=""/>
            </function>
            <function name="setPosition" fullname="QMediaPlayer::setPosition" href="qmediaplayer.html#position-prop" status="active" access="public" location="qmediaplayer.h" meta="slot" associated-property="position" type="void" signature="void setPosition(qint64 position)">
                <parameter type="qint64" name="position" default=""/>
            </function>
            <function name="setSource" fullname="QMediaPlayer::setSource" href="qmediaplayer.html#setSource" status="active" access="public" location="qmediaplayer.h" documented="true" meta="slot" associated-property="source" type="void" signature="void setSource(const QUrl &amp;source)">
                <parameter type="const QUrl &amp;" name="source" default=""/>
            </function>
            <function name="setSourceDevice" fullname="QMediaPlayer::setSourceDevice" href="qmediaplayer.html#setSourceDevice" status="active" access="public" location="qmediaplayer.h" documented="true" meta="slot" type="void" signature="void setSourceDevice(QIODevice *device, const QUrl &amp;sourceUrl)">
                <parameter type="QIODevice *" name="device" default=""/>
                <parameter type="const QUrl &amp;" name="sourceUrl" default="QUrl()"/>
            </function>
            <function name="setVideoOutput" fullname="QMediaPlayer::setVideoOutput" href="qmediaplayer.html#videoOutput-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" associated-property="videoOutput" type="void" signature="void setVideoOutput(QObject *)">
                <parameter type="QObject *" name="" default=""/>
            </function>
            <function name="setVideoSink" fullname="QMediaPlayer::setVideoSink" href="qmediaplayer.html#setVideoSink" status="active" access="public" location="qmediaplayer.h" documented="true" meta="plain" type="void" signature="void setVideoSink(QVideoSink *sink)">
                <parameter type="QVideoSink *" name="sink" default=""/>
            </function>
            <function name="source" fullname="QMediaPlayer::source" href="qmediaplayer.html#source-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="source" type="QUrl" signature="QUrl source() const"/>
            <function name="sourceChanged" fullname="QMediaPlayer::sourceChanged" href="qmediaplayer.html#sourceChanged" status="active" access="public" location="qmediaplayer.h" documented="true" meta="signal" associated-property="source" type="void" signature="void sourceChanged(const QUrl &amp;media)">
                <parameter type="const QUrl &amp;" name="media" default=""/>
            </function>
            <function name="sourceDevice" fullname="QMediaPlayer::sourceDevice" href="qmediaplayer.html#sourceDevice" status="active" access="public" location="qmediaplayer.h" documented="true" meta="plain" const="true" type="const QIODevice *" signature="const QIODevice * sourceDevice() const"/>
            <function name="stop" fullname="QMediaPlayer::stop" href="qmediaplayer.html#stop" status="active" access="public" location="qmediaplayer.h" documented="true" meta="slot" type="void" signature="void stop()"/>
            <function name="subtitleTracks" fullname="QMediaPlayer::subtitleTracks" href="qmediaplayer.html#subtitleTracks-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="subtitleTracks" type="QList&lt;QMediaMetaData&gt;" signature="QList&lt;QMediaMetaData&gt; subtitleTracks() const"/>
            <function name="tracksChanged" fullname="QMediaPlayer::tracksChanged" href="qmediaplayer.html#tracksChanged" status="active" access="public" location="qmediaplayer.h" meta="signal" associated-property="audioTracks,subtitleTracks,videoTracks" type="void" signature="void tracksChanged()"/>
            <function name="videoOutput" fullname="QMediaPlayer::videoOutput" href="qmediaplayer.html#videoOutput-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="videoOutput" type="QObject *" signature="QObject * videoOutput() const"/>
            <function name="videoOutputChanged" fullname="QMediaPlayer::videoOutputChanged" href="qmediaplayer.html#videoOutput-prop" status="active" access="public" location="qmediaplayer.h" meta="signal" associated-property="videoOutput" type="void" signature="void videoOutputChanged()"/>
            <function name="videoSink" fullname="QMediaPlayer::videoSink" href="qmediaplayer.html#videoSink" status="active" access="public" location="qmediaplayer.h" documented="true" meta="plain" const="true" type="QVideoSink *" signature="QVideoSink * videoSink() const"/>
            <function name="videoTracks" fullname="QMediaPlayer::videoTracks" href="qmediaplayer.html#videoTracks-prop" status="active" access="public" location="qmediaplayer.h" meta="plain" const="true" associated-property="videoTracks" type="QList&lt;QMediaMetaData&gt;" signature="QList&lt;QMediaMetaData&gt; videoTracks() const"/>
            <function name="~QMediaPlayer" fullname="QMediaPlayer::~QMediaPlayer" href="qmediaplayer.html#dtor.QMediaPlayer" status="active" access="public" location="qmediaplayer.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QMediaPlayer()"/>
            <enum name="Error" fullname="QMediaPlayer::Error" href="qmediaplayer.html#Error-enum" status="active" access="public" location="qmediaplayer.h" documented="true">
                <value name="NoError" value="0"/>
                <value name="ResourceError" value="1"/>
                <value name="FormatError" value="2"/>
                <value name="NetworkError" value="3"/>
                <value name="AccessDeniedError" value="4"/>
            </enum>
            <enum name="Loops" fullname="QMediaPlayer::Loops" href="qmediaplayer.html#Loops-enum" status="active" access="public" location="qmediaplayer.h" documented="true">
                <value name="Infinite" value="-1"/>
                <value name="Once" value="1"/>
            </enum>
            <enum name="MediaStatus" fullname="QMediaPlayer::MediaStatus" href="qmediaplayer.html#MediaStatus-enum" status="active" access="public" location="qmediaplayer.h" documented="true">
                <value name="NoMedia" value="0"/>
                <value name="LoadingMedia" value="1"/>
                <value name="LoadedMedia" value="2"/>
                <value name="StalledMedia" value="3"/>
                <value name="BufferingMedia" value="4"/>
                <value name="BufferedMedia" value="5"/>
                <value name="EndOfMedia" value="6"/>
                <value name="InvalidMedia" value="7"/>
            </enum>
            <enum name="PlaybackState" fullname="QMediaPlayer::PlaybackState" href="qmediaplayer.html#PlaybackState-enum" status="active" access="public" location="qmediaplayer.h" documented="true">
                <value name="StoppedState" value="0"/>
                <value name="PlayingState" value="1"/>
                <value name="PausedState" value="2"/>
            </enum>
            <property name="activeAudioTrack" fullname="QMediaPlayer::activeAudioTrack" href="qmediaplayer.html#activeAudioTrack-prop" status="active" access="public" location="qmediaplayer.h" documented="true" brief="Returns the currently active audio track">
                <getter name="activeAudioTrack"/>
                <setter name="setActiveAudioTrack"/>
                <notifier name="activeTracksChanged"/>
            </property>
            <property name="activeSubtitleTrack" fullname="QMediaPlayer::activeSubtitleTrack" href="qmediaplayer.html#activeSubtitleTrack-prop" status="active" access="public" location="qmediaplayer.h" documented="true" brief="Returns the currently active subtitle track">
                <getter name="activeSubtitleTrack"/>
                <setter name="setActiveSubtitleTrack"/>
                <notifier name="activeTracksChanged"/>
            </property>
            <property name="activeVideoTrack" fullname="QMediaPlayer::activeVideoTrack" href="qmediaplayer.html#activeVideoTrack-prop" status="active" access="public" location="qmediaplayer.h" documented="true" brief="Returns the currently active video track">
                <getter name="activeVideoTrack"/>
                <setter name="setActiveVideoTrack"/>
                <notifier name="activeTracksChanged"/>
            </property>
            <property name="audioOutput" fullname="QMediaPlayer::audioOutput" href="qmediaplayer.html#audioOutput-prop" status="active" access="public" location="qmediaplayer.h" documented="true" brief="Audio output device used by the media player">
                <getter name="audioOutput"/>
                <setter name="setAudioOutput"/>
                <notifier name="audioOutputChanged"/>
            </property>
            <property name="audioTracks" fullname="QMediaPlayer::audioTracks" href="qmediaplayer.html#audioTracks-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false">
                <getter name="audioTracks"/>
                <notifier name="tracksChanged"/>
            </property>
            <property name="bufferProgress" fullname="QMediaPlayer::bufferProgress" href="qmediaplayer.html#bufferProgress-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false" brief="The percentage of the temporary buffer filled before playback begins or resumes, from 0. (empty) to 1. (full)">
                <getter name="bufferProgress"/>
                <notifier name="bufferProgressChanged"/>
            </property>
            <property name="duration" fullname="QMediaPlayer::duration" href="qmediaplayer.html#duration-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false" brief="The duration of the current media">
                <getter name="duration"/>
                <notifier name="durationChanged"/>
            </property>
            <property name="error" fullname="QMediaPlayer::error" href="qmediaplayer.html#error-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false" brief="String describing the last error condition">
                <getter name="error"/>
                <notifier name="errorChanged"/>
            </property>
            <property name="errorString" fullname="QMediaPlayer::errorString" href="qmediaplayer.html#errorString-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false" brief="This property holds a string describing the current error condition in more detail">
                <getter name="errorString"/>
                <notifier name="errorChanged"/>
            </property>
            <property name="hasAudio" fullname="QMediaPlayer::hasAudio" href="qmediaplayer.html#hasAudio-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false" brief="This property holds whether the media contains audio">
                <getter name="hasAudio"/>
                <notifier name="hasAudioChanged"/>
            </property>
            <property name="hasVideo" fullname="QMediaPlayer::hasVideo" href="qmediaplayer.html#hasVideo-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false" brief="This property holds whether the media contains video">
                <getter name="hasVideo"/>
                <notifier name="hasVideoChanged"/>
            </property>
            <property name="loops" fullname="QMediaPlayer::loops" href="qmediaplayer.html#loops-prop" status="active" access="public" location="qmediaplayer.h" documented="true">
                <getter name="loops"/>
                <setter name="setLoops"/>
                <notifier name="loopsChanged"/>
            </property>
            <property name="mediaStatus" fullname="QMediaPlayer::mediaStatus" href="qmediaplayer.html#mediaStatus-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false" brief="The status of the current media stream">
                <getter name="mediaStatus"/>
                <notifier name="mediaStatusChanged"/>
            </property>
            <property name="metaData" fullname="QMediaPlayer::metaData" href="qmediaplayer.html#metaData-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false">
                <getter name="metaData"/>
                <notifier name="metaDataChanged"/>
            </property>
            <property name="playbackRate" fullname="QMediaPlayer::playbackRate" href="qmediaplayer.html#playbackRate-prop" status="active" access="public" location="qmediaplayer.h" documented="true" brief="The playback rate of the current media">
                <getter name="playbackRate"/>
                <setter name="setPlaybackRate"/>
                <notifier name="playbackRateChanged"/>
            </property>
            <property name="playbackState" fullname="QMediaPlayer::playbackState" href="qmediaplayer.html#playbackState-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false">
                <getter name="playbackState"/>
                <notifier name="playbackStateChanged"/>
            </property>
            <property name="playing" fullname="QMediaPlayer::playing" href="qmediaplayer.html#playing-prop" status="active" access="public" location="qmediaplayer.h" since="6.5" documented="true" writable="false" brief="Whether the media is playing">
                <getter name="isPlaying"/>
                <notifier name="playingChanged"/>
            </property>
            <property name="position" fullname="QMediaPlayer::position" href="qmediaplayer.html#position-prop" status="active" access="public" location="qmediaplayer.h" documented="true" brief="The playback position of the current media">
                <getter name="position"/>
                <setter name="setPosition"/>
                <notifier name="positionChanged"/>
            </property>
            <property name="seekable" fullname="QMediaPlayer::seekable" href="qmediaplayer.html#seekable-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false" brief="The seek-able status of the current media">
                <getter name="isSeekable"/>
                <notifier name="seekableChanged"/>
            </property>
            <property name="source" fullname="QMediaPlayer::source" href="qmediaplayer.html#source-prop" status="active" access="public" location="qmediaplayer.h" documented="true" brief="The active media source being used by the player object">
                <getter name="source"/>
                <setter name="setSource"/>
                <notifier name="sourceChanged"/>
            </property>
            <property name="subtitleTracks" fullname="QMediaPlayer::subtitleTracks" href="qmediaplayer.html#subtitleTracks-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false">
                <getter name="subtitleTracks"/>
                <notifier name="tracksChanged"/>
            </property>
            <property name="videoOutput" fullname="QMediaPlayer::videoOutput" href="qmediaplayer.html#videoOutput-prop" status="active" access="public" location="qmediaplayer.h" documented="true" brief="Video output to be used by the media player">
                <getter name="videoOutput"/>
                <setter name="setVideoOutput"/>
                <notifier name="videoOutputChanged"/>
            </property>
            <property name="videoTracks" fullname="QMediaPlayer::videoTracks" href="qmediaplayer.html#videoTracks-prop" status="active" access="public" location="qmediaplayer.h" documented="true" writable="false">
                <getter name="videoTracks"/>
                <notifier name="tracksChanged"/>
            </property>
        </class>
        <class name="QMediaRecorder" href="qmediarecorder.html" status="active" access="public" location="qmediarecorder.h" documented="true" groups="multimedia,multimedia_audio,multimedia_recording,multimedia_video" bases="QObject" module="QtMultimedia" brief="Used for encoding and recording a capture session">
            <function name="QMediaRecorder" fullname="QMediaRecorder::QMediaRecorder" href="qmediarecorder.html#QMediaRecorder" status="active" access="public" location="qmediarecorder.h" documented="true" meta="constructor" signature="QMediaRecorder(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="actualLocation" fullname="QMediaRecorder::actualLocation" href="qmediarecorder.html#actualLocation-prop" status="active" access="public" location="qmediarecorder.h" meta="plain" const="true" associated-property="actualLocation" type="QUrl" signature="QUrl actualLocation() const"/>
            <function name="actualLocationChanged" fullname="QMediaRecorder::actualLocationChanged" href="qmediarecorder.html#actualLocationChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" associated-property="actualLocation" type="void" signature="void actualLocationChanged(const QUrl &amp;location)">
                <parameter type="const QUrl &amp;" name="location" default=""/>
            </function>
            <function name="addMetaData" fullname="QMediaRecorder::addMetaData" href="qmediarecorder.html#addMetaData" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" type="void" signature="void addMetaData(const QMediaMetaData &amp;metaData)">
                <parameter type="const QMediaMetaData &amp;" name="metaData" default=""/>
            </function>
            <function name="audioBitRate" fullname="QMediaRecorder::audioBitRate" href="qmediarecorder.html#audioBitRate" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" const="true" associated-property="audioBitRate" type="int" signature="int audioBitRate() const"/>
            <function name="audioBitRateChanged" fullname="QMediaRecorder::audioBitRateChanged" href="qmediarecorder.html#audioBitRateChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" associated-property="audioBitRate" type="void" signature="void audioBitRateChanged()"/>
            <function name="audioChannelCount" fullname="QMediaRecorder::audioChannelCount" href="qmediarecorder.html#audioChannelCount" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" const="true" associated-property="audioChannelCount" type="int" signature="int audioChannelCount() const"/>
            <function name="audioChannelCountChanged" fullname="QMediaRecorder::audioChannelCountChanged" href="qmediarecorder.html#audioChannelCountChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" associated-property="audioChannelCount" type="void" signature="void audioChannelCountChanged()"/>
            <function name="audioSampleRate" fullname="QMediaRecorder::audioSampleRate" href="qmediarecorder.html#audioSampleRate" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" const="true" associated-property="audioSampleRate" type="int" signature="int audioSampleRate() const"/>
            <function name="audioSampleRateChanged" fullname="QMediaRecorder::audioSampleRateChanged" href="qmediarecorder.html#audioSampleRateChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" associated-property="audioSampleRate" type="void" signature="void audioSampleRateChanged()"/>
            <function name="captureSession" fullname="QMediaRecorder::captureSession" href="qmediarecorder.html#captureSession" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" const="true" type="QMediaCaptureSession *" signature="QMediaCaptureSession * captureSession() const"/>
            <function name="duration" fullname="QMediaRecorder::duration" href="qmediarecorder.html#duration-prop" status="active" access="public" location="qmediarecorder.h" meta="plain" const="true" associated-property="duration" type="qint64" signature="qint64 duration() const"/>
            <function name="durationChanged" fullname="QMediaRecorder::durationChanged" href="qmediarecorder.html#durationChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" associated-property="duration" type="void" signature="void durationChanged(qint64 duration)">
                <parameter type="qint64" name="duration" default=""/>
            </function>
            <function name="encoderSettingsChanged" fullname="QMediaRecorder::encoderSettingsChanged" href="qmediarecorder.html#encoderSettingsChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" type="void" signature="void encoderSettingsChanged()"/>
            <function name="encodingMode" fullname="QMediaRecorder::encodingMode" href="qmediarecorder.html#encodingMode" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" const="true" associated-property="encodingMode" type="QMediaRecorder::EncodingMode" signature="QMediaRecorder::EncodingMode encodingMode() const"/>
            <function name="encodingModeChanged" fullname="QMediaRecorder::encodingModeChanged" href="qmediarecorder.html#encodingModeChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" associated-property="encodingMode" type="void" signature="void encodingModeChanged()"/>
            <function name="error" fullname="QMediaRecorder::error" href="qmediarecorder.html#error-prop" status="active" access="public" location="qmediarecorder.h" meta="plain" const="true" associated-property="error" type="QMediaRecorder::Error" signature="QMediaRecorder::Error error() const"/>
            <function name="errorChanged" fullname="QMediaRecorder::errorChanged" href="qmediarecorder.html#errorChanged" status="active" access="public" location="qmediarecorder.h" meta="signal" associated-property="error,errorString" type="void" signature="void errorChanged()"/>
            <function name="errorOccurred" fullname="QMediaRecorder::errorOccurred" href="qmediarecorder.html#errorOccurred" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" type="void" signature="void errorOccurred(QMediaRecorder::Error error, const QString &amp;errorString)">
                <parameter type="QMediaRecorder::Error" name="error" default=""/>
                <parameter type="const QString &amp;" name="errorString" default=""/>
            </function>
            <function name="errorString" fullname="QMediaRecorder::errorString" href="qmediarecorder.html#errorString-prop" status="active" access="public" location="qmediarecorder.h" meta="plain" const="true" associated-property="errorString" type="QString" signature="QString errorString() const"/>
            <function name="isAvailable" fullname="QMediaRecorder::isAvailable" href="qmediarecorder.html#isAvailable" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" const="true" type="bool" signature="bool isAvailable() const"/>
            <function name="mediaFormat" fullname="QMediaRecorder::mediaFormat" href="qmediarecorder.html#mediaFormat-prop" status="active" access="public" location="qmediarecorder.h" meta="plain" const="true" associated-property="mediaFormat" type="QMediaFormat" signature="QMediaFormat mediaFormat() const"/>
            <function name="mediaFormatChanged" fullname="QMediaRecorder::mediaFormatChanged" href="qmediarecorder.html#mediaFormat-prop" status="active" access="public" location="qmediarecorder.h" meta="signal" associated-property="mediaFormat" type="void" signature="void mediaFormatChanged()"/>
            <function name="metaData" fullname="QMediaRecorder::metaData" href="qmediarecorder.html#metaData-prop" status="active" access="public" location="qmediarecorder.h" meta="plain" const="true" associated-property="metaData" type="QMediaMetaData" signature="QMediaMetaData metaData() const"/>
            <function name="metaDataChanged" fullname="QMediaRecorder::metaDataChanged" href="qmediarecorder.html#metaDataChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" associated-property="metaData" type="void" signature="void metaDataChanged()"/>
            <function name="outputLocation" fullname="QMediaRecorder::outputLocation" href="qmediarecorder.html#outputLocation-prop" status="active" access="public" location="qmediarecorder.h" meta="plain" const="true" associated-property="outputLocation" type="QUrl" signature="QUrl outputLocation() const"/>
            <function name="pause" fullname="QMediaRecorder::pause" href="qmediarecorder.html#pause" status="active" access="public" location="qmediarecorder.h" documented="true" meta="slot" type="void" signature="void pause()"/>
            <function name="quality" fullname="QMediaRecorder::quality" href="qmediarecorder.html#quality-prop" status="active" access="public" location="qmediarecorder.h" meta="plain" const="true" associated-property="quality" type="QMediaRecorder::Quality" signature="QMediaRecorder::Quality quality() const"/>
            <function name="qualityChanged" fullname="QMediaRecorder::qualityChanged" href="qmediarecorder.html#qualityChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" associated-property="quality" type="void" signature="void qualityChanged()"/>
            <function name="record" fullname="QMediaRecorder::record" href="qmediarecorder.html#record" status="active" access="public" location="qmediarecorder.h" documented="true" meta="slot" type="void" signature="void record()"/>
            <function name="recorderState" fullname="QMediaRecorder::recorderState" href="qmediarecorder.html#recorderState" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" const="true" associated-property="recorderState" type="QMediaRecorder::RecorderState" signature="QMediaRecorder::RecorderState recorderState() const"/>
            <function name="recorderStateChanged" fullname="QMediaRecorder::recorderStateChanged" href="qmediarecorder.html#recorderStateChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" associated-property="recorderState" type="void" signature="void recorderStateChanged(QMediaRecorder::RecorderState state)">
                <parameter type="QMediaRecorder::RecorderState" name="state" default=""/>
            </function>
            <function name="setAudioBitRate" fullname="QMediaRecorder::setAudioBitRate" href="qmediarecorder.html#setAudioBitRate" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" associated-property="audioBitRate" type="void" signature="void setAudioBitRate(int bitRate)">
                <parameter type="int" name="bitRate" default=""/>
            </function>
            <function name="setAudioChannelCount" fullname="QMediaRecorder::setAudioChannelCount" href="qmediarecorder.html#setAudioChannelCount" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" associated-property="audioChannelCount" type="void" signature="void setAudioChannelCount(int channels)">
                <parameter type="int" name="channels" default=""/>
            </function>
            <function name="setAudioSampleRate" fullname="QMediaRecorder::setAudioSampleRate" href="qmediarecorder.html#setAudioSampleRate" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" associated-property="audioSampleRate" type="void" signature="void setAudioSampleRate(int sampleRate)">
                <parameter type="int" name="sampleRate" default=""/>
            </function>
            <function name="setEncodingMode" fullname="QMediaRecorder::setEncodingMode" href="qmediarecorder.html#setEncodingMode" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" associated-property="encodingMode" type="void" signature="void setEncodingMode(QMediaRecorder::EncodingMode mode)">
                <parameter type="QMediaRecorder::EncodingMode" name="mode" default=""/>
            </function>
            <function name="setMediaFormat" fullname="QMediaRecorder::setMediaFormat" href="qmediarecorder.html#mediaFormat-prop" status="active" access="public" location="qmediarecorder.h" meta="plain" associated-property="mediaFormat" type="void" signature="void setMediaFormat(const QMediaFormat &amp;format)">
                <parameter type="const QMediaFormat &amp;" name="format" default=""/>
            </function>
            <function name="setMetaData" fullname="QMediaRecorder::setMetaData" href="qmediarecorder.html#setMetaData" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" associated-property="metaData" type="void" signature="void setMetaData(const QMediaMetaData &amp;metaData)">
                <parameter type="const QMediaMetaData &amp;" name="metaData" default=""/>
            </function>
            <function name="setOutputLocation" fullname="QMediaRecorder::setOutputLocation" href="qmediarecorder.html#outputLocation-prop" status="active" access="public" location="qmediarecorder.h" meta="plain" associated-property="outputLocation" type="void" signature="void setOutputLocation(const QUrl &amp;location)">
                <parameter type="const QUrl &amp;" name="location" default=""/>
            </function>
            <function name="setQuality" fullname="QMediaRecorder::setQuality" href="qmediarecorder.html#quality-prop" status="active" access="public" location="qmediarecorder.h" meta="plain" associated-property="quality" type="void" signature="void setQuality(QMediaRecorder::Quality quality)">
                <parameter type="QMediaRecorder::Quality" name="quality" default=""/>
            </function>
            <function name="setVideoBitRate" fullname="QMediaRecorder::setVideoBitRate" href="qmediarecorder.html#setVideoBitRate" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" associated-property="videoBitRate" type="void" signature="void setVideoBitRate(int bitRate)">
                <parameter type="int" name="bitRate" default=""/>
            </function>
            <function name="setVideoFrameRate" fullname="QMediaRecorder::setVideoFrameRate" href="qmediarecorder.html#setVideoFrameRate" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" associated-property="videoFrameRate" type="void" signature="void setVideoFrameRate(qreal frameRate)">
                <parameter type="qreal" name="frameRate" default=""/>
            </function>
            <function name="setVideoResolution" fullname="QMediaRecorder::setVideoResolution" href="qmediarecorder.html#setVideoResolution" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" associated-property="videoResolution" type="void" signature="void setVideoResolution(const QSize &amp;size)">
                <parameter type="const QSize &amp;" name="size" default=""/>
            </function>
            <function name="setVideoResolution" fullname="QMediaRecorder::setVideoResolution" href="qmediarecorder.html#setVideoResolution-1" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" overload="true" overload-number="1" associated-property="videoResolution" type="void" signature="void setVideoResolution(int width, int height)">
                <parameter type="int" name="width" default=""/>
                <parameter type="int" name="height" default=""/>
            </function>
            <function name="stop" fullname="QMediaRecorder::stop" href="qmediarecorder.html#stop" status="active" access="public" location="qmediarecorder.h" documented="true" meta="slot" type="void" signature="void stop()"/>
            <function name="videoBitRate" fullname="QMediaRecorder::videoBitRate" href="qmediarecorder.html#videoBitRate" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" const="true" associated-property="videoBitRate" type="int" signature="int videoBitRate() const"/>
            <function name="videoBitRateChanged" fullname="QMediaRecorder::videoBitRateChanged" href="qmediarecorder.html#videoBitRateChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" associated-property="videoBitRate" type="void" signature="void videoBitRateChanged()"/>
            <function name="videoFrameRate" fullname="QMediaRecorder::videoFrameRate" href="qmediarecorder.html#videoFrameRate" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" const="true" associated-property="videoFrameRate" type="qreal" signature="qreal videoFrameRate() const"/>
            <function name="videoFrameRateChanged" fullname="QMediaRecorder::videoFrameRateChanged" href="qmediarecorder.html#videoFrameRateChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" associated-property="videoFrameRate" type="void" signature="void videoFrameRateChanged()"/>
            <function name="videoResolution" fullname="QMediaRecorder::videoResolution" href="qmediarecorder.html#videoResolution" status="active" access="public" location="qmediarecorder.h" documented="true" meta="plain" const="true" associated-property="videoResolution" type="QSize" signature="QSize videoResolution() const"/>
            <function name="videoResolutionChanged" fullname="QMediaRecorder::videoResolutionChanged" href="qmediarecorder.html#videoResolutionChanged" status="active" access="public" location="qmediarecorder.h" documented="true" meta="signal" associated-property="videoResolution" type="void" signature="void videoResolutionChanged()"/>
            <function name="~QMediaRecorder" fullname="QMediaRecorder::~QMediaRecorder" href="qmediarecorder.html#dtor.QMediaRecorder" status="active" access="public" location="qmediarecorder.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QMediaRecorder()"/>
            <enum name="EncodingMode" fullname="QMediaRecorder::EncodingMode" href="qmediarecorder.html#EncodingMode-enum" status="active" access="public" location="qmediarecorder.h" documented="true">
                <value name="ConstantQualityEncoding" value="0"/>
                <value name="ConstantBitRateEncoding" value="1"/>
                <value name="AverageBitRateEncoding" value="2"/>
                <value name="TwoPassEncoding" value="3"/>
            </enum>
            <enum name="Error" fullname="QMediaRecorder::Error" href="qmediarecorder.html#Error-enum" status="active" access="public" location="qmediarecorder.h" documented="true">
                <value name="NoError" value="0"/>
                <value name="ResourceError" value="1"/>
                <value name="FormatError" value="2"/>
                <value name="OutOfSpaceError" value="3"/>
                <value name="LocationNotWritable" value="4"/>
            </enum>
            <enum name="Quality" fullname="QMediaRecorder::Quality" href="qmediarecorder.html#Quality-enum" status="active" access="public" location="qmediarecorder.h" documented="true">
                <value name="VeryLowQuality" value="0"/>
                <value name="LowQuality" value="1"/>
                <value name="NormalQuality" value="2"/>
                <value name="HighQuality" value="3"/>
                <value name="VeryHighQuality" value="4"/>
            </enum>
            <enum name="RecorderState" fullname="QMediaRecorder::RecorderState" href="qmediarecorder.html#RecorderState-enum" status="active" access="public" location="qmediarecorder.h" documented="true">
                <value name="StoppedState" value="0"/>
                <value name="RecordingState" value="1"/>
                <value name="PausedState" value="2"/>
            </enum>
            <property name="actualLocation" fullname="QMediaRecorder::actualLocation" href="qmediarecorder.html#actualLocation-prop" status="active" access="public" location="qmediarecorder.h" documented="true" writable="false" brief="Actual location of the last media content">
                <getter name="actualLocation"/>
                <notifier name="actualLocationChanged"/>
            </property>
            <property name="duration" fullname="QMediaRecorder::duration" href="qmediarecorder.html#duration-prop" status="active" access="public" location="qmediarecorder.h" documented="true" writable="false" brief="The recorded media duration in milliseconds">
                <getter name="duration"/>
                <notifier name="durationChanged"/>
            </property>
            <property name="error" fullname="QMediaRecorder::error" href="qmediarecorder.html#error-prop" status="active" access="public" location="qmediarecorder.h" documented="true" writable="false">
                <getter name="error"/>
                <notifier name="errorChanged"/>
            </property>
            <property name="errorString" fullname="QMediaRecorder::errorString" href="qmediarecorder.html#errorString-prop" status="active" access="public" location="qmediarecorder.h" documented="true" writable="false">
                <getter name="errorString"/>
                <notifier name="errorChanged"/>
            </property>
            <property name="mediaFormat" fullname="QMediaRecorder::mediaFormat" href="qmediarecorder.html#mediaFormat-prop" status="active" access="public" location="qmediarecorder.h" documented="true">
                <getter name="mediaFormat"/>
                <setter name="setMediaFormat"/>
                <notifier name="mediaFormatChanged"/>
            </property>
            <property name="metaData" fullname="QMediaRecorder::metaData" href="qmediarecorder.html#metaData-prop" status="active" access="public" location="qmediarecorder.h" documented="true">
                <getter name="metaData"/>
                <setter name="setMetaData"/>
                <notifier name="metaDataChanged"/>
            </property>
            <property name="outputLocation" fullname="QMediaRecorder::outputLocation" href="qmediarecorder.html#outputLocation-prop" status="active" access="public" location="qmediarecorder.h" documented="true" brief="The destination location of media content">
                <getter name="outputLocation"/>
                <setter name="setOutputLocation"/>
            </property>
            <property name="quality" fullname="QMediaRecorder::quality" href="qmediarecorder.html#quality-prop" status="active" access="public" location="qmediarecorder.h" documented="true">
                <getter name="quality"/>
                <setter name="setQuality"/>
                <notifier name="qualityChanged"/>
            </property>
            <property name="recorderState" fullname="QMediaRecorder::recorderState" href="qmediarecorder.html#recorderState-prop" status="active" access="public" location="qmediarecorder.h" documented="true" writable="false" brief="Current state of the media recorder">
                <getter name="recorderState"/>
                <notifier name="recorderStateChanged"/>
            </property>
        </class>
        <class threadsafety="reentrant" name="QMediaTimeRange" href="qmediatimerange.html" status="active" access="public" location="qmediatimerange.h" documented="true" groups="multimedia" module="QtMultimedia" brief="Represents a set of zero or more disjoint time intervals">
            <function name="QMediaTimeRange" fullname="QMediaTimeRange::QMediaTimeRange" href="qmediatimerange.html#QMediaTimeRange" status="active" access="public" location="qmediatimerange.h" documented="true" meta="constructor" signature="QMediaTimeRange()"/>
            <function name="QMediaTimeRange" fullname="QMediaTimeRange::QMediaTimeRange" href="qmediatimerange.html#QMediaTimeRange-1" status="active" access="public" location="qmediatimerange.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QMediaTimeRange(qint64 start, qint64 end)">
                <parameter type="qint64" name="start" default=""/>
                <parameter type="qint64" name="end" default=""/>
            </function>
            <function name="QMediaTimeRange" fullname="QMediaTimeRange::QMediaTimeRange" href="qmediatimerange.html#QMediaTimeRange-2" status="active" access="public" location="qmediatimerange.h" documented="true" meta="constructor" overload="true" overload-number="2" signature="QMediaTimeRange(const QMediaTimeRange::Interval &amp;interval)">
                <parameter type="const QMediaTimeRange::Interval &amp;" name="interval" default=""/>
            </function>
            <function name="QMediaTimeRange" fullname="QMediaTimeRange::QMediaTimeRange" href="qmediatimerange.html#QMediaTimeRange-3" status="active" access="public" location="qmediatimerange.h" documented="true" meta="copy-constructor" noexcept="true" overload="true" overload-number="3" signature="QMediaTimeRange(const QMediaTimeRange &amp;range)">
                <parameter type="const QMediaTimeRange &amp;" name="range" default=""/>
            </function>
            <function name="QMediaTimeRange" fullname="QMediaTimeRange::QMediaTimeRange" href="qmediatimerange.html#QMediaTimeRange-4" status="active" access="public" location="qmediatimerange.h" documented="true" meta="move-constructor" noexcept="true" overload="true" overload-number="4" signature="QMediaTimeRange(QMediaTimeRange &amp;&amp;other)">
                <parameter type="QMediaTimeRange &amp;&amp;" name="other" default=""/>
            </function>
            <function name="addInterval" fullname="QMediaTimeRange::addInterval" href="qmediatimerange.html#addInterval" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" type="void" signature="void addInterval(const QMediaTimeRange::Interval &amp;interval)">
                <parameter type="const QMediaTimeRange::Interval &amp;" name="interval" default=""/>
            </function>
            <function name="addInterval" fullname="QMediaTimeRange::addInterval" href="qmediatimerange.html#addInterval-1" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void addInterval(qint64 start, qint64 end)">
                <parameter type="qint64" name="start" default=""/>
                <parameter type="qint64" name="end" default=""/>
            </function>
            <function name="addTimeRange" fullname="QMediaTimeRange::addTimeRange" href="qmediatimerange.html#addTimeRange" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" type="void" signature="void addTimeRange(const QMediaTimeRange &amp;range)">
                <parameter type="const QMediaTimeRange &amp;" name="range" default=""/>
            </function>
            <function name="clear" fullname="QMediaTimeRange::clear" href="qmediatimerange.html#clear" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" type="void" signature="void clear()"/>
            <function name="contains" fullname="QMediaTimeRange::contains" href="qmediatimerange.html#contains" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" const="true" type="bool" signature="bool contains(qint64 time) const">
                <parameter type="qint64" name="time" default=""/>
            </function>
            <function name="earliestTime" fullname="QMediaTimeRange::earliestTime" href="qmediatimerange.html#earliestTime" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" const="true" type="qint64" signature="qint64 earliestTime() const"/>
            <function name="intervals" fullname="QMediaTimeRange::intervals" href="qmediatimerange.html#intervals" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" const="true" type="QList&lt;QMediaTimeRange::Interval&gt;" signature="QList&lt;QMediaTimeRange::Interval&gt; intervals() const"/>
            <function name="isContinuous" fullname="QMediaTimeRange::isContinuous" href="qmediatimerange.html#isContinuous" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" const="true" type="bool" signature="bool isContinuous() const"/>
            <function name="isEmpty" fullname="QMediaTimeRange::isEmpty" href="qmediatimerange.html#isEmpty" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" const="true" type="bool" signature="bool isEmpty() const"/>
            <function name="latestTime" fullname="QMediaTimeRange::latestTime" href="qmediatimerange.html#latestTime" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" const="true" type="qint64" signature="qint64 latestTime() const"/>
            <function name="operator!=" href="qmediatimerange.html#operator-not-eq" status="active" access="public" location="qmediatimerange.h" documented="true" related="8" meta="plain" type="bool" signature="bool operator!=(const QMediaTimeRange &amp;lhs, const QMediaTimeRange &amp;rhs)">
                <parameter type="const QMediaTimeRange &amp;" name="lhs" default=""/>
                <parameter type="const QMediaTimeRange &amp;" name="rhs" default=""/>
            </function>
            <function name="operator+" href="qmediatimerange.html#operator-2b" status="active" access="public" location="qmediatimerange.h" documented="true" related="0" meta="plain" type="QMediaTimeRange" signature="QMediaTimeRange operator+(const QMediaTimeRange &amp;r1, const QMediaTimeRange &amp;r2)">
                <parameter type="const QMediaTimeRange &amp;" name="r1" default=""/>
                <parameter type="const QMediaTimeRange &amp;" name="r2" default=""/>
            </function>
            <function name="operator+=" fullname="QMediaTimeRange::operator+=" href="qmediatimerange.html#operator-2b-eq" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" type="QMediaTimeRange &amp;" signature="QMediaTimeRange &amp; operator+=(const QMediaTimeRange &amp;other)">
                <parameter type="const QMediaTimeRange &amp;" name="other" default=""/>
            </function>
            <function name="operator+=" fullname="QMediaTimeRange::operator+=" href="qmediatimerange.html#operator-2b-eq-1" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" overload="true" overload-number="1" type="QMediaTimeRange &amp;" signature="QMediaTimeRange &amp; operator+=(const QMediaTimeRange::Interval &amp;interval)">
                <parameter type="const QMediaTimeRange::Interval &amp;" name="interval" default=""/>
            </function>
            <function name="operator-" href="qmediatimerange.html#operator-" status="active" access="public" location="qmediatimerange.h" documented="true" related="1" meta="plain" type="QMediaTimeRange" signature="QMediaTimeRange operator-(const QMediaTimeRange &amp;r1, const QMediaTimeRange &amp;r2)">
                <parameter type="const QMediaTimeRange &amp;" name="r1" default=""/>
                <parameter type="const QMediaTimeRange &amp;" name="r2" default=""/>
            </function>
            <function name="operator-=" fullname="QMediaTimeRange::operator-=" href="qmediatimerange.html#operator--eq" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" type="QMediaTimeRange &amp;" signature="QMediaTimeRange &amp; operator-=(const QMediaTimeRange &amp;other)">
                <parameter type="const QMediaTimeRange &amp;" name="other" default=""/>
            </function>
            <function name="operator-=" fullname="QMediaTimeRange::operator-=" href="qmediatimerange.html#operator--eq-1" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" overload="true" overload-number="1" type="QMediaTimeRange &amp;" signature="QMediaTimeRange &amp; operator-=(const QMediaTimeRange::Interval &amp;interval)">
                <parameter type="const QMediaTimeRange::Interval &amp;" name="interval" default=""/>
            </function>
            <function name="operator=" fullname="QMediaTimeRange::operator=" href="qmediatimerange.html#operator-eq" status="active" access="public" location="qmediatimerange.h" documented="true" meta="copy-assign" noexcept="true" type="QMediaTimeRange &amp;" signature="QMediaTimeRange &amp; operator=(const QMediaTimeRange &amp;other)">
                <parameter type="const QMediaTimeRange &amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QMediaTimeRange::operator=" href="qmediatimerange.html#operator-eq-1" status="active" access="public" location="qmediatimerange.h" documented="true" meta="move-assign" noexcept="true" overload="true" overload-number="1" type="QMediaTimeRange &amp;" signature="QMediaTimeRange &amp; operator=(QMediaTimeRange &amp;&amp;other)">
                <parameter type="QMediaTimeRange &amp;&amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QMediaTimeRange::operator=" href="qmediatimerange.html#operator-eq-2" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" overload="true" overload-number="2" type="QMediaTimeRange &amp;" signature="QMediaTimeRange &amp; operator=(const QMediaTimeRange::Interval &amp;interval)">
                <parameter type="const QMediaTimeRange::Interval &amp;" name="interval" default=""/>
            </function>
            <function name="operator==" href="qmediatimerange.html#operator-eq-eq" status="active" access="public" location="qmediatimerange.h" documented="true" related="9" meta="plain" type="bool" signature="bool operator==(const QMediaTimeRange &amp;lhs, const QMediaTimeRange &amp;rhs)">
                <parameter type="const QMediaTimeRange &amp;" name="lhs" default=""/>
                <parameter type="const QMediaTimeRange &amp;" name="rhs" default=""/>
            </function>
            <function name="removeInterval" fullname="QMediaTimeRange::removeInterval" href="qmediatimerange.html#removeInterval" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" type="void" signature="void removeInterval(const QMediaTimeRange::Interval &amp;interval)">
                <parameter type="const QMediaTimeRange::Interval &amp;" name="interval" default=""/>
            </function>
            <function name="removeInterval" fullname="QMediaTimeRange::removeInterval" href="qmediatimerange.html#removeInterval-1" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void removeInterval(qint64 start, qint64 end)">
                <parameter type="qint64" name="start" default=""/>
                <parameter type="qint64" name="end" default=""/>
            </function>
            <function name="removeTimeRange" fullname="QMediaTimeRange::removeTimeRange" href="qmediatimerange.html#removeTimeRange" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" type="void" signature="void removeTimeRange(const QMediaTimeRange &amp;range)">
                <parameter type="const QMediaTimeRange &amp;" name="range" default=""/>
            </function>
            <function name="swap" fullname="QMediaTimeRange::swap" href="qmediatimerange.html#swap" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QMediaTimeRange &amp;other)">
                <parameter type="QMediaTimeRange &amp;" name="other" default=""/>
            </function>
            <function name="~QMediaTimeRange" fullname="QMediaTimeRange::~QMediaTimeRange" href="qmediatimerange.html#dtor.QMediaTimeRange" status="active" access="public" location="qmediatimerange.h" documented="true" meta="destructor" noexcept="true" signature="~QMediaTimeRange()"/>
            <struct name="Interval" fullname="QMediaTimeRange::Interval" href="qmediatimerange-interval.html" status="active" access="public" location="qmediatimerange.h" documented="true" groups="multimedia,multimedia_core" module="QtMultimedia" brief="QMediaTimeRange::Interval class represents a time interval with integer precision">
                <function name="Interval" fullname="QMediaTimeRange::Interval::Interval" href="qmediatimerange-interval.html#Interval-1" status="active" access="public" location="qmediatimerange.h" documented="true" meta="constructor" explicit="true" constexpr="true" noexcept="true" overload="true" overload-number="1" signature="Interval(qint64 start, qint64 end)">
                    <parameter type="qint64" name="start" default=""/>
                    <parameter type="qint64" name="end" default=""/>
                </function>
                <function name="contains" fullname="QMediaTimeRange::Interval::contains" href="qmediatimerange-interval.html#contains" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" const="true" constexpr="true" noexcept="true" type="bool" signature="bool contains(qint64 time) const">
                    <parameter type="qint64" name="time" default=""/>
                </function>
                <function name="end" fullname="QMediaTimeRange::Interval::end" href="qmediatimerange-interval.html#end" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" const="true" constexpr="true" noexcept="true" type="qint64" signature="qint64 end() const"/>
                <function name="isNormal" fullname="QMediaTimeRange::Interval::isNormal" href="qmediatimerange-interval.html#isNormal" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" const="true" constexpr="true" noexcept="true" type="bool" signature="bool isNormal() const"/>
                <function name="normalized" fullname="QMediaTimeRange::Interval::normalized" href="qmediatimerange-interval.html#normalized" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" const="true" constexpr="true" type="QMediaTimeRange::Interval" signature="QMediaTimeRange::Interval normalized() const"/>
                <function name="operator!=" href="qmediatimerange-interval.html#operator-not-eq" status="active" access="public" location="qmediatimerange.h" documented="true" related="10" meta="plain" constexpr="true" noexcept="true" type="bool" signature="bool operator!=(QMediaTimeRange::Interval lhs, QMediaTimeRange::Interval rhs)">
                    <parameter type="QMediaTimeRange::Interval" name="lhs" default=""/>
                    <parameter type="QMediaTimeRange::Interval" name="rhs" default=""/>
                </function>
                <function name="operator==" href="qmediatimerange-interval.html#operator-eq-eq" status="active" access="public" location="qmediatimerange.h" documented="true" related="11" meta="plain" constexpr="true" noexcept="true" type="bool" signature="bool operator==(QMediaTimeRange::Interval lhs, QMediaTimeRange::Interval rhs)">
                    <parameter type="QMediaTimeRange::Interval" name="lhs" default=""/>
                    <parameter type="QMediaTimeRange::Interval" name="rhs" default=""/>
                </function>
                <function name="start" fullname="QMediaTimeRange::Interval::start" href="qmediatimerange-interval.html#start" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" const="true" constexpr="true" noexcept="true" type="qint64" signature="qint64 start() const"/>
                <function name="translated" fullname="QMediaTimeRange::Interval::translated" href="qmediatimerange-interval.html#translated" status="active" access="public" location="qmediatimerange.h" documented="true" meta="plain" const="true" constexpr="true" type="QMediaTimeRange::Interval" signature="QMediaTimeRange::Interval translated(qint64 offset) const">
                    <parameter type="qint64" name="offset" default=""/>
                </function>
            </struct>
        </class>
        <class name="QScreenCapture" href="qscreencapture.html" status="active" access="public" location="qscreencapture.h" since="6.5" documented="true" groups="multimedia,multimedia_video" bases="QObject" module="QtMultimedia" brief="This class is used for capturing a screen">
            <contents name="screen-capture-limitations" title="Screen Capture Limitations" level="1"/>
            <function name="activeChanged" fullname="QScreenCapture::activeChanged" href="qscreencapture.html#active-prop" status="active" access="public" location="qscreencapture.h" meta="signal" associated-property="active" type="void" signature="void activeChanged(bool)">
                <parameter type="bool" name="" default=""/>
            </function>
            <function name="captureSession" fullname="QScreenCapture::captureSession" href="qscreencapture.html#captureSession" status="active" access="public" location="qscreencapture.h" documented="true" meta="plain" const="true" type="QMediaCaptureSession *" signature="QMediaCaptureSession * captureSession() const"/>
            <function name="error" fullname="QScreenCapture::error" href="qscreencapture.html#error-prop" status="active" access="public" location="qscreencapture.h" meta="plain" const="true" associated-property="error" type="QScreenCapture::Error" signature="QScreenCapture::Error error() const"/>
            <function name="errorChanged" fullname="QScreenCapture::errorChanged" href="qscreencapture.html#errorChanged" status="active" access="public" location="qscreencapture.h" meta="signal" associated-property="error,errorString" type="void" signature="void errorChanged()"/>
            <function name="errorOccurred" fullname="QScreenCapture::errorOccurred" href="qscreencapture.html#errorOccurred" status="active" access="public" location="qscreencapture.h" documented="true" meta="signal" type="void" signature="void errorOccurred(QScreenCapture::Error error, const QString &amp;errorString)">
                <parameter type="QScreenCapture::Error" name="error" default=""/>
                <parameter type="const QString &amp;" name="errorString" default=""/>
            </function>
            <function name="errorString" fullname="QScreenCapture::errorString" href="qscreencapture.html#errorString-prop" status="active" access="public" location="qscreencapture.h" meta="plain" const="true" associated-property="errorString" type="QString" signature="QString errorString() const"/>
            <function name="isActive" fullname="QScreenCapture::isActive" href="qscreencapture.html#active-prop" status="active" access="public" location="qscreencapture.h" meta="plain" const="true" associated-property="active" type="bool" signature="bool isActive() const"/>
            <function name="screen" fullname="QScreenCapture::screen" href="qscreencapture.html#screen-prop" status="active" access="public" location="qscreencapture.h" meta="plain" const="true" associated-property="screen" type="QScreen *" signature="QScreen * screen() const"/>
            <function name="screenChanged" fullname="QScreenCapture::screenChanged" href="qscreencapture.html#screen-prop" status="active" access="public" location="qscreencapture.h" meta="signal" associated-property="screen" type="void" signature="void screenChanged(QScreen *)">
                <parameter type="QScreen *" name="" default=""/>
            </function>
            <function name="setActive" fullname="QScreenCapture::setActive" href="qscreencapture.html#active-prop" status="active" access="public" location="qscreencapture.h" meta="slot" associated-property="active" type="void" signature="void setActive(bool active)">
                <parameter type="bool" name="active" default=""/>
            </function>
            <function name="setScreen" fullname="QScreenCapture::setScreen" href="qscreencapture.html#screen-prop" status="active" access="public" location="qscreencapture.h" meta="plain" associated-property="screen" type="void" signature="void setScreen(QScreen *screen)">
                <parameter type="QScreen *" name="screen" default=""/>
            </function>
            <function name="start" fullname="QScreenCapture::start" href="qscreencapture.html#start" status="active" access="public" location="qscreencapture.h" documented="true" meta="slot" type="void" signature="void start()"/>
            <function name="stop" fullname="QScreenCapture::stop" href="qscreencapture.html#stop" status="active" access="public" location="qscreencapture.h" documented="true" meta="slot" type="void" signature="void stop()"/>
            <enum name="Error" fullname="QScreenCapture::Error" href="qscreencapture.html#Error-enum" status="active" access="public" location="qscreencapture.h" documented="true">
                <value name="NoError" value="0"/>
                <value name="InternalError" value="1"/>
                <value name="CapturingNotSupported" value="2"/>
                <value name="CaptureFailed" value="4"/>
                <value name="NotFound" value="5"/>
            </enum>
            <property name="active" fullname="QScreenCapture::active" href="qscreencapture.html#active-prop" status="active" access="public" location="qscreencapture.h" documented="true" brief="Whether the capturing is currently active">
                <getter name="isActive"/>
                <setter name="setActive"/>
                <notifier name="activeChanged"/>
            </property>
            <property name="error" fullname="QScreenCapture::error" href="qscreencapture.html#error-prop" status="active" access="public" location="qscreencapture.h" documented="true" writable="false" brief="The code of the last error">
                <getter name="error"/>
                <notifier name="errorChanged"/>
            </property>
            <property name="errorString" fullname="QScreenCapture::errorString" href="qscreencapture.html#errorString-prop" status="active" access="public" location="qscreencapture.h" documented="true" writable="false" brief="Human readable string describing the cause of error">
                <getter name="errorString"/>
                <notifier name="errorChanged"/>
            </property>
            <property name="screen" fullname="QScreenCapture::screen" href="qscreencapture.html#screen-prop" status="active" access="public" location="qscreencapture.h" documented="true" brief="The screen for capturing">
                <getter name="screen"/>
                <setter name="setScreen"/>
                <notifier name="screenChanged"/>
            </property>
        </class>
        <class name="QSoundEffect" href="qsoundeffect.html" status="active" access="public" location="qsoundeffect.h" documented="true" groups="multimedia,multimedia_audio" bases="QObject" module="QtMultimedia" brief="Way to play low latency sound effects">
            <function name="QSoundEffect" fullname="QSoundEffect::QSoundEffect" href="qsoundeffect.html#QSoundEffect" status="active" access="public" location="qsoundeffect.h" documented="true" meta="constructor" explicit="true" signature="QSoundEffect(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="QSoundEffect" fullname="QSoundEffect::QSoundEffect" href="qsoundeffect.html#QSoundEffect-1" status="active" access="public" location="qsoundeffect.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QSoundEffect(const QAudioDevice &amp;audioDevice, QObject *parent)">
                <parameter type="const QAudioDevice &amp;" name="audioDevice" default=""/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="audioDevice" fullname="QSoundEffect::audioDevice" href="qsoundeffect.html#audioDevice-prop" status="active" access="public" location="qsoundeffect.h" meta="plain" associated-property="audioDevice" type="QAudioDevice" signature="QAudioDevice audioDevice()"/>
            <function name="audioDeviceChanged" fullname="QSoundEffect::audioDeviceChanged" href="qsoundeffect.html#audioDevice-prop" status="active" access="public" location="qsoundeffect.h" meta="signal" associated-property="audioDevice" type="void" signature="void audioDeviceChanged()"/>
            <function name="isLoaded" fullname="QSoundEffect::isLoaded" href="qsoundeffect.html#isLoaded" status="active" access="public" location="qsoundeffect.h" documented="true" meta="plain" const="true" type="bool" signature="bool isLoaded() const"/>
            <function name="isMuted" fullname="QSoundEffect::isMuted" href="qsoundeffect.html#isMuted" status="active" access="public" location="qsoundeffect.h" documented="true" meta="plain" const="true" associated-property="muted" type="bool" signature="bool isMuted() const"/>
            <function name="isPlaying" fullname="QSoundEffect::isPlaying" href="qsoundeffect.html#isPlaying" status="active" access="public" location="qsoundeffect.h" documented="true" meta="plain" const="true" associated-property="playing" type="bool" signature="bool isPlaying() const"/>
            <function name="loadedChanged" fullname="QSoundEffect::loadedChanged" href="qsoundeffect.html#loadedChanged" status="active" access="public" location="qsoundeffect.h" documented="true" meta="signal" type="void" signature="void loadedChanged()"/>
            <function name="loopCount" fullname="QSoundEffect::loopCount" href="qsoundeffect.html#loopCount" status="active" access="public" location="qsoundeffect.h" documented="true" meta="plain" const="true" associated-property="loops" type="int" signature="int loopCount() const"/>
            <function name="loopCountChanged" fullname="QSoundEffect::loopCountChanged" href="qsoundeffect.html#loopCountChanged" status="active" access="public" location="qsoundeffect.h" documented="true" meta="signal" associated-property="loops" type="void" signature="void loopCountChanged()"/>
            <function name="loopsRemaining" fullname="QSoundEffect::loopsRemaining" href="qsoundeffect.html#loopsRemaining-prop" status="active" access="public" location="qsoundeffect.h" meta="plain" const="true" associated-property="loopsRemaining" type="int" signature="int loopsRemaining() const"/>
            <function name="loopsRemainingChanged" fullname="QSoundEffect::loopsRemainingChanged" href="qsoundeffect.html#loopsRemainingChanged" status="active" access="public" location="qsoundeffect.h" documented="true" meta="signal" associated-property="loopsRemaining" type="void" signature="void loopsRemainingChanged()"/>
            <function name="mutedChanged" fullname="QSoundEffect::mutedChanged" href="qsoundeffect.html#mutedChanged" status="active" access="public" location="qsoundeffect.h" documented="true" meta="signal" associated-property="muted" type="void" signature="void mutedChanged()"/>
            <function name="play" fullname="QSoundEffect::play" href="qsoundeffect.html#play" status="active" access="public" location="qsoundeffect.h" documented="true" meta="slot" type="void" signature="void play()"/>
            <function name="playingChanged" fullname="QSoundEffect::playingChanged" href="qsoundeffect.html#playingChanged" status="active" access="public" location="qsoundeffect.h" documented="true" meta="signal" associated-property="playing" type="void" signature="void playingChanged()"/>
            <function name="setAudioDevice" fullname="QSoundEffect::setAudioDevice" href="qsoundeffect.html#audioDevice-prop" status="active" access="public" location="qsoundeffect.h" meta="plain" associated-property="audioDevice" type="void" signature="void setAudioDevice(const QAudioDevice &amp;device)">
                <parameter type="const QAudioDevice &amp;" name="device" default=""/>
            </function>
            <function name="setLoopCount" fullname="QSoundEffect::setLoopCount" href="qsoundeffect.html#setLoopCount" status="active" access="public" location="qsoundeffect.h" documented="true" meta="plain" associated-property="loops" type="void" signature="void setLoopCount(int loopCount)">
                <parameter type="int" name="loopCount" default=""/>
            </function>
            <function name="setMuted" fullname="QSoundEffect::setMuted" href="qsoundeffect.html#setMuted" status="active" access="public" location="qsoundeffect.h" documented="true" meta="plain" associated-property="muted" type="void" signature="void setMuted(bool muted)">
                <parameter type="bool" name="muted" default=""/>
            </function>
            <function name="setSource" fullname="QSoundEffect::setSource" href="qsoundeffect.html#setSource" status="active" access="public" location="qsoundeffect.h" documented="true" meta="plain" associated-property="source" type="void" signature="void setSource(const QUrl &amp;url)">
                <parameter type="const QUrl &amp;" name="url" default=""/>
            </function>
            <function name="setVolume" fullname="QSoundEffect::setVolume" href="qsoundeffect.html#setVolume" status="active" access="public" location="qsoundeffect.h" documented="true" meta="plain" associated-property="volume" type="void" signature="void setVolume(float volume)">
                <parameter type="float" name="volume" default=""/>
            </function>
            <function name="source" fullname="QSoundEffect::source" href="qsoundeffect.html#source" status="active" access="public" location="qsoundeffect.h" documented="true" meta="plain" const="true" associated-property="source" type="QUrl" signature="QUrl source() const"/>
            <function name="sourceChanged" fullname="QSoundEffect::sourceChanged" href="qsoundeffect.html#sourceChanged" status="active" access="public" location="qsoundeffect.h" documented="true" meta="signal" associated-property="source" type="void" signature="void sourceChanged()"/>
            <function name="status" fullname="QSoundEffect::status" href="qsoundeffect.html#status" status="active" access="public" location="qsoundeffect.h" documented="true" meta="plain" const="true" associated-property="status" type="QSoundEffect::Status" signature="QSoundEffect::Status status() const"/>
            <function name="statusChanged" fullname="QSoundEffect::statusChanged" href="qsoundeffect.html#statusChanged" status="active" access="public" location="qsoundeffect.h" documented="true" meta="signal" associated-property="status" type="void" signature="void statusChanged()"/>
            <function name="stop" fullname="QSoundEffect::stop" href="qsoundeffect.html#stop" status="active" access="public" location="qsoundeffect.h" documented="true" meta="slot" type="void" signature="void stop()"/>
            <function name="supportedMimeTypes" fullname="QSoundEffect::supportedMimeTypes" href="qsoundeffect.html#supportedMimeTypes" status="active" access="public" location="qsoundeffect.h" documented="true" meta="plain" static="true" type="QStringList" signature="QStringList supportedMimeTypes()"/>
            <function name="volume" fullname="QSoundEffect::volume" href="qsoundeffect.html#volume" status="active" access="public" location="qsoundeffect.h" documented="true" meta="plain" const="true" associated-property="volume" type="float" signature="float volume() const"/>
            <function name="volumeChanged" fullname="QSoundEffect::volumeChanged" href="qsoundeffect.html#volumeChanged" status="active" access="public" location="qsoundeffect.h" documented="true" meta="signal" associated-property="volume" type="void" signature="void volumeChanged()"/>
            <function name="~QSoundEffect" fullname="QSoundEffect::~QSoundEffect" href="qsoundeffect.html#dtor.QSoundEffect" status="active" access="public" location="qsoundeffect.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QSoundEffect()"/>
            <enum name="Loop" fullname="QSoundEffect::Loop" href="qsoundeffect.html#Loop-enum" status="active" access="public" location="qsoundeffect.h" documented="true">
                <value name="Infinite" value="-2"/>
            </enum>
            <enum name="Status" fullname="QSoundEffect::Status" href="qsoundeffect.html#Status-enum" status="active" access="public" location="qsoundeffect.h" documented="true">
                <value name="Null" value="0"/>
                <value name="Loading" value="1"/>
                <value name="Ready" value="2"/>
                <value name="Error" value="3"/>
            </enum>
            <property name="audioDevice" fullname="QSoundEffect::audioDevice" href="qsoundeffect.html#audioDevice-prop" status="active" access="public" location="qsoundeffect.h" documented="true">
                <getter name="audioDevice"/>
                <setter name="setAudioDevice"/>
                <notifier name="audioDeviceChanged"/>
            </property>
            <property name="loops" fullname="QSoundEffect::loops" href="qsoundeffect.html#loops-prop" status="active" access="public" location="qsoundeffect.h" documented="true">
                <getter name="loopCount"/>
                <setter name="setLoopCount"/>
                <notifier name="loopCountChanged"/>
            </property>
            <property name="loopsRemaining" fullname="QSoundEffect::loopsRemaining" href="qsoundeffect.html#loopsRemaining-prop" status="active" access="public" location="qsoundeffect.h" documented="true" writable="false">
                <getter name="loopsRemaining"/>
                <notifier name="loopsRemainingChanged"/>
            </property>
            <property name="muted" fullname="QSoundEffect::muted" href="qsoundeffect.html#muted-prop" status="active" access="public" location="qsoundeffect.h" documented="true">
                <getter name="isMuted"/>
                <setter name="setMuted"/>
                <notifier name="mutedChanged"/>
            </property>
            <property name="playing" fullname="QSoundEffect::playing" href="qsoundeffect.html#playing-prop" status="active" access="public" location="qsoundeffect.h" documented="true" writable="false">
                <getter name="isPlaying"/>
                <notifier name="playingChanged"/>
            </property>
            <property name="source" fullname="QSoundEffect::source" href="qsoundeffect.html#source-prop" status="active" access="public" location="qsoundeffect.h" documented="true">
                <getter name="source"/>
                <setter name="setSource"/>
                <notifier name="sourceChanged"/>
            </property>
            <property name="status" fullname="QSoundEffect::status" href="qsoundeffect.html#status-prop" status="active" access="public" location="qsoundeffect.h" documented="true" writable="false">
                <getter name="status"/>
                <notifier name="statusChanged"/>
            </property>
            <property name="volume" fullname="QSoundEffect::volume" href="qsoundeffect.html#volume-prop" status="active" access="public" location="qsoundeffect.h" documented="true">
                <getter name="volume"/>
                <setter name="setVolume"/>
                <notifier name="volumeChanged"/>
            </property>
        </class>
        <class name="QVideoFrame" href="qvideoframe.html" status="active" access="public" location="qvideoframe.h" documented="true" groups="multimedia,multimedia_video" module="QtMultimedia" brief="Represents a frame of video data">
            <function name="QVideoFrame" fullname="QVideoFrame::QVideoFrame" href="qvideoframe.html#QVideoFrame" status="active" access="public" location="qvideoframe.h" documented="true" meta="constructor" signature="QVideoFrame()"/>
            <function name="QVideoFrame" fullname="QVideoFrame::QVideoFrame" href="qvideoframe.html#QVideoFrame-1" status="active" access="public" location="qvideoframe.h" documented="true" meta="constructor" overload="true" overload-number="1" signature="QVideoFrame(const QVideoFrameFormat &amp;format)">
                <parameter type="const QVideoFrameFormat &amp;" name="format" default=""/>
            </function>
            <function name="QVideoFrame" fullname="QVideoFrame::QVideoFrame" href="qvideoframe.html#QVideoFrame-2" status="active" access="public" location="qvideoframe.h" documented="true" meta="copy-constructor" overload="true" overload-number="2" signature="QVideoFrame(const QVideoFrame &amp;other)">
                <parameter type="const QVideoFrame &amp;" name="other" default=""/>
            </function>
            <function name="QVideoFrame" fullname="QVideoFrame::QVideoFrame" href="qvideoframe.html#QVideoFrame-3" status="active" access="public" location="qvideoframe.h" documented="true" meta="move-constructor" noexcept="true" overload="true" overload-number="3" signature="QVideoFrame(QVideoFrame &amp;&amp;other)">
                <parameter type="QVideoFrame &amp;&amp;" name="other" default=""/>
            </function>
            <function name="bits" fullname="QVideoFrame::bits" href="qvideoframe.html#bits" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" type="uchar *" signature="uchar * bits(int plane)">
                <parameter type="int" name="plane" default=""/>
            </function>
            <function name="bits" fullname="QVideoFrame::bits" href="qvideoframe.html#bits-1" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="const uchar *" signature="const uchar * bits(int plane) const">
                <parameter type="int" name="plane" default=""/>
            </function>
            <function name="bytesPerLine" fullname="QVideoFrame::bytesPerLine" href="qvideoframe.html#bytesPerLine" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="int" signature="int bytesPerLine(int plane) const">
                <parameter type="int" name="plane" default=""/>
            </function>
            <function name="endTime" fullname="QVideoFrame::endTime" href="qvideoframe.html#endTime" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="qint64" signature="qint64 endTime() const"/>
            <function name="handleType" fullname="QVideoFrame::handleType" href="qvideoframe.html#handleType" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="QVideoFrame::HandleType" signature="QVideoFrame::HandleType handleType() const"/>
            <function name="height" fullname="QVideoFrame::height" href="qvideoframe.html#height" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="int" signature="int height() const"/>
            <function name="isMapped" fullname="QVideoFrame::isMapped" href="qvideoframe.html#isMapped" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="bool" signature="bool isMapped() const"/>
            <function name="isReadable" fullname="QVideoFrame::isReadable" href="qvideoframe.html#isReadable" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="bool" signature="bool isReadable() const"/>
            <function name="isValid" fullname="QVideoFrame::isValid" href="qvideoframe.html#isValid" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="bool" signature="bool isValid() const"/>
            <function name="isWritable" fullname="QVideoFrame::isWritable" href="qvideoframe.html#isWritable" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="bool" signature="bool isWritable() const"/>
            <function name="map" fullname="QVideoFrame::map" href="qvideoframe.html#map" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" type="bool" signature="bool map(QVideoFrame::MapMode mode)">
                <parameter type="QVideoFrame::MapMode" name="mode" default=""/>
            </function>
            <function name="mapMode" fullname="QVideoFrame::mapMode" href="qvideoframe.html#mapMode" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="QVideoFrame::MapMode" signature="QVideoFrame::MapMode mapMode() const"/>
            <function name="mappedBytes" fullname="QVideoFrame::mappedBytes" href="qvideoframe.html#mappedBytes" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="int" signature="int mappedBytes(int plane) const">
                <parameter type="int" name="plane" default=""/>
            </function>
            <function name="mirrored" fullname="QVideoFrame::mirrored" href="qvideoframe.html#mirrored" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="bool" signature="bool mirrored() const"/>
            <function name="operator!=" fullname="QVideoFrame::operator!=" href="qvideoframe.html#operator-not-eq" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="bool" signature="bool operator!=(const QVideoFrame &amp;other) const">
                <parameter type="const QVideoFrame &amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QVideoFrame::operator=" href="qvideoframe.html#operator-eq" status="active" access="public" location="qvideoframe.h" documented="true" meta="move-assign" noexcept="true" type="QVideoFrame &amp;" signature="QVideoFrame &amp; operator=(QVideoFrame &amp;&amp;other)">
                <parameter type="QVideoFrame &amp;&amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QVideoFrame::operator=" href="qvideoframe.html#operator-eq-1" status="active" access="public" location="qvideoframe.h" documented="true" meta="copy-assign" overload="true" overload-number="1" type="QVideoFrame &amp;" signature="QVideoFrame &amp; operator=(const QVideoFrame &amp;other)">
                <parameter type="const QVideoFrame &amp;" name="other" default=""/>
            </function>
            <function name="operator==" fullname="QVideoFrame::operator==" href="qvideoframe.html#operator-eq-eq" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="bool" signature="bool operator==(const QVideoFrame &amp;other) const">
                <parameter type="const QVideoFrame &amp;" name="other" default=""/>
            </function>
            <function name="paint" fullname="QVideoFrame::paint" href="qvideoframe.html#paint" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" type="void" signature="void paint(QPainter *painter, const QRectF &amp;rect, const QVideoFrame::PaintOptions &amp;options)">
                <parameter type="QPainter *" name="painter" default=""/>
                <parameter type="const QRectF &amp;" name="rect" default=""/>
                <parameter type="const QVideoFrame::PaintOptions &amp;" name="options" default=""/>
            </function>
            <function name="pixelFormat" fullname="QVideoFrame::pixelFormat" href="qvideoframe.html#pixelFormat" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="QVideoFrameFormat::PixelFormat" signature="QVideoFrameFormat::PixelFormat pixelFormat() const"/>
            <function name="planeCount" fullname="QVideoFrame::planeCount" href="qvideoframe.html#planeCount" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="int" signature="int planeCount() const"/>
            <function name="rotation" fullname="QVideoFrame::rotation" href="qvideoframe.html#rotation" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="QtVideo::Rotation" signature="QtVideo::Rotation rotation() const"/>
            <function name="rotationAngle" fullname="QVideoFrame::rotationAngle" href="qvideoframe-obsolete.html#rotationAngle" status="deprecated" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="QVideoFrame::RotationAngle" signature="QVideoFrame::RotationAngle rotationAngle() const"/>
            <function name="setEndTime" fullname="QVideoFrame::setEndTime" href="qvideoframe.html#setEndTime" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" type="void" signature="void setEndTime(qint64 time)">
                <parameter type="qint64" name="time" default=""/>
            </function>
            <function name="setMirrored" fullname="QVideoFrame::setMirrored" href="qvideoframe.html#setMirrored" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" type="void" signature="void setMirrored(bool mirrored)">
                <parameter type="bool" name="mirrored" default=""/>
            </function>
            <function name="setRotation" fullname="QVideoFrame::setRotation" href="qvideoframe.html#setRotation" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" type="void" signature="void setRotation(QtVideo::Rotation angle)">
                <parameter type="QtVideo::Rotation" name="angle" default=""/>
            </function>
            <function name="setRotationAngle" fullname="QVideoFrame::setRotationAngle" href="qvideoframe-obsolete.html#setRotationAngle" status="deprecated" access="public" location="qvideoframe.h" documented="true" meta="plain" type="void" signature="void setRotationAngle(QVideoFrame::RotationAngle angle)">
                <parameter type="QVideoFrame::RotationAngle" name="angle" default=""/>
            </function>
            <function name="setStartTime" fullname="QVideoFrame::setStartTime" href="qvideoframe.html#setStartTime" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" type="void" signature="void setStartTime(qint64 time)">
                <parameter type="qint64" name="time" default=""/>
            </function>
            <function name="setSubtitleText" fullname="QVideoFrame::setSubtitleText" href="qvideoframe.html#setSubtitleText" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" type="void" signature="void setSubtitleText(const QString &amp;text)">
                <parameter type="const QString &amp;" name="text" default=""/>
            </function>
            <function name="size" fullname="QVideoFrame::size" href="qvideoframe.html#size" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="QSize" signature="QSize size() const"/>
            <function name="startTime" fullname="QVideoFrame::startTime" href="qvideoframe.html#startTime" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="qint64" signature="qint64 startTime() const"/>
            <function name="subtitleText" fullname="QVideoFrame::subtitleText" href="qvideoframe.html#subtitleText" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="QString" signature="QString subtitleText() const"/>
            <function name="surfaceFormat" fullname="QVideoFrame::surfaceFormat" href="qvideoframe.html#surfaceFormat" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="QVideoFrameFormat" signature="QVideoFrameFormat surfaceFormat() const"/>
            <function name="swap" fullname="QVideoFrame::swap" href="qvideoframe.html#swap" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QVideoFrame &amp;other)">
                <parameter type="QVideoFrame &amp;" name="other" default=""/>
            </function>
            <function name="toImage" fullname="QVideoFrame::toImage" href="qvideoframe.html#toImage" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="QImage" signature="QImage toImage() const"/>
            <function name="unmap" fullname="QVideoFrame::unmap" href="qvideoframe.html#unmap" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" type="void" signature="void unmap()"/>
            <function name="width" fullname="QVideoFrame::width" href="qvideoframe.html#width" status="active" access="public" location="qvideoframe.h" documented="true" meta="plain" const="true" type="int" signature="int width() const"/>
            <function name="~QVideoFrame" fullname="QVideoFrame::~QVideoFrame" href="qvideoframe.html#dtor.QVideoFrame" status="active" access="public" location="qvideoframe.h" documented="true" meta="destructor" noexcept="true" signature="~QVideoFrame()"/>
            <enum name="HandleType" fullname="QVideoFrame::HandleType" href="qvideoframe.html#HandleType-enum" status="active" access="public" location="qvideoframe.h" documented="true">
                <value name="NoHandle" value="0"/>
                <value name="RhiTextureHandle" value="1"/>
            </enum>
            <enum name="MapMode" fullname="QVideoFrame::MapMode" href="qvideoframe.html#MapMode-enum" status="active" access="public" location="qvideoframe.h" documented="true">
                <value name="NotMapped" value="0x00"/>
                <value name="ReadOnly" value="0x01"/>
                <value name="WriteOnly" value="0x02"/>
                <value name="ReadWrite" value="ReadOnly | WriteOnly"/>
            </enum>
            <enum name="RotationAngle" fullname="QVideoFrame::RotationAngle" href="qvideoframe-obsolete.html#RotationAngle-enum" status="deprecated" access="public" location="qvideoframe.h" documented="true">
                <value name="Rotation0" value="0"/>
                <value name="Rotation90" value="90"/>
                <value name="Rotation180" value="180"/>
                <value name="Rotation270" value="270"/>
            </enum>
        </class>
        <class name="QVideoFrameFormat" href="qvideoframeformat.html" status="active" access="public" location="qvideoframeformat.h" documented="true" groups="multimedia,multimedia_video" module="QtMultimedia" brief="Specifies the stream format of a video presentation surface">
            <function name="QVideoFrameFormat" fullname="QVideoFrameFormat::QVideoFrameFormat" href="qvideoframeformat.html#QVideoFrameFormat" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="constructor" signature="QVideoFrameFormat()"/>
            <function name="QVideoFrameFormat" fullname="QVideoFrameFormat::QVideoFrameFormat" href="qvideoframeformat.html#QVideoFrameFormat-1" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="constructor" overload="true" overload-number="1" signature="QVideoFrameFormat(const QSize &amp;size, QVideoFrameFormat::PixelFormat format)">
                <parameter type="const QSize &amp;" name="size" default=""/>
                <parameter type="QVideoFrameFormat::PixelFormat" name="format" default=""/>
            </function>
            <function name="QVideoFrameFormat" fullname="QVideoFrameFormat::QVideoFrameFormat" href="qvideoframeformat.html#QVideoFrameFormat-2" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="copy-constructor" overload="true" overload-number="2" signature="QVideoFrameFormat(const QVideoFrameFormat &amp;other)">
                <parameter type="const QVideoFrameFormat &amp;" name="other" default=""/>
            </function>
            <function name="QVideoFrameFormat" fullname="QVideoFrameFormat::QVideoFrameFormat" href="qvideoframeformat.html#QVideoFrameFormat-3" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="move-constructor" noexcept="true" overload="true" overload-number="3" signature="QVideoFrameFormat(QVideoFrameFormat &amp;&amp;other)">
                <parameter type="QVideoFrameFormat &amp;&amp;" name="other" default=""/>
            </function>
            <function name="colorRange" fullname="QVideoFrameFormat::colorRange" href="qvideoframeformat.html#colorRange" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="QVideoFrameFormat::ColorRange" signature="QVideoFrameFormat::ColorRange colorRange() const"/>
            <function name="colorSpace" fullname="QVideoFrameFormat::colorSpace" href="qvideoframeformat.html#colorSpace" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="QVideoFrameFormat::ColorSpace" signature="QVideoFrameFormat::ColorSpace colorSpace() const"/>
            <function name="colorTransfer" fullname="QVideoFrameFormat::colorTransfer" href="qvideoframeformat.html#colorTransfer" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="QVideoFrameFormat::ColorTransfer" signature="QVideoFrameFormat::ColorTransfer colorTransfer() const"/>
            <function name="frameHeight" fullname="QVideoFrameFormat::frameHeight" href="qvideoframeformat.html#frameHeight" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="int" signature="int frameHeight() const"/>
            <function name="frameRate" fullname="QVideoFrameFormat::frameRate" href="qvideoframeformat.html#frameRate" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="qreal" signature="qreal frameRate() const"/>
            <function name="frameSize" fullname="QVideoFrameFormat::frameSize" href="qvideoframeformat.html#frameSize" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="QSize" signature="QSize frameSize() const"/>
            <function name="frameWidth" fullname="QVideoFrameFormat::frameWidth" href="qvideoframeformat.html#frameWidth" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="int" signature="int frameWidth() const"/>
            <function name="imageFormatFromPixelFormat" fullname="QVideoFrameFormat::imageFormatFromPixelFormat" href="qvideoframeformat.html#imageFormatFromPixelFormat" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" static="true" type="QImage::Format" signature="QImage::Format imageFormatFromPixelFormat(QVideoFrameFormat::PixelFormat format)">
                <parameter type="QVideoFrameFormat::PixelFormat" name="format" default=""/>
            </function>
            <function name="isMirrored" fullname="QVideoFrameFormat::isMirrored" href="qvideoframeformat.html#isMirrored" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="bool" signature="bool isMirrored() const"/>
            <function name="isValid" fullname="QVideoFrameFormat::isValid" href="qvideoframeformat.html#isValid" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="bool" signature="bool isValid() const"/>
            <function name="operator!=" fullname="QVideoFrameFormat::operator!=" href="qvideoframeformat.html#operator-not-eq" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="bool" signature="bool operator!=(const QVideoFrameFormat &amp;other) const">
                <parameter type="const QVideoFrameFormat &amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QVideoFrameFormat::operator=" href="qvideoframeformat.html#operator-eq" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="move-assign" noexcept="true" type="QVideoFrameFormat &amp;" signature="QVideoFrameFormat &amp; operator=(QVideoFrameFormat &amp;&amp;other)">
                <parameter type="QVideoFrameFormat &amp;&amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QVideoFrameFormat::operator=" href="qvideoframeformat.html#operator-eq-1" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="copy-assign" overload="true" overload-number="1" type="QVideoFrameFormat &amp;" signature="QVideoFrameFormat &amp; operator=(const QVideoFrameFormat &amp;other)">
                <parameter type="const QVideoFrameFormat &amp;" name="other" default=""/>
            </function>
            <function name="operator==" fullname="QVideoFrameFormat::operator==" href="qvideoframeformat.html#operator-eq-eq" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="bool" signature="bool operator==(const QVideoFrameFormat &amp;other) const">
                <parameter type="const QVideoFrameFormat &amp;" name="other" default=""/>
            </function>
            <function name="pixelFormat" fullname="QVideoFrameFormat::pixelFormat" href="qvideoframeformat.html#pixelFormat" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="QVideoFrameFormat::PixelFormat" signature="QVideoFrameFormat::PixelFormat pixelFormat() const"/>
            <function name="pixelFormatFromImageFormat" fullname="QVideoFrameFormat::pixelFormatFromImageFormat" href="qvideoframeformat.html#pixelFormatFromImageFormat" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" static="true" type="QVideoFrameFormat::PixelFormat" signature="QVideoFrameFormat::PixelFormat pixelFormatFromImageFormat(QImage::Format format)">
                <parameter type="QImage::Format" name="format" default=""/>
            </function>
            <function name="pixelFormatToString" fullname="QVideoFrameFormat::pixelFormatToString" href="qvideoframeformat.html#pixelFormatToString" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" static="true" type="QString" signature="QString pixelFormatToString(QVideoFrameFormat::PixelFormat pixelFormat)">
                <parameter type="QVideoFrameFormat::PixelFormat" name="pixelFormat" default=""/>
            </function>
            <function name="planeCount" fullname="QVideoFrameFormat::planeCount" href="qvideoframeformat.html#planeCount" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="int" signature="int planeCount() const"/>
            <function name="scanLineDirection" fullname="QVideoFrameFormat::scanLineDirection" href="qvideoframeformat.html#scanLineDirection" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="QVideoFrameFormat::Direction" signature="QVideoFrameFormat::Direction scanLineDirection() const"/>
            <function name="setColorRange" fullname="QVideoFrameFormat::setColorRange" href="qvideoframeformat.html#setColorRange" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" type="void" signature="void setColorRange(QVideoFrameFormat::ColorRange range)">
                <parameter type="QVideoFrameFormat::ColorRange" name="range" default=""/>
            </function>
            <function name="setColorSpace" fullname="QVideoFrameFormat::setColorSpace" href="qvideoframeformat.html#setColorSpace" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" type="void" signature="void setColorSpace(QVideoFrameFormat::ColorSpace colorSpace)">
                <parameter type="QVideoFrameFormat::ColorSpace" name="colorSpace" default=""/>
            </function>
            <function name="setColorTransfer" fullname="QVideoFrameFormat::setColorTransfer" href="qvideoframeformat.html#setColorTransfer" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" type="void" signature="void setColorTransfer(QVideoFrameFormat::ColorTransfer colorTransfer)">
                <parameter type="QVideoFrameFormat::ColorTransfer" name="colorTransfer" default=""/>
            </function>
            <function name="setFrameRate" fullname="QVideoFrameFormat::setFrameRate" href="qvideoframeformat.html#setFrameRate" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" type="void" signature="void setFrameRate(qreal rate)">
                <parameter type="qreal" name="rate" default=""/>
            </function>
            <function name="setFrameSize" fullname="QVideoFrameFormat::setFrameSize" href="qvideoframeformat.html#setFrameSize" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" type="void" signature="void setFrameSize(const QSize &amp;size)">
                <parameter type="const QSize &amp;" name="size" default=""/>
            </function>
            <function name="setFrameSize" fullname="QVideoFrameFormat::setFrameSize" href="qvideoframeformat.html#setFrameSize-1" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void setFrameSize(int width, int height)">
                <parameter type="int" name="width" default=""/>
                <parameter type="int" name="height" default=""/>
            </function>
            <function name="setMaxLuminance" fullname="QVideoFrameFormat::setMaxLuminance" href="qvideoframeformat.html#setMaxLuminance" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" type="void" signature="void setMaxLuminance(float lum)">
                <parameter type="float" name="lum" default=""/>
            </function>
            <function name="setMirrored" fullname="QVideoFrameFormat::setMirrored" href="qvideoframeformat.html#setMirrored" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" type="void" signature="void setMirrored(bool mirrored)">
                <parameter type="bool" name="mirrored" default=""/>
            </function>
            <function name="setScanLineDirection" fullname="QVideoFrameFormat::setScanLineDirection" href="qvideoframeformat.html#setScanLineDirection" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" type="void" signature="void setScanLineDirection(QVideoFrameFormat::Direction direction)">
                <parameter type="QVideoFrameFormat::Direction" name="direction" default=""/>
            </function>
            <function name="setViewport" fullname="QVideoFrameFormat::setViewport" href="qvideoframeformat.html#setViewport" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" type="void" signature="void setViewport(const QRect &amp;viewport)">
                <parameter type="const QRect &amp;" name="viewport" default=""/>
            </function>
            <function name="setYCbCrColorSpace" fullname="QVideoFrameFormat::setYCbCrColorSpace" href="qvideoframeformat-obsolete.html#setYCbCrColorSpace" status="deprecated" access="public" location="qvideoframeformat.h" documented="true" meta="plain" type="void" signature="void setYCbCrColorSpace(QVideoFrameFormat::YCbCrColorSpace space)">
                <parameter type="QVideoFrameFormat::YCbCrColorSpace" name="space" default=""/>
            </function>
            <function name="swap" fullname="QVideoFrameFormat::swap" href="qvideoframeformat.html#swap" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QVideoFrameFormat &amp;other)">
                <parameter type="QVideoFrameFormat &amp;" name="other" default=""/>
            </function>
            <function name="viewport" fullname="QVideoFrameFormat::viewport" href="qvideoframeformat.html#viewport" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="QRect" signature="QRect viewport() const"/>
            <function name="yCbCrColorSpace" fullname="QVideoFrameFormat::yCbCrColorSpace" href="qvideoframeformat-obsolete.html#yCbCrColorSpace" status="deprecated" access="public" location="qvideoframeformat.h" documented="true" meta="plain" const="true" type="QVideoFrameFormat::YCbCrColorSpace" signature="QVideoFrameFormat::YCbCrColorSpace yCbCrColorSpace() const"/>
            <function name="~QVideoFrameFormat" fullname="QVideoFrameFormat::~QVideoFrameFormat" href="qvideoframeformat.html#dtor.QVideoFrameFormat" status="active" access="public" location="qvideoframeformat.h" documented="true" meta="destructor" noexcept="true" signature="~QVideoFrameFormat()"/>
            <enum name="ColorRange" fullname="QVideoFrameFormat::ColorRange" href="qvideoframeformat.html#ColorRange-enum" status="active" access="public" location="qvideoframeformat.h" documented="true">
                <value name="ColorRange_Unknown" value="0"/>
                <value name="ColorRange_Video" value="1"/>
                <value name="ColorRange_Full" value="2"/>
            </enum>
            <enum name="ColorSpace" fullname="QVideoFrameFormat::ColorSpace" href="qvideoframeformat.html#ColorSpace-enum" status="active" access="public" location="qvideoframeformat.h" documented="true">
                <value name="ColorSpace_Undefined" value="0"/>
                <value name="ColorSpace_BT601" value="1"/>
                <value name="ColorSpace_BT709" value="2"/>
                <value name="ColorSpace_AdobeRgb" value="5"/>
                <value name="ColorSpace_BT2020" value="6"/>
            </enum>
            <enum name="ColorTransfer" fullname="QVideoFrameFormat::ColorTransfer" href="qvideoframeformat.html#ColorTransfer-enum" status="active" access="public" location="qvideoframeformat.h" documented="true">
                <value name="ColorTransfer_Unknown" value="0"/>
                <value name="ColorTransfer_BT709" value="1"/>
                <value name="ColorTransfer_BT601" value="2"/>
                <value name="ColorTransfer_Linear" value="3"/>
                <value name="ColorTransfer_Gamma22" value="4"/>
                <value name="ColorTransfer_Gamma28" value="5"/>
                <value name="ColorTransfer_ST2084" value="6"/>
                <value name="ColorTransfer_STD_B67" value="7"/>
            </enum>
            <enum name="Direction" fullname="QVideoFrameFormat::Direction" href="qvideoframeformat.html#Direction-enum" status="active" access="public" location="qvideoframeformat.h" documented="true">
                <value name="TopToBottom" value="0"/>
                <value name="BottomToTop" value="1"/>
            </enum>
            <enum name="PixelFormat" fullname="QVideoFrameFormat::PixelFormat" href="qvideoframeformat.html#PixelFormat-enum" status="active" access="public" location="qvideoframeformat.h" documented="true">
                <value name="Format_Invalid" value="0"/>
                <value name="Format_ARGB8888" value="1"/>
                <value name="Format_ARGB8888_Premultiplied" value="2"/>
                <value name="Format_XRGB8888" value="3"/>
                <value name="Format_BGRA8888" value="4"/>
                <value name="Format_BGRA8888_Premultiplied" value="5"/>
                <value name="Format_BGRX8888" value="6"/>
                <value name="Format_ABGR8888" value="7"/>
                <value name="Format_XBGR8888" value="8"/>
                <value name="Format_RGBA8888" value="9"/>
                <value name="Format_RGBX8888" value="10"/>
                <value name="Format_AYUV" value="11"/>
                <value name="Format_AYUV_Premultiplied" value="12"/>
                <value name="Format_YUV420P" value="13"/>
                <value name="Format_YUV422P" value="14"/>
                <value name="Format_YV12" value="15"/>
                <value name="Format_UYVY" value="16"/>
                <value name="Format_YUYV" value="17"/>
                <value name="Format_NV12" value="18"/>
                <value name="Format_NV21" value="19"/>
                <value name="Format_IMC1" value="20"/>
                <value name="Format_IMC2" value="21"/>
                <value name="Format_IMC3" value="22"/>
                <value name="Format_IMC4" value="23"/>
                <value name="Format_Y8" value="24"/>
                <value name="Format_Y16" value="25"/>
                <value name="Format_P010" value="26"/>
                <value name="Format_P016" value="27"/>
                <value name="Format_SamplerExternalOES" value="28"/>
                <value name="Format_Jpeg" value="29"/>
                <value name="Format_SamplerRect" value="30"/>
                <value name="Format_YUV420P10" value="31"/>
            </enum>
            <enum name="YCbCrColorSpace" fullname="QVideoFrameFormat::YCbCrColorSpace" href="qvideoframeformat-obsolete.html#YCbCrColorSpace-enum" status="deprecated" access="public" location="qvideoframeformat.h" documented="true">
                <value name="YCbCr_Undefined" value="0"/>
                <value name="YCbCr_BT601" value="1"/>
                <value name="YCbCr_BT709" value="2"/>
                <value name="YCbCr_xvYCC601" value="3"/>
                <value name="YCbCr_xvYCC709" value="4"/>
                <value name="YCbCr_JPEG" value="5"/>
                <value name="YCbCr_BT2020" value="6"/>
            </enum>
        </class>
        <class name="QVideoSink" href="qvideosink.html" status="active" access="public" location="qvideosink.h" documented="true" groups="multimedia,multimedia_video" bases="QObject" module="QtMultimedia" brief="Represents a generic sink for video data">
            <function name="QVideoSink" fullname="QVideoSink::QVideoSink" href="qvideosink.html#QVideoSink" status="active" access="public" location="qvideosink.h" documented="true" meta="constructor" signature="QVideoSink(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="rhi" fullname="QVideoSink::rhi" href="qvideosink.html#rhi" status="active" access="public" location="qvideosink.h" documented="true" meta="plain" const="true" type="QRhi *" signature="QRhi * rhi() const"/>
            <function name="setSubtitleText" fullname="QVideoSink::setSubtitleText" href="qvideosink.html#setSubtitleText" status="active" access="public" location="qvideosink.h" documented="true" meta="plain" associated-property="subtitleText" type="void" signature="void setSubtitleText(const QString &amp;subtitle)">
                <parameter type="const QString &amp;" name="subtitle" default=""/>
            </function>
            <function name="setVideoFrame" fullname="QVideoSink::setVideoFrame" href="qvideosink.html#setVideoFrame" status="active" access="public" location="qvideosink.h" documented="true" meta="plain" type="void" signature="void setVideoFrame(const QVideoFrame &amp;frame)">
                <parameter type="const QVideoFrame &amp;" name="frame" default=""/>
            </function>
            <function name="subtitleText" fullname="QVideoSink::subtitleText" href="qvideosink.html#subtitleText-prop" status="active" access="public" location="qvideosink.h" meta="plain" const="true" associated-property="subtitleText" type="QString" signature="QString subtitleText() const"/>
            <function name="subtitleTextChanged" fullname="QVideoSink::subtitleTextChanged" href="qvideosink.html#subtitleText-prop" status="active" access="public" location="qvideosink.h" meta="signal" const="true" associated-property="subtitleText" type="void" signature="void subtitleTextChanged(const QString &amp;subtitleText) const">
                <parameter type="const QString &amp;" name="subtitleText" default=""/>
            </function>
            <function name="videoFrame" fullname="QVideoSink::videoFrame" href="qvideosink.html#videoFrame" status="active" access="public" location="qvideosink.h" documented="true" meta="plain" const="true" type="QVideoFrame" signature="QVideoFrame videoFrame() const"/>
            <function name="videoFrameChanged" fullname="QVideoSink::videoFrameChanged" href="qvideosink.html#videoFrameChanged" status="active" access="public" location="qvideosink.h" documented="true" meta="signal" const="true" type="void" signature="void videoFrameChanged(const QVideoFrame &amp;frame) const">
                <parameter type="const QVideoFrame &amp;" name="frame" default=""/>
            </function>
            <function name="videoSize" fullname="QVideoSink::videoSize" href="qvideosink.html#videoSize-prop" status="active" access="public" location="qvideosink.h" meta="plain" const="true" associated-property="videoSize" type="QSize" signature="QSize videoSize() const"/>
            <function name="videoSizeChanged" fullname="QVideoSink::videoSizeChanged" href="qvideosink.html#videoSize-prop" status="active" access="public" location="qvideosink.h" meta="signal" associated-property="videoSize" type="void" signature="void videoSizeChanged()"/>
            <function name="~QVideoSink" fullname="QVideoSink::~QVideoSink" href="qvideosink.html#dtor.QVideoSink" status="active" access="public" location="qvideosink.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QVideoSink()"/>
            <property name="subtitleText" fullname="QVideoSink::subtitleText" href="qvideosink.html#subtitleText-prop" status="active" access="public" location="qvideosink.h" documented="true">
                <getter name="subtitleText"/>
                <setter name="setSubtitleText"/>
                <notifier name="subtitleTextChanged"/>
            </property>
            <property name="videoSize" fullname="QVideoSink::videoSize" href="qvideosink.html#videoSize-prop" status="active" access="public" location="qvideosink.h" documented="true" writable="false">
                <getter name="videoSize"/>
                <notifier name="videoSizeChanged"/>
            </property>
        </class>
        <class name="QVideoWidget" href="qvideowidget.html" status="active" access="public" location="qvideowidget.h" documented="true" groups="multimedia,multimedia_video" bases="QWidget" module="QtMultimediaWidgets" brief="Widget which presents video produced by a media object">
            <function name="QVideoWidget" fullname="QVideoWidget::QVideoWidget" href="qvideowidget.html#QVideoWidget" status="active" access="public" location="qvideowidget.h" documented="true" meta="constructor" explicit="true" signature="QVideoWidget(QWidget *parent)">
                <parameter type="QWidget *" name="parent" default="nullptr"/>
            </function>
            <function name="aspectRatioMode" fullname="QVideoWidget::aspectRatioMode" href="qvideowidget.html#aspectRatioMode-prop" status="active" access="public" location="qvideowidget.h" meta="plain" const="true" associated-property="aspectRatioMode" type="Qt::AspectRatioMode" signature="Qt::AspectRatioMode aspectRatioMode() const"/>
            <function name="aspectRatioModeChanged" fullname="QVideoWidget::aspectRatioModeChanged" href="qvideowidget.html#aspectRatioMode-prop" status="active" access="public" location="qvideowidget.h" meta="signal" associated-property="aspectRatioMode" type="void" signature="void aspectRatioModeChanged(Qt::AspectRatioMode mode)">
                <parameter type="Qt::AspectRatioMode" name="mode" default=""/>
            </function>
            <function name="event" fullname="QVideoWidget::event" href="qvideowidget.html#event" status="active" access="protected" location="qvideowidget.h" documented="true" meta="plain" virtual="virtual" override="true" type="bool" signature="bool event(QEvent *event) override">
                <parameter type="QEvent *" name="event" default=""/>
            </function>
            <function name="fullScreenChanged" fullname="QVideoWidget::fullScreenChanged" href="qvideowidget.html#fullScreen-prop" status="active" access="public" location="qvideowidget.h" meta="signal" associated-property="fullScreen" type="void" signature="void fullScreenChanged(bool fullScreen)">
                <parameter type="bool" name="fullScreen" default=""/>
            </function>
            <function name="hideEvent" fullname="QVideoWidget::hideEvent" href="qvideowidget.html#hideEvent" status="active" access="protected" location="qvideowidget.h" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void hideEvent(QHideEvent *event) override">
                <parameter type="QHideEvent *" name="event" default=""/>
            </function>
            <function name="isFullScreen" fullname="QVideoWidget::isFullScreen" href="qvideowidget.html#fullScreen-prop" status="active" access="public" location="qvideowidget.h" meta="plain" const="true" associated-property="fullScreen" type="bool" signature="bool isFullScreen() const"/>
            <function name="moveEvent" fullname="QVideoWidget::moveEvent" href="qvideowidget.html#moveEvent" status="active" access="protected" location="qvideowidget.h" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void moveEvent(QMoveEvent *event) override">
                <parameter type="QMoveEvent *" name="event" default=""/>
            </function>
            <function name="resizeEvent" fullname="QVideoWidget::resizeEvent" href="qvideowidget.html#resizeEvent" status="active" access="protected" location="qvideowidget.h" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void resizeEvent(QResizeEvent *event) override">
                <parameter type="QResizeEvent *" name="event" default=""/>
            </function>
            <function name="setAspectRatioMode" fullname="QVideoWidget::setAspectRatioMode" href="qvideowidget.html#aspectRatioMode-prop" status="active" access="public" location="qvideowidget.h" meta="slot" associated-property="aspectRatioMode" type="void" signature="void setAspectRatioMode(Qt::AspectRatioMode mode)">
                <parameter type="Qt::AspectRatioMode" name="mode" default=""/>
            </function>
            <function name="setFullScreen" fullname="QVideoWidget::setFullScreen" href="qvideowidget.html#fullScreen-prop" status="active" access="public" location="qvideowidget.h" meta="slot" associated-property="fullScreen" type="void" signature="void setFullScreen(bool fullScreen)">
                <parameter type="bool" name="fullScreen" default=""/>
            </function>
            <function name="showEvent" fullname="QVideoWidget::showEvent" href="qvideowidget.html#showEvent" status="active" access="protected" location="qvideowidget.h" documented="true" meta="plain" virtual="virtual" override="true" type="void" signature="void showEvent(QShowEvent *event) override">
                <parameter type="QShowEvent *" name="event" default=""/>
            </function>
            <function name="sizeHint" fullname="QVideoWidget::sizeHint" href="qvideowidget.html#sizeHint" status="active" access="public" location="qvideowidget.h" documented="true" meta="plain" virtual="virtual" const="true" override="true" type="QSize" signature="QSize sizeHint() const override"/>
            <function name="videoSink" fullname="QVideoWidget::videoSink" href="qvideowidget.html#videoSink" status="active" access="public" location="qvideowidget.h" documented="true" meta="plain" const="true" type="QVideoSink *" signature="QVideoSink * videoSink() const"/>
            <function name="~QVideoWidget" fullname="QVideoWidget::~QVideoWidget" href="qvideowidget.html#dtor.QVideoWidget" status="active" access="public" location="qvideowidget.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QVideoWidget()"/>
            <property name="aspectRatioMode" fullname="QVideoWidget::aspectRatioMode" href="qvideowidget.html#aspectRatioMode-prop" status="active" access="public" location="qvideowidget.h" documented="true" brief="How video is scaled with respect to its aspect ratio">
                <getter name="aspectRatioMode"/>
                <setter name="setAspectRatioMode"/>
                <notifier name="aspectRatioModeChanged"/>
            </property>
            <property name="fullScreen" fullname="QVideoWidget::fullScreen" href="qvideowidget.html#fullScreen-prop" status="active" access="public" location="qvideowidget.h" documented="true" brief="Whether video display is confined to a window or is fullScreen">
                <getter name="isFullScreen"/>
                <setter name="setFullScreen"/>
                <notifier name="fullScreenChanged"/>
            </property>
        </class>
        <class name="QWindowCapture" href="qwindowcapture.html" status="active" access="public" location="qwindowcapture.h" since="6.6" documented="true" groups="multimedia,multimedia_video" bases="QObject" module="QtMultimedia" brief="This class is used for capturing a window">
            <function name="QWindowCapture" fullname="QWindowCapture::QWindowCapture" href="qwindowcapture.html#QWindowCapture" status="active" access="public" location="qwindowcapture.h" documented="true" meta="constructor" explicit="true" signature="QWindowCapture(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="activeChanged" fullname="QWindowCapture::activeChanged" href="qwindowcapture.html#active-prop" status="active" access="public" location="qwindowcapture.h" meta="signal" associated-property="active" type="void" signature="void activeChanged(bool)">
                <parameter type="bool" name="" default=""/>
            </function>
            <function name="capturableWindows" fullname="QWindowCapture::capturableWindows" href="qwindowcapture.html#capturableWindows" status="active" access="public" location="qwindowcapture.h" documented="true" meta="plain" static="true" type="QList&lt;QCapturableWindow&gt;" signature="QList&lt;QCapturableWindow&gt; capturableWindows()"/>
            <function name="error" fullname="QWindowCapture::error" href="qwindowcapture.html#error-prop" status="active" access="public" location="qwindowcapture.h" meta="plain" const="true" associated-property="error" type="QWindowCapture::Error" signature="QWindowCapture::Error error() const"/>
            <function name="errorChanged" fullname="QWindowCapture::errorChanged" href="qwindowcapture.html#errorChanged" status="active" access="public" location="qwindowcapture.h" meta="signal" associated-property="error,errorString" type="void" signature="void errorChanged()"/>
            <function name="errorOccurred" fullname="QWindowCapture::errorOccurred" href="qwindowcapture.html#errorOccurred" status="active" access="public" location="qwindowcapture.h" documented="true" meta="signal" type="void" signature="void errorOccurred(QWindowCapture::Error error, const QString &amp;errorString)">
                <parameter type="QWindowCapture::Error" name="error" default=""/>
                <parameter type="const QString &amp;" name="errorString" default=""/>
            </function>
            <function name="errorString" fullname="QWindowCapture::errorString" href="qwindowcapture.html#errorString-prop" status="active" access="public" location="qwindowcapture.h" meta="plain" const="true" associated-property="errorString" type="QString" signature="QString errorString() const"/>
            <function name="isActive" fullname="QWindowCapture::isActive" href="qwindowcapture.html#active-prop" status="active" access="public" location="qwindowcapture.h" meta="plain" const="true" associated-property="active" type="bool" signature="bool isActive() const"/>
            <function name="setActive" fullname="QWindowCapture::setActive" href="qwindowcapture.html#active-prop" status="active" access="public" location="qwindowcapture.h" meta="slot" associated-property="active" type="void" signature="void setActive(bool active)">
                <parameter type="bool" name="active" default=""/>
            </function>
            <function name="setWindow" fullname="QWindowCapture::setWindow" href="qwindowcapture.html#window-prop" status="active" access="public" location="qwindowcapture.h" meta="plain" associated-property="window" type="void" signature="void setWindow(QCapturableWindow window)">
                <parameter type="QCapturableWindow" name="window" default=""/>
            </function>
            <function name="start" fullname="QWindowCapture::start" href="qwindowcapture.html#start" status="active" access="public" location="qwindowcapture.h" documented="true" meta="slot" type="void" signature="void start()"/>
            <function name="stop" fullname="QWindowCapture::stop" href="qwindowcapture.html#stop" status="active" access="public" location="qwindowcapture.h" documented="true" meta="slot" type="void" signature="void stop()"/>
            <function name="window" fullname="QWindowCapture::window" href="qwindowcapture.html#window-prop" status="active" access="public" location="qwindowcapture.h" meta="plain" const="true" associated-property="window" type="QCapturableWindow" signature="QCapturableWindow window() const"/>
            <function name="windowChanged" fullname="QWindowCapture::windowChanged" href="qwindowcapture.html#window-prop" status="active" access="public" location="qwindowcapture.h" meta="signal" associated-property="window" type="void" signature="void windowChanged(QCapturableWindow window)">
                <parameter type="QCapturableWindow" name="window" default=""/>
            </function>
            <function name="~QWindowCapture" fullname="QWindowCapture::~QWindowCapture" href="qwindowcapture.html#dtor.QWindowCapture" status="active" access="public" location="qwindowcapture.h" documented="true" meta="destructor" virtual="virtual" override="true" noexcept="true" signature="~QWindowCapture() override"/>
            <enum name="Error" fullname="QWindowCapture::Error" href="qwindowcapture.html#Error-enum" status="active" access="public" location="qwindowcapture.h" documented="true">
                <value name="NoError" value="0"/>
                <value name="InternalError" value="1"/>
                <value name="CapturingNotSupported" value="2"/>
                <value name="CaptureFailed" value="4"/>
                <value name="NotFound" value="5"/>
            </enum>
            <property name="active" fullname="QWindowCapture::active" href="qwindowcapture.html#active-prop" status="active" access="public" location="qwindowcapture.h" documented="true" brief="Whether the capturing is currently active">
                <getter name="isActive"/>
                <setter name="setActive"/>
                <notifier name="activeChanged"/>
            </property>
            <property name="error" fullname="QWindowCapture::error" href="qwindowcapture.html#error-prop" status="active" access="public" location="qwindowcapture.h" documented="true" writable="false" brief="The code of the last error">
                <getter name="error"/>
                <notifier name="errorChanged"/>
            </property>
            <property name="errorString" fullname="QWindowCapture::errorString" href="qwindowcapture.html#errorString-prop" status="active" access="public" location="qwindowcapture.h" documented="true" writable="false" brief="Human readable string describing the cause of error">
                <getter name="errorString"/>
                <notifier name="errorChanged"/>
            </property>
            <property name="window" fullname="QWindowCapture::window" href="qwindowcapture.html#window-prop" status="active" access="public" location="qwindowcapture.h" documented="true" brief="The window for capturing">
                <getter name="window"/>
                <setter name="setWindow"/>
                <notifier name="windowChanged"/>
            </property>
        </class>
        <page name="qtmultimedia-index.html" href="qtmultimedia-index.html" status="active" location="qtmultimedia-index.qdoc" documented="true" subtype="page" title="Qt Multimedia" fulltitle="Qt Multimedia" subtitle="" brief="Qt Multimedia module provides APIs for playing back and recording audiovisual content">
            <contents name="getting-started" title="Getting started" level="1"/>
            <contents name="overviews-and-important-topics" title="Overviews and important topics" level="1"/>
            <contents name="qml-types" title="QML types" level="1"/>
            <contents name="c-classes" title="C++ classes" level="1"/>
            <contents name="licenses-and-attributions" title="Licenses and attributions" level="1"/>
            <contents name="target-platform-and-backend-notes" title="Target platform and backend notes" level="1"/>
            <contents name="backends" title="Backends" level="2"/>
            <contents name="ffmpeg-as-the-default-backend" title="FFmpeg as the default backend" level="3"/>
            <contents name="native-backends" title="Native backends" level="3"/>
            <contents name="backend-support" title="Backend support" level="2"/>
            <contents name="changing-backends" title="Changing backends" level="2"/>
            <contents name="target-platform-notes" title="Target platform notes" level="2"/>
            <contents name="permissions" title="Permissions" level="1"/>
            <contents name="reference-and-examples" title="Reference and examples" level="1"/>
        </page>
        <page name="qtmultimedia-modules.html" href="qtmultimedia-modules.html" status="active" location="qtmultimedia-cpp.qdoc" documented="true" subtype="page" title="Qt Multimedia C++ Classes" fulltitle="Qt Multimedia C++ Classes" subtitle="" brief="Provides C++ class for multimedia use cases">
            <contents name="namespaces" title="Namespaces" level="1"/>
            <contents name="classes" title="Classes" level="1"/>
            <contents name="qt-multimedia-module" title="Qt Multimedia Module" level="2"/>
            <contents name="qt-multimedia-widgets-module" title="Qt Multimedia Widgets Module" level="2"/>
            <contents name="qt-spatial-audio-module" title="Qt Spatial Audio Module" level="2"/>
        </page>
        <page name="qtmultimediawidgets-index.html" href="qtmultimediawidgets-index.html" status="active" location="qtmultimediawidgets-index.qdoc" documented="true" subtype="page" title="Qt Multimedia Widgets" fulltitle="Qt Multimedia Widgets" subtitle="" brief="An add-on module which provides multimedia-related widgets">
            <contents name="getting-started" title="Getting Started" level="1"/>
            <contents name="references" title="References" level="1"/>
            <contents name="examples" title="Examples" level="1"/>
        </page>
        <page name="qtmultimedia-wasm.html" href="qtmultimedia-wasm.html" status="active" location="platform-notes-wasm.qdoc" documented="true" subtype="page" title="Qt Multimedia on WebAssembly" fulltitle="Qt Multimedia on WebAssembly" subtitle="" brief="Platform notes for WebAssembly">
            <contents name="limitations" title="Limitations" level="1"/>
        </page>
        <page name="qtmultimedia-apple.html" href="qtmultimedia-apple.html" status="active" location="platform-notes-apple.qdoc" documented="true" subtype="page" title="Qt Multimedia on macOS and iOS" fulltitle="Qt Multimedia on macOS and iOS" subtitle="" brief="Platform notes for iOS">
            <contents name="limitations" title="Limitations" level="1"/>
        </page>
        <namespace name="QtAudio" href="qtaudio.html" status="active" access="public" location="qaudio.h" documented="true" groups="multimedia,multimedia-namespaces,multimedia_audio" module="QtMultimedia" brief="Contains enums used by the audio classes">
            <function name="convertVolume" fullname="QtAudio::convertVolume" href="qtaudio.html#convertVolume" status="active" access="public" location="qaudio.h" documented="true" meta="plain" type="float" signature="float convertVolume(float volume, QtAudio::VolumeScale from, QtAudio::VolumeScale to)">
                <parameter type="float" name="volume" default=""/>
                <parameter type="QtAudio::VolumeScale" name="from" default=""/>
                <parameter type="QtAudio::VolumeScale" name="to" default=""/>
            </function>
            <enum name="Error" fullname="QtAudio::Error" href="qtaudio.html#Error-enum" status="active" access="public" location="qaudio.h" documented="true">
                <value name="NoError" value="0"/>
                <value name="OpenError" value="1"/>
                <value name="IOError" value="2"/>
                <value name="UnderrunError" value="3"/>
                <value name="FatalError" value="4"/>
            </enum>
            <enum name="State" fullname="QtAudio::State" href="qtaudio.html#State-enum" status="active" access="public" location="qaudio.h" documented="true">
                <value name="ActiveState" value="0"/>
                <value name="SuspendedState" value="1"/>
                <value name="StoppedState" value="2"/>
                <value name="IdleState" value="3"/>
            </enum>
            <enum name="VolumeScale" fullname="QtAudio::VolumeScale" href="qtaudio.html#VolumeScale-enum" status="active" access="public" location="qaudio.h" documented="true">
                <value name="LinearVolumeScale" value="0"/>
                <value name="CubicVolumeScale" value="1"/>
                <value name="LogarithmicVolumeScale" value="2"/>
                <value name="DecibelVolumeScale" value="3"/>
            </enum>
        </namespace>
        <namespace name="QtVideo" href="qtvideo.html" status="active" access="public" location="qtvideo.h" since="6.7" documented="true" module="QtMultimedia" brief="Enumerations for camera and video functionality">
            <enum name="Rotation" fullname="QtVideo::Rotation" href="qtvideo.html#Rotation-enum" status="active" access="public" location="qtvideo.h" since="6.7" documented="true" scoped="true">
                <value name="None" value="0"/>
                <value name="Clockwise90" value="90"/>
                <value name="Clockwise180" value="180"/>
                <value name="Clockwise270" value="270"/>
            </enum>
        </namespace>
        <page name="https://en.wikipedia.org/wiki/QuickTime" href="https://en.wikipedia.org/wiki/QuickTime" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="QuickTime" fulltitle="QuickTime" subtitle=""/>
        <page name="screencapture" href="qtmultimedia-screencapture-example.html" status="active" location="screencapture.qdoc" documented="true" groups="category Multimedia,multimedia_examples" subtype="example" title="Screen Capture Example" fulltitle="Screen Capture Example" subtitle="" brief="Capturing a screen or window">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <contents name="application-structure" title="Application Structure" level="1"/>
            <page name="screencapture/screencapturepreview.cpp" href="qtmultimedia-screencapture-screencapturepreview-cpp.html" status="active" subtype="file" title="" fulltitle="screencapturepreview.cpp Example File" subtitle="screencapture/screencapturepreview.cpp"/>
            <page name="screencapture/screencapturepreview.h" href="qtmultimedia-screencapture-screencapturepreview-h.html" status="active" subtype="file" title="" fulltitle="screencapturepreview.h Example File" subtitle="screencapture/screencapturepreview.h"/>
            <page name="screencapture/screenlistmodel.cpp" href="qtmultimedia-screencapture-screenlistmodel-cpp.html" status="active" subtype="file" title="" fulltitle="screenlistmodel.cpp Example File" subtitle="screencapture/screenlistmodel.cpp"/>
            <page name="screencapture/screenlistmodel.h" href="qtmultimedia-screencapture-screenlistmodel-h.html" status="active" subtype="file" title="" fulltitle="screenlistmodel.h Example File" subtitle="screencapture/screenlistmodel.h"/>
            <page name="screencapture/windowlistmodel.cpp" href="qtmultimedia-screencapture-windowlistmodel-cpp.html" status="active" subtype="file" title="" fulltitle="windowlistmodel.cpp Example File" subtitle="screencapture/windowlistmodel.cpp"/>
            <page name="screencapture/windowlistmodel.h" href="qtmultimedia-screencapture-windowlistmodel-h.html" status="active" subtype="file" title="" fulltitle="windowlistmodel.h Example File" subtitle="screencapture/windowlistmodel.h"/>
            <page name="screencapture/main.cpp" href="qtmultimedia-screencapture-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="screencapture/main.cpp"/>
            <page name="screencapture/CMakeLists.txt" href="qtmultimedia-screencapture-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="screencapture/CMakeLists.txt"/>
            <page name="screencapture/screencapture.pro" href="qtmultimedia-screencapture-screencapture-pro.html" status="active" subtype="file" title="" fulltitle="screencapture.pro Example File" subtitle="screencapture/screencapture.pro"/>
        </page>
        <qmlclass name="ScreenCapture" qml-module-name="QtMultimedia" fullname="QtMultimedia.ScreenCapture" href="qml-qtmultimedia-screencapture.html" status="active" access="public" since="6.5" documented="true" groups="multimedia_qml,multimedia_video_qml" title="ScreenCapture" fulltitle="ScreenCapture" subtitle="" brief="This type is used for capturing a screen">
            <contents name="screen-capture-limitations" title="Screen Capture Limitations" level="1"/>
            <qmlproperty name="active" fullname="QtMultimedia.ScreenCapture.active" href="qml-qtmultimedia-screencapture.html#active-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="error" fullname="QtMultimedia.ScreenCapture.error" href="qml-qtmultimedia-screencapture.html#error-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="false"/>
            <qmlproperty name="errorString" fullname="QtMultimedia.ScreenCapture.errorString" href="qml-qtmultimedia-screencapture.html#errorString-prop" status="active" access="public" documented="true" type="string" attached="false" writable="false"/>
            <qmlproperty name="screen" fullname="QtMultimedia.ScreenCapture.screen" href="qml-qtmultimedia-screencapture.html#screen-prop" status="active" access="public" documented="true" type="Screen" attached="false" writable="true"/>
        </qmlclass>
        <page name="https://en.wikipedia.org/wiki/Sonification" href="https://en.wikipedia.org/wiki/Sonification" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Sonification" fulltitle="Sonification" subtitle=""/>
        <qmlclass name="SoundEffect" qml-module-name="QtMultimedia" fullname="QtMultimedia.SoundEffect" href="qml-qtmultimedia-soundeffect.html" status="active" access="public" documented="true" groups="multimedia_audio_qml,multimedia_qml" title="SoundEffect" fulltitle="SoundEffect" subtitle="" brief="Type provides a way to play sound effects in QML">
            <function name="isLoaded" fullname="QtMultimedia.SoundEffect.isLoaded" href="qml-qtmultimedia-soundeffect.html#isLoaded-method" status="active" access="public" documented="true" meta="qmlmethod" type="bool"/>
            <function name="loadedChanged" fullname="QtMultimedia.SoundEffect.loadedChanged" href="qml-qtmultimedia-soundeffect.html#loadedChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="loopCountChanged" fullname="QtMultimedia.SoundEffect.loopCountChanged" href="qml-qtmultimedia-soundeffect.html#loopCountChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="loopsRemainingChanged" fullname="QtMultimedia.SoundEffect.loopsRemainingChanged" href="qml-qtmultimedia-soundeffect.html#loopsRemainingChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="mutedChanged" fullname="QtMultimedia.SoundEffect.mutedChanged" href="qml-qtmultimedia-soundeffect.html#mutedChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="play" fullname="QtMultimedia.SoundEffect.play" href="qml-qtmultimedia-soundeffect.html#play-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="playingChanged" fullname="QtMultimedia.SoundEffect.playingChanged" href="qml-qtmultimedia-soundeffect.html#playingChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="sourceChanged" fullname="QtMultimedia.SoundEffect.sourceChanged" href="qml-qtmultimedia-soundeffect.html#sourceChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="statusChanged" fullname="QtMultimedia.SoundEffect.statusChanged" href="qml-qtmultimedia-soundeffect.html#statusChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <function name="stop" fullname="QtMultimedia.SoundEffect.stop" href="qml-qtmultimedia-soundeffect.html#stop-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="volumeChanged" fullname="QtMultimedia.SoundEffect.volumeChanged" href="qml-qtmultimedia-soundeffect.html#volumeChanged-signal" status="active" access="public" documented="true" meta="qmlsignal"/>
            <qmlproperty name="loops" fullname="QtMultimedia.SoundEffect.loops" href="qml-qtmultimedia-soundeffect.html#loops-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="loopsRemaining" fullname="QtMultimedia.SoundEffect.loopsRemaining" href="qml-qtmultimedia-soundeffect.html#loopsRemaining-prop" status="active" access="public" documented="true" type="int" attached="false" writable="false"/>
            <qmlproperty name="muted" fullname="QtMultimedia.SoundEffect.muted" href="qml-qtmultimedia-soundeffect.html#muted-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="playing" fullname="QtMultimedia.SoundEffect.playing" href="qml-qtmultimedia-soundeffect.html#playing-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="false"/>
            <qmlproperty name="source" fullname="QtMultimedia.SoundEffect.source" href="qml-qtmultimedia-soundeffect.html#source-prop" status="active" access="public" documented="true" type="url" attached="false" writable="true"/>
            <qmlproperty name="status" fullname="QtMultimedia.SoundEffect.status" href="qml-qtmultimedia-soundeffect.html#status-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="false"/>
            <qmlproperty name="volume" fullname="QtMultimedia.SoundEffect.volume" href="qml-qtmultimedia-soundeffect.html#volume-prop" status="active" access="public" documented="true" type="qreal" attached="false" writable="true"/>
        </qmlclass>
        <page name="spectrum" href="qtmultimedia-spectrum-example.html" status="active" location="spectrum.qdoc" documented="true" groups="category Multimedia,multimedia_examples" subtype="example" title="Spectrum Example" fulltitle="Spectrum Example" subtitle="" brief="Analyzing a raw audio stream using the FFTReal library">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page name="spectrum/engine.cpp" href="qtmultimedia-spectrum-engine-cpp.html" status="active" subtype="file" title="" fulltitle="engine.cpp Example File" subtitle="spectrum/engine.cpp"/>
            <page name="spectrum/engine.h" href="qtmultimedia-spectrum-engine-h.html" status="active" subtype="file" title="" fulltitle="engine.h Example File" subtitle="spectrum/engine.h"/>
            <page name="spectrum/frequencyspectrum.cpp" href="qtmultimedia-spectrum-frequencyspectrum-cpp.html" status="active" subtype="file" title="" fulltitle="frequencyspectrum.cpp Example File" subtitle="spectrum/frequencyspectrum.cpp"/>
            <page name="spectrum/frequencyspectrum.h" href="qtmultimedia-spectrum-frequencyspectrum-h.html" status="active" subtype="file" title="" fulltitle="frequencyspectrum.h Example File" subtitle="spectrum/frequencyspectrum.h"/>
            <page name="spectrum/levelmeter.cpp" href="qtmultimedia-spectrum-levelmeter-cpp.html" status="active" subtype="file" title="" fulltitle="levelmeter.cpp Example File" subtitle="spectrum/levelmeter.cpp"/>
            <page name="spectrum/levelmeter.h" href="qtmultimedia-spectrum-levelmeter-h.html" status="active" subtype="file" title="" fulltitle="levelmeter.h Example File" subtitle="spectrum/levelmeter.h"/>
            <page name="spectrum/mainwidget.cpp" href="qtmultimedia-spectrum-mainwidget-cpp.html" status="active" subtype="file" title="" fulltitle="mainwidget.cpp Example File" subtitle="spectrum/mainwidget.cpp"/>
            <page name="spectrum/mainwidget.h" href="qtmultimedia-spectrum-mainwidget-h.html" status="active" subtype="file" title="" fulltitle="mainwidget.h Example File" subtitle="spectrum/mainwidget.h"/>
            <page name="spectrum/progressbar.cpp" href="qtmultimedia-spectrum-progressbar-cpp.html" status="active" subtype="file" title="" fulltitle="progressbar.cpp Example File" subtitle="spectrum/progressbar.cpp"/>
            <page name="spectrum/progressbar.h" href="qtmultimedia-spectrum-progressbar-h.html" status="active" subtype="file" title="" fulltitle="progressbar.h Example File" subtitle="spectrum/progressbar.h"/>
            <page name="spectrum/settingsdialog.cpp" href="qtmultimedia-spectrum-settingsdialog-cpp.html" status="active" subtype="file" title="" fulltitle="settingsdialog.cpp Example File" subtitle="spectrum/settingsdialog.cpp"/>
            <page name="spectrum/settingsdialog.h" href="qtmultimedia-spectrum-settingsdialog-h.html" status="active" subtype="file" title="" fulltitle="settingsdialog.h Example File" subtitle="spectrum/settingsdialog.h"/>
            <page name="spectrum/spectrograph.cpp" href="qtmultimedia-spectrum-spectrograph-cpp.html" status="active" subtype="file" title="" fulltitle="spectrograph.cpp Example File" subtitle="spectrum/spectrograph.cpp"/>
            <page name="spectrum/spectrograph.h" href="qtmultimedia-spectrum-spectrograph-h.html" status="active" subtype="file" title="" fulltitle="spectrograph.h Example File" subtitle="spectrum/spectrograph.h"/>
            <page name="spectrum/spectrum.h" href="qtmultimedia-spectrum-spectrum-h.html" status="active" subtype="file" title="" fulltitle="spectrum.h Example File" subtitle="spectrum/spectrum.h"/>
            <page name="spectrum/spectrumanalyser.cpp" href="qtmultimedia-spectrum-spectrumanalyser-cpp.html" status="active" subtype="file" title="" fulltitle="spectrumanalyser.cpp Example File" subtitle="spectrum/spectrumanalyser.cpp"/>
            <page name="spectrum/spectrumanalyser.h" href="qtmultimedia-spectrum-spectrumanalyser-h.html" status="active" subtype="file" title="" fulltitle="spectrumanalyser.h Example File" subtitle="spectrum/spectrumanalyser.h"/>
            <page name="spectrum/tonegenerator.cpp" href="qtmultimedia-spectrum-tonegenerator-cpp.html" status="active" subtype="file" title="" fulltitle="tonegenerator.cpp Example File" subtitle="spectrum/tonegenerator.cpp"/>
            <page name="spectrum/tonegenerator.h" href="qtmultimedia-spectrum-tonegenerator-h.html" status="active" subtype="file" title="" fulltitle="tonegenerator.h Example File" subtitle="spectrum/tonegenerator.h"/>
            <page name="spectrum/tonegeneratordialog.cpp" href="qtmultimedia-spectrum-tonegeneratordialog-cpp.html" status="active" subtype="file" title="" fulltitle="tonegeneratordialog.cpp Example File" subtitle="spectrum/tonegeneratordialog.cpp"/>
            <page name="spectrum/tonegeneratordialog.h" href="qtmultimedia-spectrum-tonegeneratordialog-h.html" status="active" subtype="file" title="" fulltitle="tonegeneratordialog.h Example File" subtitle="spectrum/tonegeneratordialog.h"/>
            <page name="spectrum/utils.cpp" href="qtmultimedia-spectrum-utils-cpp.html" status="active" subtype="file" title="" fulltitle="utils.cpp Example File" subtitle="spectrum/utils.cpp"/>
            <page name="spectrum/utils.h" href="qtmultimedia-spectrum-utils-h.html" status="active" subtype="file" title="" fulltitle="utils.h Example File" subtitle="spectrum/utils.h"/>
            <page name="spectrum/waveform.cpp" href="qtmultimedia-spectrum-waveform-cpp.html" status="active" subtype="file" title="" fulltitle="waveform.cpp Example File" subtitle="spectrum/waveform.cpp"/>
            <page name="spectrum/waveform.h" href="qtmultimedia-spectrum-waveform-h.html" status="active" subtype="file" title="" fulltitle="waveform.h Example File" subtitle="spectrum/waveform.h"/>
            <page name="spectrum/3rdparty/fftreal/Array.h" href="qtmultimedia-spectrum-3rdparty-fftreal-array-h.html" status="active" subtype="file" title="" fulltitle="Array.h Example File" subtitle="spectrum/3rdparty/fftreal/Array.h"/>
            <page name="spectrum/3rdparty/fftreal/DynArray.h" href="qtmultimedia-spectrum-3rdparty-fftreal-dynarray-h.html" status="active" subtype="file" title="" fulltitle="DynArray.h Example File" subtitle="spectrum/3rdparty/fftreal/DynArray.h"/>
            <page name="spectrum/3rdparty/fftreal/FFTReal.h" href="qtmultimedia-spectrum-3rdparty-fftreal-fftreal-h.html" status="active" subtype="file" title="" fulltitle="FFTReal.h Example File" subtitle="spectrum/3rdparty/fftreal/FFTReal.h"/>
            <page name="spectrum/3rdparty/fftreal/FFTRealFixLen.h" href="qtmultimedia-spectrum-3rdparty-fftreal-fftrealfixlen-h.html" status="active" subtype="file" title="" fulltitle="FFTRealFixLen.h Example File" subtitle="spectrum/3rdparty/fftreal/FFTRealFixLen.h"/>
            <page name="spectrum/3rdparty/fftreal/FFTRealFixLenParam.h" href="qtmultimedia-spectrum-3rdparty-fftreal-fftrealfixlenparam-h.html" status="active" subtype="file" title="" fulltitle="FFTRealFixLenParam.h Example File" subtitle="spectrum/3rdparty/fftreal/FFTRealFixLenParam.h"/>
            <page name="spectrum/3rdparty/fftreal/FFTRealPassDirect.h" href="qtmultimedia-spectrum-3rdparty-fftreal-fftrealpassdirect-h.html" status="active" subtype="file" title="" fulltitle="FFTRealPassDirect.h Example File" subtitle="spectrum/3rdparty/fftreal/FFTRealPassDirect.h"/>
            <page name="spectrum/3rdparty/fftreal/FFTRealPassInverse.h" href="qtmultimedia-spectrum-3rdparty-fftreal-fftrealpassinverse-h.html" status="active" subtype="file" title="" fulltitle="FFTRealPassInverse.h Example File" subtitle="spectrum/3rdparty/fftreal/FFTRealPassInverse.h"/>
            <page name="spectrum/3rdparty/fftreal/FFTRealSelect.h" href="qtmultimedia-spectrum-3rdparty-fftreal-fftrealselect-h.html" status="active" subtype="file" title="" fulltitle="FFTRealSelect.h Example File" subtitle="spectrum/3rdparty/fftreal/FFTRealSelect.h"/>
            <page name="spectrum/3rdparty/fftreal/FFTRealUseTrigo.h" href="qtmultimedia-spectrum-3rdparty-fftreal-fftrealusetrigo-h.html" status="active" subtype="file" title="" fulltitle="FFTRealUseTrigo.h Example File" subtitle="spectrum/3rdparty/fftreal/FFTRealUseTrigo.h"/>
            <page name="spectrum/3rdparty/fftreal/OscSinCos.h" href="qtmultimedia-spectrum-3rdparty-fftreal-oscsincos-h.html" status="active" subtype="file" title="" fulltitle="OscSinCos.h Example File" subtitle="spectrum/3rdparty/fftreal/OscSinCos.h"/>
            <page name="spectrum/3rdparty/fftreal/TestAccuracy.h" href="qtmultimedia-spectrum-3rdparty-fftreal-testaccuracy-h.html" status="active" subtype="file" title="" fulltitle="TestAccuracy.h Example File" subtitle="spectrum/3rdparty/fftreal/TestAccuracy.h"/>
            <page name="spectrum/3rdparty/fftreal/TestHelperFixLen.h" href="qtmultimedia-spectrum-3rdparty-fftreal-testhelperfixlen-h.html" status="active" subtype="file" title="" fulltitle="TestHelperFixLen.h Example File" subtitle="spectrum/3rdparty/fftreal/TestHelperFixLen.h"/>
            <page name="spectrum/3rdparty/fftreal/TestHelperNormal.h" href="qtmultimedia-spectrum-3rdparty-fftreal-testhelpernormal-h.html" status="active" subtype="file" title="" fulltitle="TestHelperNormal.h Example File" subtitle="spectrum/3rdparty/fftreal/TestHelperNormal.h"/>
            <page name="spectrum/3rdparty/fftreal/TestSpeed.h" href="qtmultimedia-spectrum-3rdparty-fftreal-testspeed-h.html" status="active" subtype="file" title="" fulltitle="TestSpeed.h Example File" subtitle="spectrum/3rdparty/fftreal/TestSpeed.h"/>
            <page name="spectrum/3rdparty/fftreal/TestWhiteNoiseGen.h" href="qtmultimedia-spectrum-3rdparty-fftreal-testwhitenoisegen-h.html" status="active" subtype="file" title="" fulltitle="TestWhiteNoiseGen.h Example File" subtitle="spectrum/3rdparty/fftreal/TestWhiteNoiseGen.h"/>
            <page name="spectrum/3rdparty/fftreal/def.h" href="qtmultimedia-spectrum-3rdparty-fftreal-def-h.html" status="active" subtype="file" title="" fulltitle="def.h Example File" subtitle="spectrum/3rdparty/fftreal/def.h"/>
            <page name="spectrum/3rdparty/fftreal/fftreal_wrapper.cpp" href="qtmultimedia-spectrum-3rdparty-fftreal-fftreal-wrapper-cpp.html" status="active" subtype="file" title="" fulltitle="fftreal_wrapper.cpp Example File" subtitle="spectrum/3rdparty/fftreal/fftreal_wrapper.cpp"/>
            <page name="spectrum/3rdparty/fftreal/fftreal_wrapper.h" href="qtmultimedia-spectrum-3rdparty-fftreal-fftreal-wrapper-h.html" status="active" subtype="file" title="" fulltitle="fftreal_wrapper.h Example File" subtitle="spectrum/3rdparty/fftreal/fftreal_wrapper.h"/>
            <page name="spectrum/3rdparty/fftreal/test.cpp" href="qtmultimedia-spectrum-3rdparty-fftreal-test-cpp.html" status="active" subtype="file" title="" fulltitle="test.cpp Example File" subtitle="spectrum/3rdparty/fftreal/test.cpp"/>
            <page name="spectrum/3rdparty/fftreal/test_fnc.h" href="qtmultimedia-spectrum-3rdparty-fftreal-test-fnc-h.html" status="active" subtype="file" title="" fulltitle="test_fnc.h Example File" subtitle="spectrum/3rdparty/fftreal/test_fnc.h"/>
            <page name="spectrum/3rdparty/fftreal/test_settings.h" href="qtmultimedia-spectrum-3rdparty-fftreal-test-settings-h.html" status="active" subtype="file" title="" fulltitle="test_settings.h Example File" subtitle="spectrum/3rdparty/fftreal/test_settings.h"/>
            <page name="spectrum/3rdparty/fftreal/stopwatch/ClockCycleCounter.cpp" href="qtmultimedia-spectrum-3rdparty-fftreal-stopwatch-clockcyclecounter-cpp.html" status="active" subtype="file" title="" fulltitle="ClockCycleCounter.cpp Example File" subtitle="spectrum/3rdparty/fftreal/stopwatch/ClockCycleCounter.cpp"/>
            <page name="spectrum/3rdparty/fftreal/stopwatch/ClockCycleCounter.h" href="qtmultimedia-spectrum-3rdparty-fftreal-stopwatch-clockcyclecounter-h.html" status="active" subtype="file" title="" fulltitle="ClockCycleCounter.h Example File" subtitle="spectrum/3rdparty/fftreal/stopwatch/ClockCycleCounter.h"/>
            <page name="spectrum/3rdparty/fftreal/stopwatch/Int64.h" href="qtmultimedia-spectrum-3rdparty-fftreal-stopwatch-int64-h.html" status="active" subtype="file" title="" fulltitle="Int64.h Example File" subtitle="spectrum/3rdparty/fftreal/stopwatch/Int64.h"/>
            <page name="spectrum/3rdparty/fftreal/stopwatch/StopWatch.cpp" href="qtmultimedia-spectrum-3rdparty-fftreal-stopwatch-stopwatch-cpp.html" status="active" subtype="file" title="" fulltitle="StopWatch.cpp Example File" subtitle="spectrum/3rdparty/fftreal/stopwatch/StopWatch.cpp"/>
            <page name="spectrum/3rdparty/fftreal/stopwatch/StopWatch.h" href="qtmultimedia-spectrum-3rdparty-fftreal-stopwatch-stopwatch-h.html" status="active" subtype="file" title="" fulltitle="StopWatch.h Example File" subtitle="spectrum/3rdparty/fftreal/stopwatch/StopWatch.h"/>
            <page name="spectrum/3rdparty/fftreal/stopwatch/def.h" href="qtmultimedia-spectrum-3rdparty-fftreal-stopwatch-def-h.html" status="active" subtype="file" title="" fulltitle="def.h Example File" subtitle="spectrum/3rdparty/fftreal/stopwatch/def.h"/>
            <page name="spectrum/3rdparty/fftreal/stopwatch/fnc.h" href="qtmultimedia-spectrum-3rdparty-fftreal-stopwatch-fnc-h.html" status="active" subtype="file" title="" fulltitle="fnc.h Example File" subtitle="spectrum/3rdparty/fftreal/stopwatch/fnc.h"/>
            <page name="spectrum/main.cpp" href="qtmultimedia-spectrum-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="spectrum/main.cpp"/>
            <page name="spectrum/CMakeLists.txt" href="qtmultimedia-spectrum-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="spectrum/CMakeLists.txt"/>
            <page name="spectrum/app.pro" href="qtmultimedia-spectrum-app-pro.html" status="active" subtype="file" title="" fulltitle="app.pro Example File" subtitle="spectrum/app.pro"/>
            <page name="spectrum/spectrum.pro" href="qtmultimedia-spectrum-spectrum-pro.html" status="active" subtype="file" title="" fulltitle="spectrum.pro Example File" subtitle="spectrum/spectrum.pro"/>
            <page name="spectrum/spectrum.qrc" href="qtmultimedia-spectrum-spectrum-qrc.html" status="active" subtype="file" title="" fulltitle="spectrum.qrc Example File" subtitle="spectrum/spectrum.qrc"/>
            <page name="spectrum/3rdparty/fftreal/CMakeLists.txt" href="qtmultimedia-spectrum-3rdparty-fftreal-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="spectrum/3rdparty/fftreal/CMakeLists.txt"/>
            <page name="spectrum/3rdparty/fftreal/fftreal.pro" href="qtmultimedia-spectrum-3rdparty-fftreal-fftreal-pro.html" status="active" subtype="file" title="" fulltitle="fftreal.pro Example File" subtitle="spectrum/3rdparty/fftreal/fftreal.pro"/>
            <page name="spectrum/images/record.png" href="qtmultimedia-spectrum-images-record-png.html" status="active" subtype="image" title="" fulltitle="record.png Image File" subtitle="spectrum/images/record.png"/>
            <page name="spectrum/images/settings.png" href="qtmultimedia-spectrum-images-settings-png.html" status="active" subtype="image" title="" fulltitle="settings.png Image File" subtitle="spectrum/images/settings.png"/>
        </page>
        <page name="https://en.wikipedia.org/wiki/Theora" href="https://en.wikipedia.org/wiki/Theora" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Theora" fulltitle="Theora" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/VP8" href="https://en.wikipedia.org/wiki/VP8" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="VP8" fulltitle="VP8" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/VP9" href="https://en.wikipedia.org/wiki/VP9" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="VP9" fulltitle="VP9" subtitle=""/>
        <qmlclass name="Video" qml-module-name="QtMultimedia" fullname="QtMultimedia.Video" href="qml-qtmultimedia-video.html" status="active" access="public" location="Video.qml" documented="true" groups="multimedia_qml,multimedia_video_qml" title="Video" fulltitle="Video" subtitle="" brief="A convenience type for showing a specified video">
            <function name="errorOccurred" fullname="QtMultimedia.Video.errorOccurred" href="qml-qtmultimedia-video.html#errorOccurred-signal" status="active" access="public" location="Video.qml" documented="true" meta="qmlsignal">
                <parameter type="" name="error" default=""/>
                <parameter type="" name="errorString" default=""/>
            </function>
            <function name="pause" fullname="QtMultimedia.Video.pause" href="qml-qtmultimedia-video.html#pause-method" status="active" access="public" location="Video.qml" documented="true" meta="qmlmethod"/>
            <function name="paused" fullname="QtMultimedia.Video.paused" href="qml-qtmultimedia-video.html#paused-signal" status="active" access="public" location="Video.qml" documented="true" meta="qmlsignal"/>
            <function name="play" fullname="QtMultimedia.Video.play" href="qml-qtmultimedia-video.html#play-method" status="active" access="public" location="Video.qml" documented="true" meta="qmlmethod"/>
            <function name="playing" fullname="QtMultimedia.Video.playing" href="qml-qtmultimedia-video.html#playing-signal" status="active" access="public" location="Video.qml" documented="true" meta="qmlsignal"/>
            <function name="seek" fullname="QtMultimedia.Video.seek" href="qml-qtmultimedia-video.html#seek-method" status="active" access="public" location="Video.qml" documented="true" meta="qmlmethod">
                <parameter type="" name="offset" default=""/>
            </function>
            <function name="stop" fullname="QtMultimedia.Video.stop" href="qml-qtmultimedia-video.html#stop-method" status="active" access="public" location="Video.qml" documented="true" meta="qmlmethod"/>
            <function name="stopped" fullname="QtMultimedia.Video.stopped" href="qml-qtmultimedia-video.html#stopped-signal" status="active" access="public" location="Video.qml" documented="true" meta="qmlsignal"/>
            <qmlproperty name="autoPlay" fullname="QtMultimedia.Video.autoPlay" href="qml-qtmultimedia-video.html#autoPlay-prop" status="active" access="public" since="6.7" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="bufferProgress" fullname="QtMultimedia.Video.bufferProgress" href="qml-qtmultimedia-video.html#bufferProgress-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="duration" fullname="QtMultimedia.Video.duration" href="qml-qtmultimedia-video.html#duration-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="error" fullname="QtMultimedia.Video.error" href="qml-qtmultimedia-video.html#error-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="errorString" fullname="QtMultimedia.Video.errorString" href="qml-qtmultimedia-video.html#errorString-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="fillMode" fullname="QtMultimedia.Video.fillMode" href="qml-qtmultimedia-video.html#fillMode-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="hasAudio" fullname="QtMultimedia.Video.hasAudio" href="qml-qtmultimedia-video.html#hasAudio-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="hasVideo" fullname="QtMultimedia.Video.hasVideo" href="qml-qtmultimedia-video.html#hasVideo-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="loops" fullname="QtMultimedia.Video.loops" href="qml-qtmultimedia-video.html#loops-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="metaData" fullname="QtMultimedia.Video.metaData" href="qml-qtmultimedia-video.html#metaData-prop" status="active" access="public" documented="true" type="mediaMetaData" attached="false" writable="true"/>
            <qmlproperty name="muted" fullname="QtMultimedia.Video.muted" href="qml-qtmultimedia-video.html#muted-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="orientation" fullname="QtMultimedia.Video.orientation" href="qml-qtmultimedia-video.html#orientation-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="playbackRate" fullname="QtMultimedia.Video.playbackRate" href="qml-qtmultimedia-video.html#playbackRate-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="playbackState" fullname="QtMultimedia.Video.playbackState" href="qml-qtmultimedia-video.html#playbackState-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="position" fullname="QtMultimedia.Video.position" href="qml-qtmultimedia-video.html#position-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="seekable" fullname="QtMultimedia.Video.seekable" href="qml-qtmultimedia-video.html#seekable-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="source" fullname="QtMultimedia.Video.source" href="qml-qtmultimedia-video.html#source-prop" status="active" access="public" documented="true" type="url" attached="false" writable="true"/>
            <qmlproperty name="volume" fullname="QtMultimedia.Video.volume" href="qml-qtmultimedia-video.html#volume-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
        </qmlclass>
        <page name="videographicsitem" href="qtmultimedia-videographicsitem-example.html" status="active" location="videographicsitem.qdoc" documented="true" groups="category Multimedia,multimedia_examples" subtype="example" title="Video Graphics Item Example" fulltitle="Video Graphics Item Example" subtitle="" brief="Streaming video on a graphics scene">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page name="videographicsitem/videoplayer.cpp" href="qtmultimedia-videographicsitem-videoplayer-cpp.html" status="active" subtype="file" title="" fulltitle="videoplayer.cpp Example File" subtitle="videographicsitem/videoplayer.cpp"/>
            <page name="videographicsitem/videoplayer.h" href="qtmultimedia-videographicsitem-videoplayer-h.html" status="active" subtype="file" title="" fulltitle="videoplayer.h Example File" subtitle="videographicsitem/videoplayer.h"/>
            <page name="videographicsitem/main.cpp" href="qtmultimedia-videographicsitem-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="videographicsitem/main.cpp"/>
            <page name="videographicsitem/CMakeLists.txt" href="qtmultimedia-videographicsitem-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="videographicsitem/CMakeLists.txt"/>
            <page name="videographicsitem/videographicsitem.pro" href="qtmultimedia-videographicsitem-videographicsitem-pro.html" status="active" subtype="file" title="" fulltitle="videographicsitem.pro Example File" subtitle="videographicsitem/videographicsitem.pro"/>
        </page>
        <page name="videooverview.html" href="videooverview.html" status="active" location="videooverview.qdoc" documented="true" groups="explanations-graphicsandmultimedia" subtype="page" title="Video Overview" fulltitle="Video Overview" subtitle="" brief="Video playback">
            <target name="multimedia-playing-video"/>
            <contents name="video-features" title="Video Features" level="1"/>
            <contents name="video-implementation-details" title="Video Implementation Details" level="1"/>
            <contents name="playing-video-in-c" title="Playing Video in C++" level="2"/>
            <contents name="playing-video-in-qml" title="Playing Video in QML" level="2"/>
            <contents name="working-with-low-level-video-frames" title="Working with Low Level Video Frames" level="2"/>
            <contents name="recording-video" title="Recording Video" level="2"/>
            <contents name="supported-media-formats" title="Supported Media Formats" level="1"/>
            <contents name="windows" title="Windows" level="2"/>
            <contents name="android" title="Android" level="2"/>
            <contents name="linux" title="Linux" level="2"/>
            <contents name="minimum-required-gstreamer-plugins" title="Minimum Required GStreamer Plugins" level="3"/>
            <contents name="determining-supported-media-formats-at-runtime" title="Determining Supported Media Formats at Runtime" level="2"/>
            <contents name="examples" title="Examples" level="1"/>
            <contents name="c-examples" title="C++ Examples" level="2"/>
            <contents name="qml-examples" title="QML Examples" level="2"/>
            <contents name="reference-documentation" title="Reference Documentation" level="1"/>
            <contents name="c-classes" title="C++ Classes" level="2"/>
            <contents name="qml-types" title="QML Types" level="2"/>
        </page>
        <page name="videowidget" href="qtmultimedia-videowidget-example.html" status="active" location="videowidget.qdoc" documented="true" groups="category Multimedia,multimedia_examples" subtype="example" title="Video Widget Example" fulltitle="Video Widget Example" subtitle="" brief="Implementing a video player widget">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page name="videowidget/videoplayer.cpp" href="qtmultimedia-videowidget-videoplayer-cpp.html" status="active" subtype="file" title="" fulltitle="videoplayer.cpp Example File" subtitle="videowidget/videoplayer.cpp"/>
            <page name="videowidget/videoplayer.h" href="qtmultimedia-videowidget-videoplayer-h.html" status="active" subtype="file" title="" fulltitle="videoplayer.h Example File" subtitle="videowidget/videoplayer.h"/>
            <page name="videowidget/main.cpp" href="qtmultimedia-videowidget-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="videowidget/main.cpp"/>
            <page name="videowidget/CMakeLists.txt" href="qtmultimedia-videowidget-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="videowidget/CMakeLists.txt"/>
            <page name="videowidget/videowidget.pro" href="qtmultimedia-videowidget-videowidget-pro.html" status="active" subtype="file" title="" fulltitle="videowidget.pro Example File" subtitle="videowidget/videowidget.pro"/>
        </page>
        <qmlclass name="VideoOutput" qml-module-name="QtMultimedia" fullname="QtMultimedia.VideoOutput" href="qml-qtmultimedia-videooutput.html" status="active" access="public" documented="true" groups="multimedia_qml,multimedia_video_qml" title="VideoOutput" fulltitle="VideoOutput" subtitle="" brief="Render video or camera viewfinder">
            <qmlproperty name="contentRect" fullname="QtMultimedia.VideoOutput.contentRect" href="qml-qtmultimedia-videooutput.html#contentRect-prop" status="active" access="public" documented="true" type="rectangle" attached="false" writable="true"/>
            <qmlproperty name="fillMode" fullname="QtMultimedia.VideoOutput.fillMode" href="qml-qtmultimedia-videooutput.html#fillMode-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="orientation" fullname="QtMultimedia.VideoOutput.orientation" href="qml-qtmultimedia-videooutput.html#orientation-prop" status="active" access="public" documented="true" type="int" attached="false" writable="true"/>
            <qmlproperty name="sourceRect" fullname="QtMultimedia.VideoOutput.sourceRect" href="qml-qtmultimedia-videooutput.html#sourceRect-prop" status="active" access="public" documented="true" type="rectangle" attached="false" writable="true"/>
            <qmlproperty name="videoSink" fullname="QtMultimedia.VideoOutput.videoSink" href="qml-qtmultimedia-videooutput.html#videoSink-prop" status="active" access="public" documented="true" type="object" attached="false" writable="true"/>
        </qmlclass>
        <page name="https://en.wikipedia.org/wiki/WAV" href="https://en.wikipedia.org/wiki/WAV" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Waveform Audio File Format" fulltitle="Waveform Audio File Format" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/WebM" href="https://en.wikipedia.org/wiki/WebM" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="WebM" fulltitle="WebM" subtitle=""/>
        <qmlclass name="WindowCapture" qml-module-name="QtMultimedia" fullname="QtMultimedia.WindowCapture" href="qml-qtmultimedia-windowcapture.html" status="active" access="public" since="6.6" documented="true" groups="multimedia_qml,multimedia_video_qml" title="WindowCapture" fulltitle="WindowCapture" subtitle="" brief="This type is used for capturing a window">
            <function name="capturableWindows" fullname="QtMultimedia.WindowCapture.capturableWindows" href="qml-qtmultimedia-windowcapture.html#capturableWindows-method" status="active" access="public" documented="true" meta="qmlmethod" type="list&lt;CapturableWindow&gt;"/>
            <function name="start" fullname="QtMultimedia.WindowCapture.start" href="qml-qtmultimedia-windowcapture.html#start-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <function name="stop" fullname="QtMultimedia.WindowCapture.stop" href="qml-qtmultimedia-windowcapture.html#stop-method" status="active" access="public" documented="true" meta="qmlmethod"/>
            <qmlproperty name="active" fullname="QtMultimedia.WindowCapture.active" href="qml-qtmultimedia-windowcapture.html#active-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="error" fullname="QtMultimedia.WindowCapture.error" href="qml-qtmultimedia-windowcapture.html#error-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="false"/>
            <qmlproperty name="errorString" fullname="QtMultimedia.WindowCapture.errorString" href="qml-qtmultimedia-windowcapture.html#errorString-prop" status="active" access="public" documented="true" type="string" attached="false" writable="false"/>
            <qmlproperty name="window" fullname="QtMultimedia.WindowCapture.window" href="qml-qtmultimedia-windowcapture.html#window-prop" status="active" access="public" documented="true" type="Window" attached="false" writable="true"/>
        </qmlclass>
        <page name="https://en.wikipedia.org/wiki/Windows_Media_Audio" href="https://en.wikipedia.org/wiki/Windows_Media_Audio" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Windows Media Audio" fulltitle="Windows Media Audio" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Windows_Media_Player" href="https://en.wikipedia.org/wiki/Windows_Media_Player" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Windows Media Player" fulltitle="Windows Media Player" subtitle=""/>
        <page name="https://support.microsoft.com/en-us/topic/file-types-supported-by-windows-media-player-32d9998e-dc8f-af54-7ba1-e996f74375d9" href="https://support.microsoft.com/en-us/topic/file-types-supported-by-windows-media-player-32d9998e-dc8f-af54-7ba1-e996f74375d9" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Windows Media Player documentation" fulltitle="Windows Media Player documentation" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Windows_Media_Video" href="https://en.wikipedia.org/wiki/Windows_Media_Video" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="Windows Media Video" fulltitle="Windows Media Video" subtitle=""/>
        <qmlvaluetype name="audioDevice" qml-module-name="QtMultimedia" fullname="QtMultimedia.audioDevice" href="qml-audiodevice.html" status="active" access="public" documented="true" groups="multimedia_audio_qml,multimedia_qml,qmlvaluetypes" title="audioDevice" fulltitle="audioDevice" subtitle="" brief="Describes an audio device">
            <qmlproperty name="description" fullname="QtMultimedia.audioDevice.description" href="qml-audiodevice.html#description-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="id" fullname="QtMultimedia.audioDevice.id" href="qml-audiodevice.html#id-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="isDefault" fullname="QtMultimedia.audioDevice.isDefault" href="qml-audiodevice.html#isDefault-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="mode" fullname="QtMultimedia.audioDevice.mode" href="qml-audiodevice.html#mode-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
        </qmlvaluetype>
        <page name="qtmultimedia-attribution-ffmpeg-boost.html" href="qtmultimedia-attribution-ffmpeg-boost.html" status="active" location="codeattributions.qdoc" documented="true" groups="attributions-libs,attributions-qtmultimedia,attributions-qtmultimedia-libs" subtype="attribution" title="boost" fulltitle="boost" subtitle="" brief="Boost Software License 1.0">
            <target name="ffmpeg-boost"/>
        </page>
        <qmlvaluetype name="cameraDevice" qml-module-name="QtMultimedia" fullname="QtMultimedia.cameraDevice" href="qml-cameradevice.html" status="active" access="public" documented="true" groups="multimedia_qml,multimedia_video_qml,qmlvaluetypes" title="cameraDevice" fulltitle="cameraDevice" subtitle="" brief="Describes a camera device">
            <qmlproperty name="correctionAngle" fullname="QtMultimedia.cameraDevice.correctionAngle" href="qml-cameradevice.html#correctionAngle-prop" status="active" access="public" since="6.7" documented="true" type="QtVideo::Rotation" attached="false" writable="true"/>
            <qmlproperty name="description" fullname="QtMultimedia.cameraDevice.description" href="qml-cameradevice.html#description-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="id" fullname="QtMultimedia.cameraDevice.id" href="qml-cameradevice.html#id-prop" status="active" access="public" documented="true" type="string" attached="false" writable="true"/>
            <qmlproperty name="isDefault" fullname="QtMultimedia.cameraDevice.isDefault" href="qml-cameradevice.html#isDefault-prop" status="active" access="public" documented="true" type="bool" attached="false" writable="true"/>
            <qmlproperty name="position" fullname="QtMultimedia.cameraDevice.position" href="qml-cameradevice.html#position-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="videoFormats" fullname="QtMultimedia.cameraDevice.videoFormats" href="qml-cameradevice.html#videoFormats-prop" status="active" access="public" documented="true" type="CameraFormat" attached="false" writable="true"/>
        </qmlvaluetype>
        <qmlvaluetype name="cameraFormat" qml-module-name="QtMultimedia" fullname="QtMultimedia.cameraFormat" href="qml-cameraformat.html" status="active" access="public" documented="true" groups="multimedia_qml,multimedia_video_qml,qmlvaluetypes" title="cameraFormat" fulltitle="cameraFormat" subtitle="" brief="Describes a video format supported by a camera device">
            <qmlproperty name="maxFrameRate" fullname="QtMultimedia.cameraFormat.maxFrameRate" href="qml-cameraformat.html#maxFrameRate-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="minFrameRate" fullname="QtMultimedia.cameraFormat.minFrameRate" href="qml-cameraformat.html#minFrameRate-prop" status="active" access="public" documented="true" type="real" attached="false" writable="true"/>
            <qmlproperty name="pixelFormat" fullname="QtMultimedia.cameraFormat.pixelFormat" href="qml-cameraformat.html#pixelFormat-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="resolution" fullname="QtMultimedia.cameraFormat.resolution" href="qml-cameraformat.html#resolution-prop" status="active" access="public" documented="true" type="size" attached="false" writable="true"/>
        </qmlvaluetype>
        <page name="https://www.codecguide.com/guides.htm" href="https://www.codecguide.com/guides.htm" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="codec guide" fulltitle="codec guide" subtitle=""/>
        <page name="https://gstreamer.freedesktop.org" href="https://gstreamer.freedesktop.org" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="gstreamer" fulltitle="gstreamer" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Hyperfocal_distance" href="https://en.wikipedia.org/wiki/Hyperfocal_distance" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="hyperfocal" fulltitle="hyperfocal" subtitle=""/>
        <page name="qtmultimedia-attribution-ffmpeg-libjpeg.html" href="qtmultimedia-attribution-ffmpeg-libjpeg.html" status="active" location="codeattributions.qdoc" documented="true" groups="attributions-libs,attributions-qtmultimedia,attributions-qtmultimedia-libs" subtype="attribution" title="libjpeg" fulltitle="libjpeg" subtitle="" brief="Independent JPEG Group License">
            <target name="ffmpeg-libjpeg"/>
        </page>
        <page name="http://www.sengpielaudio.com/calculator-loudness.htm" href="http://www.sengpielaudio.com/calculator-loudness.htm" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="loudness" fulltitle="loudness" subtitle=""/>
        <qmlvaluetype name="mediaFormat" qml-module-name="QtMultimedia" fullname="QtMultimedia.mediaFormat" href="qml-mediaformat.html" status="active" access="public" documented="true" groups="multimedia_qml,qmlvaluetypes" title="mediaFormat" fulltitle="mediaFormat" subtitle="" brief="MediaFormat describes the format of a media file">
            <function name="audioCodecDescription" fullname="QtMultimedia.mediaFormat.audioCodecDescription" href="qml-mediaformat.html#audioCodecDescription-method" status="active" access="public" documented="true" meta="qmlmethod" type="string">
                <parameter type="" name="codec" default=""/>
            </function>
            <function name="audioCodecName" fullname="QtMultimedia.mediaFormat.audioCodecName" href="qml-mediaformat.html#audioCodecName-method" status="active" access="public" documented="true" meta="qmlmethod" type="string">
                <parameter type="" name="codec" default=""/>
            </function>
            <function name="fileFormatDescription" fullname="QtMultimedia.mediaFormat.fileFormatDescription" href="qml-mediaformat.html#fileFormatDescription-method" status="active" access="public" documented="true" meta="qmlmethod" type="string">
                <parameter type="" name="fileFormat" default=""/>
            </function>
            <function name="fileFormatName" fullname="QtMultimedia.mediaFormat.fileFormatName" href="qml-mediaformat.html#fileFormatName-method" status="active" access="public" documented="true" meta="qmlmethod" type="string">
                <parameter type="" name="fileFormat" default=""/>
            </function>
            <function name="supportedAudioFormats" fullname="QtMultimedia.mediaFormat.supportedAudioFormats" href="qml-mediaformat.html#supportedAudioFormats-method" status="active" access="public" documented="true" meta="qmlmethod" type="list&lt;AudioCodec&gt;">
                <parameter type="" name="conversionMode" default=""/>
            </function>
            <function name="supportedFileFormats" fullname="QtMultimedia.mediaFormat.supportedFileFormats" href="qml-mediaformat.html#supportedFileFormats-method" status="active" access="public" documented="true" meta="qmlmethod" type="list&lt;FileFormat&gt;">
                <parameter type="" name="conversionMode" default=""/>
            </function>
            <function name="supportedVideoCodecs" fullname="QtMultimedia.mediaFormat.supportedVideoCodecs" href="qml-mediaformat.html#supportedVideoCodecs-method" status="active" access="public" documented="true" meta="qmlmethod" type="list&lt;VideoCodec&gt;">
                <parameter type="" name="conversionMode" default=""/>
            </function>
            <function name="videoCodecDescription" fullname="QtMultimedia.mediaFormat.videoCodecDescription" href="qml-mediaformat.html#videoCodecDescription-method" status="active" access="public" documented="true" meta="qmlmethod" type="string">
                <parameter type="" name="codec" default=""/>
            </function>
            <function name="videoCodecName" fullname="QtMultimedia.mediaFormat.videoCodecName" href="qml-mediaformat.html#videoCodecName-method" status="active" access="public" documented="true" meta="qmlmethod" type="string">
                <parameter type="" name="codec" default=""/>
            </function>
            <qmlproperty name="audioCodec" fullname="QtMultimedia.mediaFormat.audioCodec" href="qml-mediaformat.html#audioCodec-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="fileFormat" fullname="QtMultimedia.mediaFormat.fileFormat" href="qml-mediaformat.html#fileFormat-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
            <qmlproperty name="videoCodec" fullname="QtMultimedia.mediaFormat.videoCodec" href="qml-mediaformat.html#videoCodec-prop" status="active" access="public" documented="true" type="enumeration" attached="false" writable="true"/>
        </qmlvaluetype>
        <qmlvaluetype name="mediaMetaData" qml-module-name="QtMultimedia" fullname="QtMultimedia.mediaMetaData" href="qml-mediametadata.html" status="active" access="public" documented="true" groups="multimedia_audio_qml,multimedia_qml,multimedia_video_qml,qmlvaluetypes" title="mediaMetaData" fulltitle="mediaMetaData" subtitle="" brief="Provides meta-data for media files">
            <function name="clear" fullname="QtMultimedia.mediaMetaData.clear" href="qml-mediametadata.html#clear-method" status="active" access="public" documented="true" meta="qmlmethod" type="void"/>
            <function name="insert" fullname="QtMultimedia.mediaMetaData.insert" href="qml-mediametadata.html#insert-method" status="active" access="public" documented="true" meta="qmlmethod" type="void">
                <parameter type="Key" name="k" default=""/>
                <parameter type="variant" name="value" default=""/>
            </function>
            <function name="isEmpty" fullname="QtMultimedia.mediaMetaData.isEmpty" href="qml-mediametadata.html#isEmpty-method" status="active" access="public" documented="true" meta="qmlmethod" type="bool"/>
            <function name="keys" fullname="QtMultimedia.mediaMetaData.keys" href="qml-mediametadata.html#keys-method" status="active" access="public" documented="true" meta="qmlmethod" type="list&lt;Key&gt;"/>
            <function name="metaDataKeyToString" fullname="QtMultimedia.mediaMetaData.metaDataKeyToString" href="qml-mediametadata.html#metaDataKeyToString-method" status="active" access="public" documented="true" meta="qmlmethod" type="string">
                <parameter type="Key" name="key" default=""/>
            </function>
            <function name="remove" fullname="QtMultimedia.mediaMetaData.remove" href="qml-mediametadata.html#remove-method" status="active" access="public" documented="true" meta="qmlmethod" type="void">
                <parameter type="Key" name="k" default=""/>
            </function>
            <function name="stringValue" fullname="QtMultimedia.mediaMetaData.stringValue" href="qml-mediametadata.html#stringValue-method" status="active" access="public" documented="true" meta="qmlmethod" type="string">
                <parameter type="Key" name="key" default=""/>
            </function>
            <function name="value" fullname="QtMultimedia.mediaMetaData.value" href="qml-mediametadata.html#value-method" status="active" access="public" documented="true" meta="qmlmethod" type="variant">
                <parameter type="Key" name="key" default=""/>
            </function>
        </qmlvaluetype>
        <page name="https://www.wix.com/blog/photography/2018/10/04/photography-terms/" href="https://www.wix.com/blog/photography/2018/10/04/photography-terms/" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="photo glossary" fulltitle="photo glossary" subtitle=""/>
        <page name="https://en.wikipedia.org/wiki/Pixel_Format" href="https://en.wikipedia.org/wiki/Pixel_Format" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="pixel format" fulltitle="pixel format" subtitle=""/>
        <page name="https://doc.qt.io/qt-6/qtqml-syntax-imports.html" href="https://doc.qt.io/qt-6/qtqml-syntax-imports.html" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="qtqml import syntax" fulltitle="qtqml import syntax" subtitle=""/>
        <page name="https://www.dr-lex.be/info-stuff/volumecontrols.html" href="https://www.dr-lex.be/info-stuff/volumecontrols.html" status="active" location="qm-external-pages.qdoc" documented="true" subtype="externalpage" title="volume controls" fulltitle="volume controls" subtitle=""/>
        <page name="qtmultimedia-attribution-ffmpeg-zlib.html" href="qtmultimedia-attribution-ffmpeg-zlib.html" status="active" location="codeattributions.qdoc" documented="true" groups="attributions-libs,attributions-qtmultimedia,attributions-qtmultimedia-libs" subtype="attribution" title="zlib" fulltitle="zlib" subtitle="" brief="Zlib License">
            <target name="ffmpeg-zlib"/>
        </page>
        <group name="attributions-libs" href="attributions-libs.html" status="internal" seen="false" title=""/>
        <group name="attributions-qtmultimedia" href="attributions-qtmultimedia.html" status="internal" seen="false" title=""/>
        <group name="attributions-qtmultimedia-libs" href="attributions-qtmultimedia-libs.html" status="internal" seen="false" title=""/>
        <group name="audio_examples" href="audio-examples.html" status="internal" seen="false" title=""/>
        <group name="camera_examples" href="camera-examples.html" status="internal" seen="false" title=""/>
        <group name="camera_examples_qml" href="camera-examples-qml.html" status="internal" seen="false" title=""/>
        <group name="camera_qml" href="camera-qml.html" status="internal" seen="false" title=""/>
        <group name="category Mobile" href="category-mobile.html" status="internal" seen="false" title=""/>
        <group name="category Multimedia" href="category-multimedia.html" status="internal" seen="false" title=""/>
        <group name="changes-qt-5-to-6" href="changes-qt-5-to-6.html" status="internal" seen="false" title=""/>
        <group name="explanations-graphicsandmultimedia" href="explanations-graphicsandmultimedia.html" status="internal" seen="false" title=""/>
        <group name="modules" href="modules.html" status="internal" seen="false" title=""/>
        <group name="multimedia" href="multimedia.html" status="internal" seen="false" title=""/>
        <group name="multimedia-namespaces" href="multimedia-namespaces.html" status="internal" seen="false" title=""/>
        <group name="multimedia_audio" href="multimedia-audio.html" status="internal" seen="false" title=""/>
        <group name="multimedia_audio_qml" href="multimedia-audio-qml.html" status="internal" seen="false" title=""/>
        <group name="multimedia_camera" href="multimedia-camera.html" status="internal" seen="false" title=""/>
        <group name="multimedia_core" href="multimedia-core.html" status="internal" seen="false" title=""/>
        <group name="multimedia_examples" href="multimedia-examples.html" status="active" location="qtmultimedia-examples.qdoc" documented="true" seen="true" title="Qt Multimedia Examples" brief="Demonstrates the multimedia functionality provided by Qt"/>
        <group name="multimedia_playback" href="multimedia-playback.html" status="internal" seen="false" title=""/>
        <group name="multimedia_qml" href="multimedia-qml.html" status="internal" seen="false" title=""/>
        <group name="multimedia_recording" href="multimedia-recording.html" status="internal" seen="false" title=""/>
        <group name="multimedia_video" href="multimedia-video.html" status="internal" seen="false" title=""/>
        <group name="multimedia_video_qml" href="multimedia-video-qml.html" status="internal" seen="false" title=""/>
        <group name="qmlmodules" href="qmlmodules.html" status="internal" seen="false" title=""/>
        <group name="qmlvaluetypes" href="qmlvaluetypes.html" status="internal" seen="false" title=""/>
        <group name="video_examples" href="video-examples.html" status="internal" seen="false" title=""/>
        <group name="video_examples_qml" href="video-examples-qml.html" status="internal" seen="false" title=""/>
        <module name="QtMultimedia" href="qtmultimedia-module.html" status="active" location="qtmultimedia-cpp.qdoc" documented="true" groups="modules" seen="true" title="Qt Multimedia Module C++ Classes" brief="Qt Multimedia module provides audio, video and camera functionality">
            <contents name="using-the-module" title="Using the Module" level="1"/>
            <contents name="building-with-cmake" title="Building with CMake" level="2"/>
        </module>
        <module name="QtMultimediaWidgets" href="qtmultimediawidgets-module.html" status="active" location="qtmultimediawidgets.qdoc" documented="true" seen="true" title="Qt Multimedia Widgets C++ Classes" brief="Classes provided by the Qt Multimedia Widgets module"/>
        <qmlmodule name="QtMultimedia" qml-module-name="QtMultimedia" href="qtmultimedia-qmlmodule.html" status="active" location="qtmultimedia-qml-types.qdoc" documented="true" groups="qmlmodules" seen="true" title="Qt Multimedia QML Types" brief="Provides QML types for multimedia support">
            <contents name="qml-types" title="QML Types" level="1"/>
            <contents name="qt-spatial-audio-module" title="Qt Spatial Audio Module" level="2"/>
        </qmlmodule>
    </namespace>
</INDEX>
