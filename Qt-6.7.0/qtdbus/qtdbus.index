<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="https://doc.qt.io/qt" title="Qt D-Bus Reference Documentation" version="6.7.0" project="QtDBus" indexTitle="Qt D-Bus">
    <namespace name="" status="active" access="public" module="qtdbus">
        <function name="Q_NOREPLY" href="qdbusabstractadaptor.html#Q_NOREPLY" status="active" access="public" location="dbus-adaptors.qdoc" documented="true" related="0" meta="macrowithoutparams" signature="Q_NOREPLY"/>
        <function name="qDBusRegisterMetaType" href="qdbusargument.html#qDBusRegisterMetaType" threadsafety="thread safe" status="active" access="public" location="qdbusmetatype.h" documented="true" related="1" meta="plain" type="QMetaType" signature="QMetaType qDBusRegisterMetaType()"/>
        <function name="qdbus_cast" href="qdbusargument.html#qdbus_cast" status="active" access="public" location="qdbusargument.h" documented="true" related="2" meta="plain" type="T" signature="T qdbus_cast(const QDBusArgument &amp;arg)">
            <parameter type="const QDBusArgument &amp;" name="arg" default=""/>
        </function>
        <page name="cmake-source-file-property-classname.html" href="cmake-source-file-property-classname.html" status="active" location="qtdbus-cmake.qdoc" documented="true" groups="cmake-source-file-properties-qtdbus" subtype="page" title="CLASSNAME" fulltitle="CLASSNAME" subtitle="" brief="Overrides the default interface class name">
            <target name="cmake-source-file-property-classname" title="cmake-source-file-property-CLASSNAME"/>
        </page>
        <page name="dbus-changes-qt6.html" href="dbus-changes-qt6.html" status="active" location="qt6-changes.qdoc" documented="true" groups="changes-qt-5-to-6" subtype="page" title="Changes to Qt D-Bus" fulltitle="Changes to Qt D-Bus" subtitle="" brief="Minimal porting effort to be able to switch to Qt 6">
            <contents name="api-changes" title="API changes" level="1"/>
            <contents name="the-qdbusmessage-class" title="The QDBusMessage class" level="2"/>
            <contents name="the-qdbusargument-class" title="The QDBusArgument class" level="2"/>
            <contents name="the-qdbusconnection-class" title="The QDBusConnection class" level="2"/>
            <contents name="the-qdbusmessage-class" title="The QDBusMessage class" level="2"/>
            <contents name="the-qdbuspendingreply-class" title="The QDBusPendingReply class" level="2"/>
        </page>
        <page name="chat" href="qtdbus-chat-example.html" status="active" location="chat.qdoc" documented="true" groups="category Connectivity,examples-dbus" subtype="example" title="D-Bus Chat" fulltitle="D-Bus Chat" subtitle="" brief="Demonstrates communication among instances of an application">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page name="chat/chat.cpp" href="qtdbus-chat-chat-cpp.html" status="active" subtype="file" title="" fulltitle="chat.cpp Example File" subtitle="chat/chat.cpp"/>
            <page name="chat/chat.h" href="qtdbus-chat-chat-h.html" status="active" subtype="file" title="" fulltitle="chat.h Example File" subtitle="chat/chat.h"/>
            <page name="chat/chatmainwindow.ui" href="qtdbus-chat-chatmainwindow-ui.html" status="active" subtype="file" title="" fulltitle="chatmainwindow.ui Example File" subtitle="chat/chatmainwindow.ui"/>
            <page name="chat/org.example.chat.xml" href="qtdbus-chat-org-example-chat-xml.html" status="active" subtype="file" title="" fulltitle="org.example.chat.xml Example File" subtitle="chat/org.example.chat.xml"/>
            <page name="chat/CMakeLists.txt" href="qtdbus-chat-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="chat/CMakeLists.txt"/>
            <page name="chat/chat.pro" href="qtdbus-chat-chat-pro.html" status="active" subtype="file" title="" fulltitle="chat.pro Example File" subtitle="chat/chat.pro"/>
        </page>
        <page name="complexpingpong" href="qtdbus-complexpingpong-example.html" status="active" location="complexpingpong.qdoc" documented="true" groups="category Connectivity,examples-dbus" subtype="example" title="D-Bus Complex Ping Pong" fulltitle="D-Bus Complex Ping Pong" subtitle="" brief="Demonstrates usage of the Qt D-Bus typesystem">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page name="complexpingpong/complexping.cpp" href="qtdbus-complexpingpong-complexping-cpp.html" status="active" subtype="file" title="" fulltitle="complexping.cpp Example File" subtitle="complexpingpong/complexping.cpp"/>
            <page name="complexpingpong/complexping.h" href="qtdbus-complexpingpong-complexping-h.html" status="active" subtype="file" title="" fulltitle="complexping.h Example File" subtitle="complexpingpong/complexping.h"/>
            <page name="complexpingpong/complexpong.cpp" href="qtdbus-complexpingpong-complexpong-cpp.html" status="active" subtype="file" title="" fulltitle="complexpong.cpp Example File" subtitle="complexpingpong/complexpong.cpp"/>
            <page name="complexpingpong/complexpong.h" href="qtdbus-complexpingpong-complexpong-h.html" status="active" subtype="file" title="" fulltitle="complexpong.h Example File" subtitle="complexpingpong/complexpong.h"/>
            <page name="complexpingpong/ping-common.h" href="qtdbus-complexpingpong-ping-common-h.html" status="active" subtype="file" title="" fulltitle="ping-common.h Example File" subtitle="complexpingpong/ping-common.h"/>
            <page name="complexpingpong/CMakeLists.txt" href="qtdbus-complexpingpong-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="complexpingpong/CMakeLists.txt"/>
            <page name="complexpingpong/complexping.pro" href="qtdbus-complexpingpong-complexping-pro.html" status="active" subtype="file" title="" fulltitle="complexping.pro Example File" subtitle="complexpingpong/complexping.pro"/>
            <page name="complexpingpong/complexpingpong.pro" href="qtdbus-complexpingpong-complexpingpong-pro.html" status="active" subtype="file" title="" fulltitle="complexpingpong.pro Example File" subtitle="complexpingpong/complexpingpong.pro"/>
            <page name="complexpingpong/complexpong.pro" href="qtdbus-complexpingpong-complexpong-pro.html" status="active" subtype="file" title="" fulltitle="complexpong.pro Example File" subtitle="complexpingpong/complexpong.pro"/>
        </page>
        <page name="pingpong" href="qtdbus-pingpong-example.html" status="active" location="pingpong.qdoc" documented="true" groups="category Connectivity,examples-dbus" subtype="example" title="D-Bus Ping Pong" fulltitle="D-Bus Ping Pong" subtitle="" brief="Demonstrates a simple message system using D-Bus">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page name="pingpong/ping-common.h" href="qtdbus-pingpong-ping-common-h.html" status="active" subtype="file" title="" fulltitle="ping-common.h Example File" subtitle="pingpong/ping-common.h"/>
            <page name="pingpong/ping.cpp" href="qtdbus-pingpong-ping-cpp.html" status="active" subtype="file" title="" fulltitle="ping.cpp Example File" subtitle="pingpong/ping.cpp"/>
            <page name="pingpong/pong.cpp" href="qtdbus-pingpong-pong-cpp.html" status="active" subtype="file" title="" fulltitle="pong.cpp Example File" subtitle="pingpong/pong.cpp"/>
            <page name="pingpong/CMakeLists.txt" href="qtdbus-pingpong-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="pingpong/CMakeLists.txt"/>
            <page name="pingpong/ping.pro" href="qtdbus-pingpong-ping-pro.html" status="active" subtype="file" title="" fulltitle="ping.pro Example File" subtitle="pingpong/ping.pro"/>
            <page name="pingpong/pingpong.pro" href="qtdbus-pingpong-pingpong-pro.html" status="active" subtype="file" title="" fulltitle="pingpong.pro Example File" subtitle="pingpong/pingpong.pro"/>
            <page name="pingpong/pong.pro" href="qtdbus-pingpong-pong-pro.html" status="active" subtype="file" title="" fulltitle="pong.pro Example File" subtitle="pingpong/pong.pro"/>
        </page>
        <page name="remotecontrolledcar" href="qtdbus-remotecontrolledcar-example.html" status="active" location="dbus-remotecontrolledcar.qdoc" documented="true" groups="category Connectivity,examples-dbus" subtype="example" title="D-Bus Remote Controlled Car" fulltitle="D-Bus Remote Controlled Car" subtitle="" brief="Shows how to use Qt D-Bus to control a car from another application">
            <contents name="running-the-example" title="Running the Example" level="1"/>
            <page name="remotecontrolledcar/car/car.cpp" href="qtdbus-remotecontrolledcar-car-car-cpp.html" status="active" subtype="file" title="" fulltitle="car.cpp Example File" subtitle="remotecontrolledcar/car/car.cpp"/>
            <page name="remotecontrolledcar/car/car.h" href="qtdbus-remotecontrolledcar-car-car-h.html" status="active" subtype="file" title="" fulltitle="car.h Example File" subtitle="remotecontrolledcar/car/car.h"/>
            <page name="remotecontrolledcar/common/car.xml" href="qtdbus-remotecontrolledcar-common-car-xml.html" status="active" subtype="file" title="" fulltitle="car.xml Example File" subtitle="remotecontrolledcar/common/car.xml"/>
            <page name="remotecontrolledcar/controller/connected.svg" href="qtdbus-remotecontrolledcar-controller-connected-svg.html" status="active" subtype="file" title="" fulltitle="connected.svg Example File" subtitle="remotecontrolledcar/controller/connected.svg"/>
            <page name="remotecontrolledcar/controller/connecting.svg" href="qtdbus-remotecontrolledcar-controller-connecting-svg.html" status="active" subtype="file" title="" fulltitle="connecting.svg Example File" subtitle="remotecontrolledcar/controller/connecting.svg"/>
            <page name="remotecontrolledcar/controller/controller.cpp" href="qtdbus-remotecontrolledcar-controller-controller-cpp.html" status="active" subtype="file" title="" fulltitle="controller.cpp Example File" subtitle="remotecontrolledcar/controller/controller.cpp"/>
            <page name="remotecontrolledcar/controller/controller.h" href="qtdbus-remotecontrolledcar-controller-controller-h.html" status="active" subtype="file" title="" fulltitle="controller.h Example File" subtitle="remotecontrolledcar/controller/controller.h"/>
            <page name="remotecontrolledcar/controller/down.svg" href="qtdbus-remotecontrolledcar-controller-down-svg.html" status="active" subtype="file" title="" fulltitle="down.svg Example File" subtitle="remotecontrolledcar/controller/down.svg"/>
            <page name="remotecontrolledcar/controller/left.svg" href="qtdbus-remotecontrolledcar-controller-left-svg.html" status="active" subtype="file" title="" fulltitle="left.svg Example File" subtitle="remotecontrolledcar/controller/left.svg"/>
            <page name="remotecontrolledcar/controller/right.svg" href="qtdbus-remotecontrolledcar-controller-right-svg.html" status="active" subtype="file" title="" fulltitle="right.svg Example File" subtitle="remotecontrolledcar/controller/right.svg"/>
            <page name="remotecontrolledcar/controller/up.svg" href="qtdbus-remotecontrolledcar-controller-up-svg.html" status="active" subtype="file" title="" fulltitle="up.svg Example File" subtitle="remotecontrolledcar/controller/up.svg"/>
            <page name="remotecontrolledcar/car/main.cpp" href="qtdbus-remotecontrolledcar-car-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="remotecontrolledcar/car/main.cpp"/>
            <page name="remotecontrolledcar/CMakeLists.txt" href="qtdbus-remotecontrolledcar-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="remotecontrolledcar/CMakeLists.txt"/>
            <page name="remotecontrolledcar/remotecontrolledcar.pro" href="qtdbus-remotecontrolledcar-remotecontrolledcar-pro.html" status="active" subtype="file" title="" fulltitle="remotecontrolledcar.pro Example File" subtitle="remotecontrolledcar/remotecontrolledcar.pro"/>
            <page name="remotecontrolledcar/car/CMakeLists.txt" href="qtdbus-remotecontrolledcar-car-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="remotecontrolledcar/car/CMakeLists.txt"/>
            <page name="remotecontrolledcar/car/car.pro" href="qtdbus-remotecontrolledcar-car-car-pro.html" status="active" subtype="file" title="" fulltitle="car.pro Example File" subtitle="remotecontrolledcar/car/car.pro"/>
            <page name="remotecontrolledcar/controller/CMakeLists.txt" href="qtdbus-remotecontrolledcar-controller-cmakelists-txt.html" status="active" subtype="file" title="" fulltitle="CMakeLists.txt Example File" subtitle="remotecontrolledcar/controller/CMakeLists.txt"/>
            <page name="remotecontrolledcar/controller/controller.pro" href="qtdbus-remotecontrolledcar-controller-controller-pro.html" status="active" subtype="file" title="" fulltitle="controller.pro Example File" subtitle="remotecontrolledcar/controller/controller.pro"/>
            <page name="remotecontrolledcar/controller/icons.qrc" href="qtdbus-remotecontrolledcar-controller-icons-qrc.html" status="active" subtype="file" title="" fulltitle="icons.qrc Example File" subtitle="remotecontrolledcar/controller/icons.qrc"/>
        </page>
        <page name="qdbusviewer.html" href="qdbusviewer.html" status="active" location="qtdbus-index.qdoc" documented="true" subtype="page" title="D-Bus Viewer" fulltitle="D-Bus Viewer" subtitle="">
            <keyword name="qdbusviewer"/>
        </page>
        <page name="qdbusdeclaringsignals.html" href="qdbusdeclaringsignals.html" status="active" location="dbus-adaptors.qdoc" documented="true" subtype="page" title="Declaring Signals in D-Bus Adaptors" fulltitle="Declaring Signals in D-Bus Adaptors" subtitle=""/>
        <page name="qdbusdeclaringslots.html" href="qdbusdeclaringslots.html" status="active" location="dbus-adaptors.qdoc" documented="true" subtype="page" title="Declaring Slots in D-Bus Adaptors" fulltitle="Declaring Slots in D-Bus Adaptors" subtitle="">
            <contents name="asynchronous-slots" title="Asynchronous Slots" level="1"/>
            <contents name="input-only-slots" title="Input-Only Slots" level="1"/>
            <contents name="input-and-output-slots" title="Input and Output Slots" level="1"/>
            <contents name="automatic-replies" title="Automatic Replies" level="1"/>
            <contents name="delayed-replies" title="Delayed Replies" level="1"/>
        </page>
        <page name="cmake-source-file-property-include.html" href="cmake-source-file-property-include.html" status="active" location="qtdbus-cmake.qdoc" documented="true" groups="cmake-source-file-properties-qtdbus" subtype="page" title="INCLUDE" fulltitle="INCLUDE" subtitle="" brief="Adds an include path">
            <target name="cmake-source-file-property-include" title="cmake-source-file-property-INCLUDE"/>
        </page>
        <page name="cmake-source-file-property-no-namespace.html" href="cmake-source-file-property-no-namespace.html" status="active" location="qtdbus-cmake.qdoc" documented="true" groups="cmake-source-file-properties-qtdbus" subtype="page" title="NO_NAMESPACE" fulltitle="NO_NAMESPACE" subtitle="" brief="Disables generation of a namespaced name">
            <target name="cmake-source-file-property-no-namespace" title="cmake-source-file-property-NO_NAMESPACE"/>
        </page>
        <namespace name="QDBus" href="qdbus.html" status="active" access="public" location="qdbusconnection.h" documented="true" module="QtDBus" brief="Contains miscellaneous identifiers used throughout the Qt D-Bus module">
            <enum name="CallMode" fullname="QDBus::CallMode" href="qdbus.html#CallMode-enum" status="active" access="public" location="qdbusconnection.h" documented="true">
                <value name="NoBlock" value="0"/>
                <value name="Block" value="1"/>
                <value name="BlockWithGui" value="2"/>
                <value name="AutoDetect" value="3"/>
            </enum>
        </namespace>
        <class name="QDBusAbstractAdaptor" href="qdbusabstractadaptor.html" status="active" access="public" location="qdbusabstractadaptor.h" documented="true" bases="QObject" module="QtDBus" brief="The base class of D-Bus adaptor classes">
            <function name="QDBusAbstractAdaptor" fullname="QDBusAbstractAdaptor::QDBusAbstractAdaptor" href="qdbusabstractadaptor.html#QDBusAbstractAdaptor" status="active" access="protected" location="qdbusabstractadaptor.h" documented="true" meta="constructor" explicit="true" signature="QDBusAbstractAdaptor(QObject *obj)">
                <parameter type="QObject *" name="obj" default=""/>
            </function>
            <function name="Q_NOREPLY" href="qdbusabstractadaptor.html#Q_NOREPLY" status="active" access="public" location="dbus-adaptors.qdoc" documented="true" related="0" meta="macrowithoutparams" signature="Q_NOREPLY"/>
            <function name="autoRelaySignals" fullname="QDBusAbstractAdaptor::autoRelaySignals" href="qdbusabstractadaptor.html#autoRelaySignals" status="active" access="protected" location="qdbusabstractadaptor.h" documented="true" meta="plain" const="true" type="bool" signature="bool autoRelaySignals() const"/>
            <function name="setAutoRelaySignals" fullname="QDBusAbstractAdaptor::setAutoRelaySignals" href="qdbusabstractadaptor.html#setAutoRelaySignals" status="active" access="protected" location="qdbusabstractadaptor.h" documented="true" meta="plain" type="void" signature="void setAutoRelaySignals(bool enable)">
                <parameter type="bool" name="enable" default=""/>
            </function>
            <function name="~QDBusAbstractAdaptor" fullname="QDBusAbstractAdaptor::~QDBusAbstractAdaptor" href="qdbusabstractadaptor.html#dtor.QDBusAbstractAdaptor" status="active" access="public" location="qdbusabstractadaptor.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QDBusAbstractAdaptor()"/>
        </class>
        <class name="QDBusAbstractInterface" href="qdbusabstractinterface.html" status="active" access="public" location="qdbusabstractinterface.h" documented="true" bases="QObject" module="QtDBus" brief="The base class for all D-Bus interfaces in the Qt D-Bus binding, allowing access to remote interfaces">
            <function name="asyncCall" fullname="QDBusAbstractInterface::asyncCall" href="qdbusabstractinterface.html#asyncCall-1" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" overload="true" overload-number="1" type="QDBusPendingCall" signature="QDBusPendingCall asyncCall(const QString &amp;method, Args &amp;&amp;... args)">
                <parameter type="const QString &amp;" name="method" default=""/>
                <parameter type="Args &amp;&amp;..." name="args" default=""/>
            </function>
            <function name="asyncCallWithArgumentList" fullname="QDBusAbstractInterface::asyncCallWithArgumentList" href="qdbusabstractinterface.html#asyncCallWithArgumentList" threadsafety="thread safe" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" type="QDBusPendingCall" signature="QDBusPendingCall asyncCallWithArgumentList(const QString &amp;method, const QList&lt;QVariant&gt; &amp;args)">
                <parameter type="const QString &amp;" name="method" default=""/>
                <parameter type="const QList&lt;QVariant&gt; &amp;" name="args" default=""/>
            </function>
            <function name="call" fullname="QDBusAbstractInterface::call" href="qdbusabstractinterface.html#call-1" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" overload="true" overload-number="1" type="QDBusMessage" signature="QDBusMessage call(const QString &amp;method, Args &amp;&amp;... args)">
                <parameter type="const QString &amp;" name="method" default=""/>
                <parameter type="Args &amp;&amp;..." name="args" default=""/>
            </function>
            <function name="call" fullname="QDBusAbstractInterface::call" href="qdbusabstractinterface.html#call-3" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" overload="true" overload-number="3" type="QDBusMessage" signature="QDBusMessage call(QDBus::CallMode mode, const QString &amp;method, Args &amp;&amp;... args)">
                <parameter type="QDBus::CallMode" name="mode" default=""/>
                <parameter type="const QString &amp;" name="method" default=""/>
                <parameter type="Args &amp;&amp;..." name="args" default=""/>
            </function>
            <function name="callWithArgumentList" fullname="QDBusAbstractInterface::callWithArgumentList" href="qdbusabstractinterface.html#callWithArgumentList" threadsafety="thread safe" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" type="QDBusMessage" signature="QDBusMessage callWithArgumentList(QDBus::CallMode mode, const QString &amp;method, const QList&lt;QVariant&gt; &amp;args)">
                <parameter type="QDBus::CallMode" name="mode" default=""/>
                <parameter type="const QString &amp;" name="method" default=""/>
                <parameter type="const QList&lt;QVariant&gt; &amp;" name="args" default=""/>
            </function>
            <function name="callWithCallback" fullname="QDBusAbstractInterface::callWithCallback" href="qdbusabstractinterface.html#callWithCallback" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" type="bool" signature="bool callWithCallback(const QString &amp;method, const QList&lt;QVariant&gt; &amp;args, QObject *receiver, const char *returnMethod, const char *errorMethod)">
                <parameter type="const QString &amp;" name="method" default=""/>
                <parameter type="const QList&lt;QVariant&gt; &amp;" name="args" default=""/>
                <parameter type="QObject *" name="receiver" default=""/>
                <parameter type="const char *" name="returnMethod" default=""/>
                <parameter type="const char *" name="errorMethod" default=""/>
            </function>
            <function name="callWithCallback" fullname="QDBusAbstractInterface::callWithCallback" href="qdbusabstractinterface.html#callWithCallback-1" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" overload="true" overload-number="1" type="bool" signature="bool callWithCallback(const QString &amp;method, const QList&lt;QVariant&gt; &amp;args, QObject *receiver, const char *slot)">
                <parameter type="const QString &amp;" name="method" default=""/>
                <parameter type="const QList&lt;QVariant&gt; &amp;" name="args" default=""/>
                <parameter type="QObject *" name="receiver" default=""/>
                <parameter type="const char *" name="slot" default=""/>
            </function>
            <function name="connection" fullname="QDBusAbstractInterface::connection" href="qdbusabstractinterface.html#connection" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" const="true" type="QDBusConnection" signature="QDBusConnection connection() const"/>
            <function name="interface" fullname="QDBusAbstractInterface::interface" href="qdbusabstractinterface.html#interface" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" const="true" type="QString" signature="QString interface() const"/>
            <function name="isInteractiveAuthorizationAllowed" fullname="QDBusAbstractInterface::isInteractiveAuthorizationAllowed" href="qdbusabstractinterface.html#isInteractiveAuthorizationAllowed" status="active" access="public" location="qdbusabstractinterface.h" documented="true" since="6.7" meta="plain" const="true" type="bool" signature="bool isInteractiveAuthorizationAllowed() const"/>
            <function name="isValid" fullname="QDBusAbstractInterface::isValid" href="qdbusabstractinterface.html#isValid" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" const="true" type="bool" signature="bool isValid() const"/>
            <function name="lastError" fullname="QDBusAbstractInterface::lastError" href="qdbusabstractinterface.html#lastError" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" const="true" type="QDBusError" signature="QDBusError lastError() const"/>
            <function name="path" fullname="QDBusAbstractInterface::path" href="qdbusabstractinterface.html#path" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" const="true" type="QString" signature="QString path() const"/>
            <function name="service" fullname="QDBusAbstractInterface::service" href="qdbusabstractinterface.html#service" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" const="true" type="QString" signature="QString service() const"/>
            <function name="setInteractiveAuthorizationAllowed" fullname="QDBusAbstractInterface::setInteractiveAuthorizationAllowed" href="qdbusabstractinterface.html#setInteractiveAuthorizationAllowed" status="active" access="public" location="qdbusabstractinterface.h" documented="true" since="6.7" meta="plain" type="void" signature="void setInteractiveAuthorizationAllowed(bool enable)">
                <parameter type="bool" name="enable" default=""/>
            </function>
            <function name="setTimeout" fullname="QDBusAbstractInterface::setTimeout" href="qdbusabstractinterface.html#setTimeout" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" type="void" signature="void setTimeout(int timeout)">
                <parameter type="int" name="timeout" default=""/>
            </function>
            <function name="timeout" fullname="QDBusAbstractInterface::timeout" href="qdbusabstractinterface.html#timeout" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="plain" const="true" type="int" signature="int timeout() const"/>
            <function name="~QDBusAbstractInterface" fullname="QDBusAbstractInterface::~QDBusAbstractInterface" href="qdbusabstractinterface.html#dtor.QDBusAbstractInterface" status="active" access="public" location="qdbusabstractinterface.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QDBusAbstractInterface()"/>
        </class>
        <class name="QDBusAbstractInterfaceBase" href="qdbusabstractinterfacebase.html" status="ignored" access="public" location="qdbusabstractinterface.h" bases="QObject"/>
        <class name="QDBusArgument" href="qdbusargument.html" status="active" access="public" location="qdbusargument.h" documented="true" module="QtDBus" brief="Used to marshall and demarshall D-Bus arguments">
            <function name="QDBusArgument" fullname="QDBusArgument::QDBusArgument" href="qdbusargument.html#QDBusArgument" status="active" access="public" location="qdbusargument.h" documented="true" meta="constructor" signature="QDBusArgument()"/>
            <function name="QDBusArgument" fullname="QDBusArgument::QDBusArgument" href="qdbusargument.html#QDBusArgument-1" status="active" access="public" location="qdbusargument.h" documented="true" meta="copy-constructor" overload="true" overload-number="1" signature="QDBusArgument(const QDBusArgument &amp;other)">
                <parameter type="const QDBusArgument &amp;" name="other" default=""/>
            </function>
            <function name="asVariant" fullname="QDBusArgument::asVariant" href="qdbusargument.html#asVariant" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" type="QVariant" signature="QVariant asVariant() const"/>
            <function name="atEnd" fullname="QDBusArgument::atEnd" href="qdbusargument.html#atEnd" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" type="bool" signature="bool atEnd() const"/>
            <function name="beginArray" fullname="QDBusArgument::beginArray" href="qdbusargument.html#beginArray-1" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void beginArray(QMetaType id)">
                <parameter type="QMetaType" name="id" default=""/>
            </function>
            <function name="beginArray" fullname="QDBusArgument::beginArray" href="qdbusargument.html#beginArray-2" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="2" type="void" signature="void beginArray() const"/>
            <function name="beginMap" fullname="QDBusArgument::beginMap" href="qdbusargument.html#beginMap-1" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void beginMap(QMetaType keyMetaType, QMetaType valueMetaType)">
                <parameter type="QMetaType" name="keyMetaType" default=""/>
                <parameter type="QMetaType" name="valueMetaType" default=""/>
            </function>
            <function name="beginMap" fullname="QDBusArgument::beginMap" href="qdbusargument.html#beginMap-2" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="2" type="void" signature="void beginMap() const"/>
            <function name="beginMapEntry" fullname="QDBusArgument::beginMapEntry" href="qdbusargument.html#beginMapEntry" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" type="void" signature="void beginMapEntry()"/>
            <function name="beginMapEntry" fullname="QDBusArgument::beginMapEntry" href="qdbusargument.html#beginMapEntry-1" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="void" signature="void beginMapEntry() const"/>
            <function name="beginStructure" fullname="QDBusArgument::beginStructure" href="qdbusargument.html#beginStructure" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" type="void" signature="void beginStructure()"/>
            <function name="beginStructure" fullname="QDBusArgument::beginStructure" href="qdbusargument.html#beginStructure-1" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="void" signature="void beginStructure() const"/>
            <function name="currentType" fullname="QDBusArgument::currentType" href="qdbusargument.html#currentType" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" type="QDBusArgument::ElementType" signature="QDBusArgument::ElementType currentType() const"/>
            <function name="endArray" fullname="QDBusArgument::endArray" href="qdbusargument.html#endArray" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" type="void" signature="void endArray()"/>
            <function name="endArray" fullname="QDBusArgument::endArray" href="qdbusargument.html#endArray-1" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="void" signature="void endArray() const"/>
            <function name="endMap" fullname="QDBusArgument::endMap" href="qdbusargument.html#endMap" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" type="void" signature="void endMap()"/>
            <function name="endMap" fullname="QDBusArgument::endMap" href="qdbusargument.html#endMap-1" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="void" signature="void endMap() const"/>
            <function name="endMapEntry" fullname="QDBusArgument::endMapEntry" href="qdbusargument.html#endMapEntry" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" type="void" signature="void endMapEntry()"/>
            <function name="endMapEntry" fullname="QDBusArgument::endMapEntry" href="qdbusargument.html#endMapEntry-1" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="void" signature="void endMapEntry() const"/>
            <function name="endStructure" fullname="QDBusArgument::endStructure" href="qdbusargument.html#endStructure" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" type="void" signature="void endStructure()"/>
            <function name="endStructure" fullname="QDBusArgument::endStructure" href="qdbusargument.html#endStructure-1" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="void" signature="void endStructure() const"/>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(uchar arg)">
                <parameter type="uchar" name="arg" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt-1" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="1" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(bool arg)">
                <parameter type="bool" name="arg" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt-2" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="2" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(short arg)">
                <parameter type="short" name="arg" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt-3" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="3" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(ushort arg)">
                <parameter type="ushort" name="arg" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt-4" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="4" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(int arg)">
                <parameter type="int" name="arg" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt-5" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="5" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(uint arg)">
                <parameter type="uint" name="arg" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt-6" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="6" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(qlonglong arg)">
                <parameter type="qlonglong" name="arg" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt-7" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="7" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(qulonglong arg)">
                <parameter type="qulonglong" name="arg" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt-8" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="8" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(double arg)">
                <parameter type="double" name="arg" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt-9" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="9" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(const QString &amp;arg)">
                <parameter type="const QString &amp;" name="arg" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt-10" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="10" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(const QDBusVariant &amp;arg)">
                <parameter type="const QDBusVariant &amp;" name="arg" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt-11" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="11" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(const QStringList &amp;arg)">
                <parameter type="const QStringList &amp;" name="arg" default=""/>
            </function>
            <function name="operator&lt;&lt;" fullname="QDBusArgument::operator&lt;&lt;" href="qdbusargument.html#operator-lt-lt-12" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" overload="true" overload-number="12" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator&lt;&lt;(const QByteArray &amp;arg)">
                <parameter type="const QByteArray &amp;" name="arg" default=""/>
            </function>
            <function name="operator=" fullname="QDBusArgument::operator=" href="qdbusargument.html#operator-eq-1" status="active" access="public" location="qdbusargument.h" documented="true" meta="copy-assign" overload="true" overload-number="1" type="QDBusArgument &amp;" signature="QDBusArgument &amp; operator=(const QDBusArgument &amp;other)">
                <parameter type="const QDBusArgument &amp;" name="other" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(uchar &amp;arg) const">
                <parameter type="uchar &amp;" name="arg" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt-1" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(bool &amp;arg) const">
                <parameter type="bool &amp;" name="arg" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt-2" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="2" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(short &amp;arg) const">
                <parameter type="short &amp;" name="arg" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt-3" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="3" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(ushort &amp;arg) const">
                <parameter type="ushort &amp;" name="arg" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt-4" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="4" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(int &amp;arg) const">
                <parameter type="int &amp;" name="arg" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt-5" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="5" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(uint &amp;arg) const">
                <parameter type="uint &amp;" name="arg" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt-6" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="6" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(qlonglong &amp;arg) const">
                <parameter type="qlonglong &amp;" name="arg" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt-7" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="7" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(qulonglong &amp;arg) const">
                <parameter type="qulonglong &amp;" name="arg" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt-8" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="8" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(double &amp;arg) const">
                <parameter type="double &amp;" name="arg" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt-9" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="9" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(QString &amp;arg) const">
                <parameter type="QString &amp;" name="arg" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt-10" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="10" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(QDBusVariant &amp;arg) const">
                <parameter type="QDBusVariant &amp;" name="arg" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt-11" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="11" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(QStringList &amp;arg) const">
                <parameter type="QStringList &amp;" name="arg" default=""/>
            </function>
            <function name="operator&gt;&gt;" fullname="QDBusArgument::operator&gt;&gt;" href="qdbusargument.html#operator-gt-gt-12" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" const="true" overload="true" overload-number="12" type="const QDBusArgument &amp;" signature="const QDBusArgument &amp; operator&gt;&gt;(QByteArray &amp;arg) const">
                <parameter type="QByteArray &amp;" name="arg" default=""/>
            </function>
            <function name="qDBusRegisterMetaType" href="qdbusargument.html#qDBusRegisterMetaType" threadsafety="thread safe" status="active" access="public" location="qdbusmetatype.h" documented="true" related="1" meta="plain" type="QMetaType" signature="QMetaType qDBusRegisterMetaType()"/>
            <function name="qdbus_cast" href="qdbusargument.html#qdbus_cast" status="active" access="public" location="qdbusargument.h" documented="true" related="2" meta="plain" type="T" signature="T qdbus_cast(const QDBusArgument &amp;arg)">
                <parameter type="const QDBusArgument &amp;" name="arg" default=""/>
            </function>
            <function name="swap" fullname="QDBusArgument::swap" href="qdbusargument.html#swap" status="active" access="public" location="qdbusargument.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QDBusArgument &amp;other)">
                <parameter type="QDBusArgument &amp;" name="other" default=""/>
            </function>
            <function name="~QDBusArgument" fullname="QDBusArgument::~QDBusArgument" href="qdbusargument.html#dtor.QDBusArgument" status="active" access="public" location="qdbusargument.h" documented="true" meta="destructor" noexcept="true" signature="~QDBusArgument()"/>
            <enum name="ElementType" fullname="QDBusArgument::ElementType" href="qdbusargument.html#ElementType-enum" status="active" access="public" location="qdbusargument.h" documented="true">
                <value name="BasicType" value="0"/>
                <value name="VariantType" value="1"/>
                <value name="ArrayType" value="2"/>
                <value name="StructureType" value="3"/>
                <value name="MapType" value="4"/>
                <value name="MapEntryType" value="5"/>
                <value name="UnknownType" value="-1"/>
            </enum>
        </class>
        <class name="QDBusConnection" href="qdbusconnection.html" status="active" access="public" location="qdbusconnection.h" documented="true" module="QtDBus" brief="Represents a connection to the D-Bus bus daemon">
            <function name="QDBusConnection" fullname="QDBusConnection::QDBusConnection" href="qdbusconnection.html#QDBusConnection" status="active" access="public" location="qdbusconnection.h" documented="true" meta="constructor" explicit="true" signature="QDBusConnection(const QString &amp;name)">
                <parameter type="const QString &amp;" name="name" default=""/>
            </function>
            <function name="QDBusConnection" fullname="QDBusConnection::QDBusConnection" href="qdbusconnection.html#QDBusConnection-1" status="active" access="public" location="qdbusconnection.h" documented="true" meta="copy-constructor" overload="true" overload-number="1" signature="QDBusConnection(const QDBusConnection &amp;other)">
                <parameter type="const QDBusConnection &amp;" name="other" default=""/>
            </function>
            <function name="asyncCall" fullname="QDBusConnection::asyncCall" href="qdbusconnection.html#asyncCall" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" const="true" type="QDBusPendingCall" signature="QDBusPendingCall asyncCall(const QDBusMessage &amp;message, int timeout) const">
                <parameter type="const QDBusMessage &amp;" name="message" default=""/>
                <parameter type="int" name="timeout" default="-1"/>
            </function>
            <function name="baseService" fullname="QDBusConnection::baseService" href="qdbusconnection.html#baseService" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" const="true" type="QString" signature="QString baseService() const"/>
            <function name="call" fullname="QDBusConnection::call" href="qdbusconnection.html#call" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" const="true" type="QDBusMessage" signature="QDBusMessage call(const QDBusMessage &amp;message, QDBus::CallMode mode, int timeout) const">
                <parameter type="const QDBusMessage &amp;" name="message" default=""/>
                <parameter type="QDBus::CallMode" name="mode" default="QDBus::Block"/>
                <parameter type="int" name="timeout" default="-1"/>
            </function>
            <function name="callWithCallback" fullname="QDBusConnection::callWithCallback" href="qdbusconnection.html#callWithCallback" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" const="true" type="bool" signature="bool callWithCallback(const QDBusMessage &amp;message, QObject *receiver, const char *returnMethod, const char *errorMethod, int timeout) const">
                <parameter type="const QDBusMessage &amp;" name="message" default=""/>
                <parameter type="QObject *" name="receiver" default=""/>
                <parameter type="const char *" name="returnMethod" default=""/>
                <parameter type="const char *" name="errorMethod" default=""/>
                <parameter type="int" name="timeout" default="-1"/>
            </function>
            <function name="callWithCallback" fullname="QDBusConnection::callWithCallback" href="qdbusconnection-obsolete.html#callWithCallback-1" status="deprecated" access="public" location="qdbusconnection.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="bool" signature="bool callWithCallback(const QDBusMessage &amp;message, QObject *receiver, const char *returnMethod, int timeout) const">
                <parameter type="const QDBusMessage &amp;" name="message" default=""/>
                <parameter type="QObject *" name="receiver" default=""/>
                <parameter type="const char *" name="returnMethod" default=""/>
                <parameter type="int" name="timeout" default="-1"/>
            </function>
            <function name="connect" fullname="QDBusConnection::connect" href="qdbusconnection.html#connect" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" type="bool" signature="bool connect(const QString &amp;service, const QString &amp;path, const QString &amp;interface, const QString &amp;name, QObject *receiver, const char *slot)">
                <parameter type="const QString &amp;" name="service" default=""/>
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="const QString &amp;" name="interface" default=""/>
                <parameter type="const QString &amp;" name="name" default=""/>
                <parameter type="QObject *" name="receiver" default=""/>
                <parameter type="const char *" name="slot" default=""/>
            </function>
            <function name="connect" fullname="QDBusConnection::connect" href="qdbusconnection.html#connect-1" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" overload="true" overload-number="1" type="bool" signature="bool connect(const QString &amp;service, const QString &amp;path, const QString &amp;interface, const QString &amp;name, const QString &amp;signature, QObject *receiver, const char *slot)">
                <parameter type="const QString &amp;" name="service" default=""/>
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="const QString &amp;" name="interface" default=""/>
                <parameter type="const QString &amp;" name="name" default=""/>
                <parameter type="const QString &amp;" name="signature" default=""/>
                <parameter type="QObject *" name="receiver" default=""/>
                <parameter type="const char *" name="slot" default=""/>
            </function>
            <function name="connect" fullname="QDBusConnection::connect" href="qdbusconnection.html#connect-2" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" overload="true" overload-number="2" type="bool" signature="bool connect(const QString &amp;service, const QString &amp;path, const QString &amp;interface, const QString &amp;name, const QStringList &amp;argumentMatch, const QString &amp;signature, QObject *receiver, const char *slot)">
                <parameter type="const QString &amp;" name="service" default=""/>
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="const QString &amp;" name="interface" default=""/>
                <parameter type="const QString &amp;" name="name" default=""/>
                <parameter type="const QStringList &amp;" name="argumentMatch" default=""/>
                <parameter type="const QString &amp;" name="signature" default=""/>
                <parameter type="QObject *" name="receiver" default=""/>
                <parameter type="const char *" name="slot" default=""/>
            </function>
            <function name="connectToBus" fullname="QDBusConnection::connectToBus" href="qdbusconnection.html#connectToBus" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" static="true" type="QDBusConnection" signature="QDBusConnection connectToBus(QDBusConnection::BusType type, const QString &amp;name)">
                <parameter type="QDBusConnection::BusType" name="type" default=""/>
                <parameter type="const QString &amp;" name="name" default=""/>
            </function>
            <function name="connectToBus" fullname="QDBusConnection::connectToBus" href="qdbusconnection.html#connectToBus-1" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" static="true" overload="true" overload-number="1" type="QDBusConnection" signature="QDBusConnection connectToBus(const QString &amp;address, const QString &amp;name)">
                <parameter type="const QString &amp;" name="address" default=""/>
                <parameter type="const QString &amp;" name="name" default=""/>
            </function>
            <function name="connectToPeer" fullname="QDBusConnection::connectToPeer" href="qdbusconnection.html#connectToPeer" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" static="true" type="QDBusConnection" signature="QDBusConnection connectToPeer(const QString &amp;address, const QString &amp;name)">
                <parameter type="const QString &amp;" name="address" default=""/>
                <parameter type="const QString &amp;" name="name" default=""/>
            </function>
            <function name="connectionCapabilities" fullname="QDBusConnection::connectionCapabilities" href="qdbusconnection.html#connectionCapabilities" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" const="true" type="QDBusConnection::ConnectionCapabilities" signature="QDBusConnection::ConnectionCapabilities connectionCapabilities() const"/>
            <function name="disconnect" fullname="QDBusConnection::disconnect" href="qdbusconnection.html#disconnect" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" type="bool" signature="bool disconnect(const QString &amp;service, const QString &amp;path, const QString &amp;interface, const QString &amp;name, QObject *receiver, const char *slot)">
                <parameter type="const QString &amp;" name="service" default=""/>
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="const QString &amp;" name="interface" default=""/>
                <parameter type="const QString &amp;" name="name" default=""/>
                <parameter type="QObject *" name="receiver" default=""/>
                <parameter type="const char *" name="slot" default=""/>
            </function>
            <function name="disconnect" fullname="QDBusConnection::disconnect" href="qdbusconnection.html#disconnect-1" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" overload="true" overload-number="1" type="bool" signature="bool disconnect(const QString &amp;service, const QString &amp;path, const QString &amp;interface, const QString &amp;name, const QString &amp;signature, QObject *receiver, const char *slot)">
                <parameter type="const QString &amp;" name="service" default=""/>
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="const QString &amp;" name="interface" default=""/>
                <parameter type="const QString &amp;" name="name" default=""/>
                <parameter type="const QString &amp;" name="signature" default=""/>
                <parameter type="QObject *" name="receiver" default=""/>
                <parameter type="const char *" name="slot" default=""/>
            </function>
            <function name="disconnect" fullname="QDBusConnection::disconnect" href="qdbusconnection.html#disconnect-2" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" overload="true" overload-number="2" type="bool" signature="bool disconnect(const QString &amp;service, const QString &amp;path, const QString &amp;interface, const QString &amp;name, const QStringList &amp;argumentMatch, const QString &amp;signature, QObject *receiver, const char *slot)">
                <parameter type="const QString &amp;" name="service" default=""/>
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="const QString &amp;" name="interface" default=""/>
                <parameter type="const QString &amp;" name="name" default=""/>
                <parameter type="const QStringList &amp;" name="argumentMatch" default=""/>
                <parameter type="const QString &amp;" name="signature" default=""/>
                <parameter type="QObject *" name="receiver" default=""/>
                <parameter type="const char *" name="slot" default=""/>
            </function>
            <function name="disconnectFromBus" fullname="QDBusConnection::disconnectFromBus" href="qdbusconnection.html#disconnectFromBus" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" static="true" type="void" signature="void disconnectFromBus(const QString &amp;name)">
                <parameter type="const QString &amp;" name="name" default=""/>
            </function>
            <function name="disconnectFromPeer" fullname="QDBusConnection::disconnectFromPeer" href="qdbusconnection.html#disconnectFromPeer" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" static="true" type="void" signature="void disconnectFromPeer(const QString &amp;name)">
                <parameter type="const QString &amp;" name="name" default=""/>
            </function>
            <function name="interface" fullname="QDBusConnection::interface" href="qdbusconnection.html#interface" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" const="true" type="QDBusConnectionInterface *" signature="QDBusConnectionInterface * interface() const"/>
            <function name="isConnected" fullname="QDBusConnection::isConnected" href="qdbusconnection.html#isConnected" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" const="true" type="bool" signature="bool isConnected() const"/>
            <function name="lastError" fullname="QDBusConnection::lastError" href="qdbusconnection.html#lastError" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" const="true" type="QDBusError" signature="QDBusError lastError() const"/>
            <function name="localMachineId" fullname="QDBusConnection::localMachineId" href="qdbusconnection.html#localMachineId" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" static="true" type="QByteArray" signature="QByteArray localMachineId()"/>
            <function name="name" fullname="QDBusConnection::name" href="qdbusconnection.html#name" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" const="true" type="QString" signature="QString name() const"/>
            <function name="objectRegisteredAt" fullname="QDBusConnection::objectRegisteredAt" href="qdbusconnection.html#objectRegisteredAt" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" const="true" type="QObject *" signature="QObject * objectRegisteredAt(const QString &amp;path) const">
                <parameter type="const QString &amp;" name="path" default=""/>
            </function>
            <function name="operator=" fullname="QDBusConnection::operator=" href="qdbusconnection.html#operator-eq-1" status="active" access="public" location="qdbusconnection.h" documented="true" meta="copy-assign" overload="true" overload-number="1" type="QDBusConnection &amp;" signature="QDBusConnection &amp; operator=(const QDBusConnection &amp;other)">
                <parameter type="const QDBusConnection &amp;" name="other" default=""/>
            </function>
            <function name="registerObject" fullname="QDBusConnection::registerObject" href="qdbusconnection.html#registerObject" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" type="bool" signature="bool registerObject(const QString &amp;path, QObject *object, QDBusConnection::RegisterOptions options)">
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="QObject *" name="object" default=""/>
                <parameter type="QDBusConnection::RegisterOptions" name="options" default="ExportAdaptors"/>
            </function>
            <function name="registerObject" fullname="QDBusConnection::registerObject" href="qdbusconnection.html#registerObject-1" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" overload="true" overload-number="1" type="bool" signature="bool registerObject(const QString &amp;path, const QString &amp;interface, QObject *object, QDBusConnection::RegisterOptions options)">
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="const QString &amp;" name="interface" default=""/>
                <parameter type="QObject *" name="object" default=""/>
                <parameter type="QDBusConnection::RegisterOptions" name="options" default="ExportAdaptors"/>
            </function>
            <function name="registerService" fullname="QDBusConnection::registerService" href="qdbusconnection.html#registerService" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" type="bool" signature="bool registerService(const QString &amp;serviceName)">
                <parameter type="const QString &amp;" name="serviceName" default=""/>
            </function>
            <function name="send" fullname="QDBusConnection::send" href="qdbusconnection.html#send" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" const="true" type="bool" signature="bool send(const QDBusMessage &amp;message) const">
                <parameter type="const QDBusMessage &amp;" name="message" default=""/>
            </function>
            <function name="sessionBus" fullname="QDBusConnection::sessionBus" href="qdbusconnection.html#sessionBus" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" static="true" type="QDBusConnection" signature="QDBusConnection sessionBus()"/>
            <function name="swap" fullname="QDBusConnection::swap" href="qdbusconnection.html#swap" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QDBusConnection &amp;other)">
                <parameter type="QDBusConnection &amp;" name="other" default=""/>
            </function>
            <function name="systemBus" fullname="QDBusConnection::systemBus" href="qdbusconnection.html#systemBus" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" static="true" type="QDBusConnection" signature="QDBusConnection systemBus()"/>
            <function name="unregisterObject" fullname="QDBusConnection::unregisterObject" href="qdbusconnection.html#unregisterObject" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" type="void" signature="void unregisterObject(const QString &amp;path, QDBusConnection::UnregisterMode mode)">
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="QDBusConnection::UnregisterMode" name="mode" default="UnregisterNode"/>
            </function>
            <function name="unregisterService" fullname="QDBusConnection::unregisterService" href="qdbusconnection.html#unregisterService" status="active" access="public" location="qdbusconnection.h" documented="true" meta="plain" type="bool" signature="bool unregisterService(const QString &amp;serviceName)">
                <parameter type="const QString &amp;" name="serviceName" default=""/>
            </function>
            <function name="~QDBusConnection" fullname="QDBusConnection::~QDBusConnection" href="qdbusconnection.html#dtor.QDBusConnection" status="active" access="public" location="qdbusconnection.h" documented="true" meta="destructor" noexcept="true" signature="~QDBusConnection()"/>
            <enum name="BusType" fullname="QDBusConnection::BusType" href="qdbusconnection.html#BusType-enum" status="active" access="public" location="qdbusconnection.h" documented="true">
                <value name="SessionBus" value="0"/>
                <value name="SystemBus" value="1"/>
                <value name="ActivationBus" value="2"/>
            </enum>
            <enum name="ConnectionCapability" fullname="QDBusConnection::ConnectionCapability" href="qdbusconnection.html#ConnectionCapability-enum" status="active" access="public" location="qdbusconnection.h" documented="true" typedef="QDBusConnection::ConnectionCapabilities">
                <value name="UnixFileDescriptorPassing" value="0x0001"/>
            </enum>
            <enum name="RegisterOption" fullname="QDBusConnection::RegisterOption" href="qdbusconnection.html#RegisterOption-enum" status="active" access="public" location="qdbusconnection.h" documented="true" typedef="QDBusConnection::RegisterOptions">
                <value name="ExportAdaptors" value="0x01"/>
                <value name="ExportScriptableSlots" value="0x10"/>
                <value name="ExportScriptableSignals" value="0x20"/>
                <value name="ExportScriptableProperties" value="0x40"/>
                <value name="ExportScriptableInvokables" value="0x80"/>
                <value name="ExportScriptableContents" value="0xf0"/>
                <value name="ExportNonScriptableSlots" value="0x100"/>
                <value name="ExportNonScriptableSignals" value="0x200"/>
                <value name="ExportNonScriptableProperties" value="0x400"/>
                <value name="ExportNonScriptableInvokables" value="0x800"/>
                <value name="ExportNonScriptableContents" value="0xf00"/>
                <value name="ExportAllSlots" value="ExportScriptableSlots|ExportNonScriptableSlots"/>
                <value name="ExportAllSignals" value="ExportScriptableSignals|ExportNonScriptableSignals"/>
                <value name="ExportAllProperties" value="ExportScriptableProperties|ExportNonScriptableProperties"/>
                <value name="ExportAllInvokables" value="ExportScriptableInvokables|ExportNonScriptableInvokables"/>
                <value name="ExportAllContents" value="ExportScriptableContents|ExportNonScriptableContents"/>
                <value name="ExportChildObjects" value="0x1000"/>
            </enum>
            <enum name="UnregisterMode" fullname="QDBusConnection::UnregisterMode" href="qdbusconnection.html#UnregisterMode-enum" status="active" access="public" location="qdbusconnection.h" documented="true">
                <value name="UnregisterNode" value="0"/>
                <value name="UnregisterTree" value="1"/>
            </enum>
            <typedef name="ConnectionCapabilities" fullname="QDBusConnection::ConnectionCapabilities" href="qdbusconnection.html#ConnectionCapability-enum" status="active" access="public" location="qdbusconnection.h" enum="QDBusConnection::ConnectionCapability"/>
            <typedef name="RegisterOptions" fullname="QDBusConnection::RegisterOptions" href="qdbusconnection.html#RegisterOption-enum" status="active" access="public" location="qdbusconnection.h" enum="QDBusConnection::RegisterOption"/>
            <typedef name="VirtualObjectRegisterOptions" fullname="QDBusConnection::VirtualObjectRegisterOptions" href="qdbusconnection.html#VirtualObjectRegisterOption-enum" status="active" access="public" location="qdbusconnection.h" enum="QDBusConnection::VirtualObjectRegisterOption"/>
        </class>
        <class name="QDBusConnectionInterface" href="qdbusconnectioninterface.html" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" bases="QDBusAbstractInterface" module="QtDBus" brief="Access to the D-Bus bus daemon service">
            <function name="activatableServiceNames" fullname="QDBusConnectionInterface::activatableServiceNames" href="qdbusconnectioninterface.html#activatableServiceNames-prop" status="active" access="public" location="qdbusconnectioninterface.h" meta="slot" const="true" associated-property="activatableServiceNames" type="QDBusReply&lt;QStringList&gt;" signature="QDBusReply&lt;QStringList&gt; activatableServiceNames() const"/>
            <function name="callWithCallbackFailed" fullname="QDBusConnectionInterface::callWithCallbackFailed" href="qdbusconnectioninterface.html#callWithCallbackFailed" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" meta="signal" type="void" signature="void callWithCallbackFailed(const QDBusError &amp;error, const QDBusMessage &amp;call)">
                <parameter type="const QDBusError &amp;" name="error" default=""/>
                <parameter type="const QDBusMessage &amp;" name="call" default=""/>
            </function>
            <function name="isServiceRegistered" fullname="QDBusConnectionInterface::isServiceRegistered" href="qdbusconnectioninterface.html#isServiceRegistered" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" meta="slot" const="true" type="QDBusReply&lt;bool&gt;" signature="QDBusReply&lt;bool&gt; isServiceRegistered(const QString &amp;serviceName) const">
                <parameter type="const QString &amp;" name="serviceName" default=""/>
            </function>
            <function name="registerService" fullname="QDBusConnectionInterface::registerService" href="qdbusconnectioninterface.html#registerService" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" meta="slot" type="QDBusReply&lt;QDBusConnectionInterface::RegisterServiceReply&gt;" signature="QDBusReply&lt;QDBusConnectionInterface::RegisterServiceReply&gt; registerService(const QString &amp;serviceName, QDBusConnectionInterface::ServiceQueueOptions qoption, QDBusConnectionInterface::ServiceReplacementOptions roption)">
                <parameter type="const QString &amp;" name="serviceName" default=""/>
                <parameter type="QDBusConnectionInterface::ServiceQueueOptions" name="qoption" default="DontQueueService"/>
                <parameter type="QDBusConnectionInterface::ServiceReplacementOptions" name="roption" default="DontAllowReplacement"/>
            </function>
            <function name="registeredServiceNames" fullname="QDBusConnectionInterface::registeredServiceNames" href="qdbusconnectioninterface.html#registeredServiceNames-prop" status="active" access="public" location="qdbusconnectioninterface.h" meta="slot" const="true" associated-property="registeredServiceNames" type="QDBusReply&lt;QStringList&gt;" signature="QDBusReply&lt;QStringList&gt; registeredServiceNames() const"/>
            <function name="serviceOwner" fullname="QDBusConnectionInterface::serviceOwner" href="qdbusconnectioninterface.html#serviceOwner" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" meta="slot" const="true" type="QDBusReply&lt;QString&gt;" signature="QDBusReply&lt;QString&gt; serviceOwner(const QString &amp;name) const">
                <parameter type="const QString &amp;" name="name" default=""/>
            </function>
            <function name="serviceOwnerChanged" fullname="QDBusConnectionInterface::serviceOwnerChanged" href="qdbusconnectioninterface-obsolete.html#serviceOwnerChanged" status="deprecated" access="public" location="qdbusconnectioninterface.h" documented="true" meta="signal" type="void" signature="void serviceOwnerChanged(const QString &amp;name, const QString &amp;oldOwner, const QString &amp;newOwner)">
                <parameter type="const QString &amp;" name="name" default=""/>
                <parameter type="const QString &amp;" name="oldOwner" default=""/>
                <parameter type="const QString &amp;" name="newOwner" default=""/>
            </function>
            <function name="servicePid" fullname="QDBusConnectionInterface::servicePid" href="qdbusconnectioninterface.html#servicePid" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" meta="slot" const="true" type="QDBusReply&lt;uint&gt;" signature="QDBusReply&lt;uint&gt; servicePid(const QString &amp;serviceName) const">
                <parameter type="const QString &amp;" name="serviceName" default=""/>
            </function>
            <function name="serviceRegistered" fullname="QDBusConnectionInterface::serviceRegistered" href="qdbusconnectioninterface.html#serviceRegistered" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" meta="signal" type="void" signature="void serviceRegistered(const QString &amp;service)">
                <parameter type="const QString &amp;" name="service" default=""/>
            </function>
            <function name="serviceUid" fullname="QDBusConnectionInterface::serviceUid" href="qdbusconnectioninterface.html#serviceUid" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" meta="slot" const="true" type="QDBusReply&lt;uint&gt;" signature="QDBusReply&lt;uint&gt; serviceUid(const QString &amp;serviceName) const">
                <parameter type="const QString &amp;" name="serviceName" default=""/>
            </function>
            <function name="serviceUnregistered" fullname="QDBusConnectionInterface::serviceUnregistered" href="qdbusconnectioninterface.html#serviceUnregistered" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" meta="signal" type="void" signature="void serviceUnregistered(const QString &amp;service)">
                <parameter type="const QString &amp;" name="service" default=""/>
            </function>
            <function name="startService" fullname="QDBusConnectionInterface::startService" href="qdbusconnectioninterface.html#startService" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" meta="slot" type="QDBusReply&lt;void&gt;" signature="QDBusReply&lt;void&gt; startService(const QString &amp;name)">
                <parameter type="const QString &amp;" name="name" default=""/>
            </function>
            <function name="unregisterService" fullname="QDBusConnectionInterface::unregisterService" href="qdbusconnectioninterface.html#unregisterService" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" meta="slot" type="QDBusReply&lt;bool&gt;" signature="QDBusReply&lt;bool&gt; unregisterService(const QString &amp;serviceName)">
                <parameter type="const QString &amp;" name="serviceName" default=""/>
            </function>
            <enum name="RegisterServiceReply" fullname="QDBusConnectionInterface::RegisterServiceReply" href="qdbusconnectioninterface.html#RegisterServiceReply-enum" status="active" access="public" location="qdbusconnectioninterface.h" documented="true">
                <value name="ServiceNotRegistered" value="0"/>
                <value name="ServiceRegistered" value="1"/>
                <value name="ServiceQueued" value="2"/>
            </enum>
            <enum name="ServiceQueueOptions" fullname="QDBusConnectionInterface::ServiceQueueOptions" href="qdbusconnectioninterface.html#ServiceQueueOptions-enum" status="active" access="public" location="qdbusconnectioninterface.h" documented="true">
                <value name="DontQueueService" value="0"/>
                <value name="QueueService" value="1"/>
                <value name="ReplaceExistingService" value="2"/>
            </enum>
            <enum name="ServiceReplacementOptions" fullname="QDBusConnectionInterface::ServiceReplacementOptions" href="qdbusconnectioninterface.html#ServiceReplacementOptions-enum" status="active" access="public" location="qdbusconnectioninterface.h" documented="true">
                <value name="DontAllowReplacement" value="0"/>
                <value name="AllowReplacement" value="1"/>
            </enum>
            <property name="activatableServiceNames" fullname="QDBusConnectionInterface::activatableServiceNames" href="qdbusconnectioninterface.html#activatableServiceNames-prop" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" writable="false" brief="Holds the activatable service names">
                <getter name="activatableServiceNames"/>
            </property>
            <property name="registeredServiceNames" fullname="QDBusConnectionInterface::registeredServiceNames" href="qdbusconnectioninterface.html#registeredServiceNames-prop" status="active" access="public" location="qdbusconnectioninterface.h" documented="true" writable="false" brief="Holds the registered service names">
                <getter name="registeredServiceNames"/>
            </property>
        </class>
        <class name="QDBusContext" href="qdbuscontext.html" status="active" access="public" location="qdbuscontext.h" documented="true" module="QtDBus" brief="Allows slots to determine the D-Bus context of the calls">
            <function name="QDBusContext" fullname="QDBusContext::QDBusContext" href="qdbuscontext.html#QDBusContext" status="active" access="public" location="qdbuscontext.h" documented="true" meta="constructor" signature="QDBusContext()"/>
            <function name="calledFromDBus" fullname="QDBusContext::calledFromDBus" href="qdbuscontext.html#calledFromDBus" status="active" access="public" location="qdbuscontext.h" documented="true" meta="plain" const="true" type="bool" signature="bool calledFromDBus() const"/>
            <function name="connection" fullname="QDBusContext::connection" href="qdbuscontext.html#connection" status="active" access="public" location="qdbuscontext.h" documented="true" meta="plain" const="true" type="QDBusConnection" signature="QDBusConnection connection() const"/>
            <function name="isDelayedReply" fullname="QDBusContext::isDelayedReply" href="qdbuscontext.html#isDelayedReply" status="active" access="public" location="qdbuscontext.h" documented="true" meta="plain" const="true" type="bool" signature="bool isDelayedReply() const"/>
            <function name="message" fullname="QDBusContext::message" href="qdbuscontext.html#message" status="active" access="public" location="qdbuscontext.h" documented="true" meta="plain" const="true" type="const QDBusMessage &amp;" signature="const QDBusMessage &amp; message() const"/>
            <function name="sendErrorReply" fullname="QDBusContext::sendErrorReply" href="qdbuscontext.html#sendErrorReply" status="active" access="public" location="qdbuscontext.h" documented="true" meta="plain" const="true" type="void" signature="void sendErrorReply(const QString &amp;name, const QString &amp;msg) const">
                <parameter type="const QString &amp;" name="name" default=""/>
                <parameter type="const QString &amp;" name="msg" default="QString()"/>
            </function>
            <function name="sendErrorReply" fullname="QDBusContext::sendErrorReply" href="qdbuscontext.html#sendErrorReply-1" status="active" access="public" location="qdbuscontext.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="void" signature="void sendErrorReply(QDBusError::ErrorType type, const QString &amp;msg) const">
                <parameter type="QDBusError::ErrorType" name="type" default=""/>
                <parameter type="const QString &amp;" name="msg" default="QString()"/>
            </function>
            <function name="setDelayedReply" fullname="QDBusContext::setDelayedReply" href="qdbuscontext.html#setDelayedReply" status="active" access="public" location="qdbuscontext.h" documented="true" meta="plain" const="true" type="void" signature="void setDelayedReply(bool enable) const">
                <parameter type="bool" name="enable" default=""/>
            </function>
            <function name="~QDBusContext" fullname="QDBusContext::~QDBusContext" href="qdbuscontext.html#dtor.QDBusContext" status="active" access="public" location="qdbuscontext.h" documented="true" meta="destructor" noexcept="true" signature="~QDBusContext()"/>
        </class>
        <class name="QDBusError" href="qdbuserror.html" status="active" access="public" location="qdbuserror.h" documented="true" module="QtDBus" brief="Represents an error received from the D-Bus bus or from remote applications found in the bus">
            <function name="errorString" fullname="QDBusError::errorString" href="qdbuserror.html#errorString" status="active" access="public" location="qdbuserror.h" documented="true" meta="plain" static="true" type="QString" signature="QString errorString(QDBusError::ErrorType error)">
                <parameter type="QDBusError::ErrorType" name="error" default=""/>
            </function>
            <function name="isValid" fullname="QDBusError::isValid" href="qdbuserror.html#isValid" status="active" access="public" location="qdbuserror.h" documented="true" meta="plain" const="true" type="bool" signature="bool isValid() const"/>
            <function name="message" fullname="QDBusError::message" href="qdbuserror.html#message" status="active" access="public" location="qdbuserror.h" documented="true" meta="plain" const="true" type="QString" signature="QString message() const"/>
            <function name="name" fullname="QDBusError::name" href="qdbuserror.html#name" status="active" access="public" location="qdbuserror.h" documented="true" meta="plain" const="true" type="QString" signature="QString name() const"/>
            <function name="swap" fullname="QDBusError::swap" href="qdbuserror.html#swap" status="active" access="public" location="qdbuserror.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QDBusError &amp;other)">
                <parameter type="QDBusError &amp;" name="other" default=""/>
            </function>
            <function name="type" fullname="QDBusError::type" href="qdbuserror.html#type" status="active" access="public" location="qdbuserror.h" documented="true" meta="plain" const="true" type="QDBusError::ErrorType" signature="QDBusError::ErrorType type() const"/>
            <enum name="ErrorType" fullname="QDBusError::ErrorType" href="qdbuserror.html#ErrorType-enum" status="active" access="public" location="qdbuserror.h" documented="true">
                <value name="NoError" value="0"/>
                <value name="Other" value="1"/>
                <value name="Failed" value="2"/>
                <value name="NoMemory" value="3"/>
                <value name="ServiceUnknown" value="4"/>
                <value name="NoReply" value="5"/>
                <value name="BadAddress" value="6"/>
                <value name="NotSupported" value="7"/>
                <value name="LimitsExceeded" value="8"/>
                <value name="AccessDenied" value="9"/>
                <value name="NoServer" value="10"/>
                <value name="Timeout" value="11"/>
                <value name="NoNetwork" value="12"/>
                <value name="AddressInUse" value="13"/>
                <value name="Disconnected" value="14"/>
                <value name="InvalidArgs" value="15"/>
                <value name="UnknownMethod" value="16"/>
                <value name="TimedOut" value="17"/>
                <value name="InvalidSignature" value="18"/>
                <value name="UnknownInterface" value="19"/>
                <value name="UnknownObject" value="20"/>
                <value name="UnknownProperty" value="21"/>
                <value name="PropertyReadOnly" value="22"/>
                <value name="InternalError" value="23"/>
                <value name="InvalidService" value="24"/>
                <value name="InvalidObjectPath" value="25"/>
                <value name="InvalidInterface" value="26"/>
                <value name="InvalidMember" value="27"/>
            </enum>
        </class>
        <class name="QDBusInterface" href="qdbusinterface.html" status="active" access="public" location="qdbusinterface.h" documented="true" bases="QDBusAbstractInterface" module="QtDBus" brief="Proxy for interfaces on remote objects">
            <function name="QDBusInterface" fullname="QDBusInterface::QDBusInterface" href="qdbusinterface.html#QDBusInterface-1" status="active" access="public" location="qdbusinterface.h" documented="true" meta="constructor" overload="true" overload-number="1" signature="QDBusInterface(const QString &amp;service, const QString &amp;path, const QString &amp;interface, const QDBusConnection &amp;connection, QObject *parent)">
                <parameter type="const QString &amp;" name="service" default=""/>
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="const QString &amp;" name="interface" default="QString()"/>
                <parameter type="const QDBusConnection &amp;" name="connection" default="QDBusConnection::sessionBus()"/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="~QDBusInterface" fullname="QDBusInterface::~QDBusInterface" href="qdbusinterface.html#dtor.QDBusInterface" status="active" access="public" location="qdbusinterface.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QDBusInterface()"/>
        </class>
        <class name="QDBusMessage" href="qdbusmessage.html" status="active" access="public" location="qdbusmessage.h" documented="true" module="QtDBus" brief="Represents one message sent or received over the D-Bus bus">
            <function name="QDBusMessage" fullname="QDBusMessage::QDBusMessage" href="qdbusmessage.html#QDBusMessage" status="active" access="public" location="qdbusmessage.h" documented="true" meta="constructor" signature="QDBusMessage()"/>
            <function name="QDBusMessage" fullname="QDBusMessage::QDBusMessage" href="qdbusmessage.html#QDBusMessage-1" status="active" access="public" location="qdbusmessage.h" documented="true" meta="copy-constructor" overload="true" overload-number="1" signature="QDBusMessage(const QDBusMessage &amp;other)">
                <parameter type="const QDBusMessage &amp;" name="other" default=""/>
            </function>
            <function name="arguments" fullname="QDBusMessage::arguments" href="qdbusmessage.html#arguments" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="QList&lt;QVariant&gt;" signature="QList&lt;QVariant&gt; arguments() const"/>
            <function name="autoStartService" fullname="QDBusMessage::autoStartService" href="qdbusmessage.html#autoStartService" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="bool" signature="bool autoStartService() const"/>
            <function name="createError" fullname="QDBusMessage::createError" href="qdbusmessage.html#createError" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" static="true" type="QDBusMessage" signature="QDBusMessage createError(const QString &amp;name, const QString &amp;msg)">
                <parameter type="const QString &amp;" name="name" default=""/>
                <parameter type="const QString &amp;" name="msg" default=""/>
            </function>
            <function name="createError" fullname="QDBusMessage::createError" href="qdbusmessage.html#createError-1" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" static="true" overload="true" overload-number="1" type="QDBusMessage" signature="QDBusMessage createError(const QDBusError &amp;error)">
                <parameter type="const QDBusError &amp;" name="error" default=""/>
            </function>
            <function name="createError" fullname="QDBusMessage::createError" href="qdbusmessage.html#createError-2" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" static="true" overload="true" overload-number="2" type="QDBusMessage" signature="QDBusMessage createError(QDBusError::ErrorType type, const QString &amp;msg)">
                <parameter type="QDBusError::ErrorType" name="type" default=""/>
                <parameter type="const QString &amp;" name="msg" default=""/>
            </function>
            <function name="createErrorReply" fullname="QDBusMessage::createErrorReply" href="qdbusmessage.html#createErrorReply" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="QDBusMessage" signature="QDBusMessage createErrorReply(const QString &amp;name, const QString &amp;msg) const">
                <parameter type="const QString &amp;" name="name" default=""/>
                <parameter type="const QString &amp;" name="msg" default=""/>
            </function>
            <function name="createErrorReply" fullname="QDBusMessage::createErrorReply" href="qdbusmessage.html#createErrorReply-1" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="QDBusMessage" signature="QDBusMessage createErrorReply(const QDBusError &amp;error) const">
                <parameter type="const QDBusError &amp;" name="error" default=""/>
            </function>
            <function name="createErrorReply" fullname="QDBusMessage::createErrorReply" href="qdbusmessage.html#createErrorReply-2" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" overload="true" overload-number="2" type="QDBusMessage" signature="QDBusMessage createErrorReply(QDBusError::ErrorType type, const QString &amp;msg) const">
                <parameter type="QDBusError::ErrorType" name="type" default=""/>
                <parameter type="const QString &amp;" name="msg" default=""/>
            </function>
            <function name="createMethodCall" fullname="QDBusMessage::createMethodCall" href="qdbusmessage.html#createMethodCall" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" static="true" type="QDBusMessage" signature="QDBusMessage createMethodCall(const QString &amp;service, const QString &amp;path, const QString &amp;interface, const QString &amp;method)">
                <parameter type="const QString &amp;" name="service" default=""/>
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="const QString &amp;" name="interface" default=""/>
                <parameter type="const QString &amp;" name="method" default=""/>
            </function>
            <function name="createReply" fullname="QDBusMessage::createReply" href="qdbusmessage.html#createReply" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="QDBusMessage" signature="QDBusMessage createReply(const QList&lt;QVariant&gt; &amp;arguments) const">
                <parameter type="const QList&lt;QVariant&gt; &amp;" name="arguments" default="QList&lt;QVariant&gt;()"/>
            </function>
            <function name="createReply" fullname="QDBusMessage::createReply" href="qdbusmessage.html#createReply-1" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="QDBusMessage" signature="QDBusMessage createReply(const QVariant &amp;argument) const">
                <parameter type="const QVariant &amp;" name="argument" default=""/>
            </function>
            <function name="createSignal" fullname="QDBusMessage::createSignal" href="qdbusmessage.html#createSignal" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" static="true" type="QDBusMessage" signature="QDBusMessage createSignal(const QString &amp;path, const QString &amp;interface, const QString &amp;name)">
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="const QString &amp;" name="interface" default=""/>
                <parameter type="const QString &amp;" name="name" default=""/>
            </function>
            <function name="createTargetedSignal" fullname="QDBusMessage::createTargetedSignal" href="qdbusmessage.html#createTargetedSignal" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" static="true" type="QDBusMessage" signature="QDBusMessage createTargetedSignal(const QString &amp;service, const QString &amp;path, const QString &amp;interface, const QString &amp;name)">
                <parameter type="const QString &amp;" name="service" default=""/>
                <parameter type="const QString &amp;" name="path" default=""/>
                <parameter type="const QString &amp;" name="interface" default=""/>
                <parameter type="const QString &amp;" name="name" default=""/>
            </function>
            <function name="errorMessage" fullname="QDBusMessage::errorMessage" href="qdbusmessage.html#errorMessage" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="QString" signature="QString errorMessage() const"/>
            <function name="errorName" fullname="QDBusMessage::errorName" href="qdbusmessage.html#errorName" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="QString" signature="QString errorName() const"/>
            <function name="interface" fullname="QDBusMessage::interface" href="qdbusmessage.html#interface" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="QString" signature="QString interface() const"/>
            <function name="isDelayedReply" fullname="QDBusMessage::isDelayedReply" href="qdbusmessage.html#isDelayedReply" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="bool" signature="bool isDelayedReply() const"/>
            <function name="isInteractiveAuthorizationAllowed" fullname="QDBusMessage::isInteractiveAuthorizationAllowed" href="qdbusmessage.html#isInteractiveAuthorizationAllowed" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="bool" signature="bool isInteractiveAuthorizationAllowed() const"/>
            <function name="isReplyRequired" fullname="QDBusMessage::isReplyRequired" href="qdbusmessage.html#isReplyRequired" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="bool" signature="bool isReplyRequired() const"/>
            <function name="member" fullname="QDBusMessage::member" href="qdbusmessage.html#member" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="QString" signature="QString member() const"/>
            <function name="operator&lt;&lt;" fullname="QDBusMessage::operator&lt;&lt;" href="qdbusmessage.html#operator-lt-lt" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" type="QDBusMessage &amp;" signature="QDBusMessage &amp; operator&lt;&lt;(const QVariant &amp;arg)">
                <parameter type="const QVariant &amp;" name="arg" default=""/>
            </function>
            <function name="operator=" fullname="QDBusMessage::operator=" href="qdbusmessage.html#operator-eq-1" status="active" access="public" location="qdbusmessage.h" documented="true" meta="copy-assign" overload="true" overload-number="1" type="QDBusMessage &amp;" signature="QDBusMessage &amp; operator=(const QDBusMessage &amp;other)">
                <parameter type="const QDBusMessage &amp;" name="other" default=""/>
            </function>
            <function name="path" fullname="QDBusMessage::path" href="qdbusmessage.html#path" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="QString" signature="QString path() const"/>
            <function name="service" fullname="QDBusMessage::service" href="qdbusmessage.html#service" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="QString" signature="QString service() const"/>
            <function name="setArguments" fullname="QDBusMessage::setArguments" href="qdbusmessage.html#setArguments" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" type="void" signature="void setArguments(const QList&lt;QVariant&gt; &amp;arguments)">
                <parameter type="const QList&lt;QVariant&gt; &amp;" name="arguments" default=""/>
            </function>
            <function name="setAutoStartService" fullname="QDBusMessage::setAutoStartService" href="qdbusmessage.html#setAutoStartService" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" type="void" signature="void setAutoStartService(bool enable)">
                <parameter type="bool" name="enable" default=""/>
            </function>
            <function name="setDelayedReply" fullname="QDBusMessage::setDelayedReply" href="qdbusmessage.html#setDelayedReply" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="void" signature="void setDelayedReply(bool enable) const">
                <parameter type="bool" name="enable" default=""/>
            </function>
            <function name="setInteractiveAuthorizationAllowed" fullname="QDBusMessage::setInteractiveAuthorizationAllowed" href="qdbusmessage.html#setInteractiveAuthorizationAllowed" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" type="void" signature="void setInteractiveAuthorizationAllowed(bool enable)">
                <parameter type="bool" name="enable" default=""/>
            </function>
            <function name="signature" fullname="QDBusMessage::signature" href="qdbusmessage.html#signature" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="QString" signature="QString signature() const"/>
            <function name="swap" fullname="QDBusMessage::swap" href="qdbusmessage.html#swap" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QDBusMessage &amp;other)">
                <parameter type="QDBusMessage &amp;" name="other" default=""/>
            </function>
            <function name="type" fullname="QDBusMessage::type" href="qdbusmessage.html#type" status="active" access="public" location="qdbusmessage.h" documented="true" meta="plain" const="true" type="QDBusMessage::MessageType" signature="QDBusMessage::MessageType type() const"/>
            <function name="~QDBusMessage" fullname="QDBusMessage::~QDBusMessage" href="qdbusmessage.html#dtor.QDBusMessage" status="active" access="public" location="qdbusmessage.h" documented="true" meta="destructor" noexcept="true" signature="~QDBusMessage()"/>
            <enum name="MessageType" fullname="QDBusMessage::MessageType" href="qdbusmessage.html#MessageType-enum" status="active" access="public" location="qdbusmessage.h" documented="true">
                <value name="InvalidMessage" value="0"/>
                <value name="MethodCallMessage" value="1"/>
                <value name="ReplyMessage" value="2"/>
                <value name="ErrorMessage" value="3"/>
                <value name="SignalMessage" value="4"/>
            </enum>
        </class>
        <class name="QDBusObjectPath" href="qdbusobjectpath.html" status="active" access="public" location="qdbusextratypes.h" documented="true" module="QtDBus" brief="Enables the programmer to identify the OBJECT_PATH type provided by the D-Bus typesystem">
            <function name="QDBusObjectPath" fullname="QDBusObjectPath::QDBusObjectPath" href="qdbusobjectpath.html#QDBusObjectPath" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="constructor" noexcept="true" signature="QDBusObjectPath()"/>
            <function name="QDBusObjectPath" fullname="QDBusObjectPath::QDBusObjectPath" href="qdbusobjectpath.html#QDBusObjectPath-1" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QDBusObjectPath(const char *path)">
                <parameter type="const char *" name="path" default=""/>
            </function>
            <function name="QDBusObjectPath" fullname="QDBusObjectPath::QDBusObjectPath" href="qdbusobjectpath.html#QDBusObjectPath-2" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="2" signature="QDBusObjectPath(QLatin1StringView path)">
                <parameter type="QLatin1StringView" name="path" default=""/>
            </function>
            <function name="QDBusObjectPath" fullname="QDBusObjectPath::QDBusObjectPath" href="qdbusobjectpath.html#QDBusObjectPath-3" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="3" signature="QDBusObjectPath(const QString &amp;path)">
                <parameter type="const QString &amp;" name="path" default=""/>
            </function>
            <function name="operator QVariant" fullname="QDBusObjectPath::operator QVariant" href="qdbusobjectpath.html#operator-QVariant" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="plain" const="true" type="QVariant" signature="QVariant operator QVariant() const"/>
            <function name="path" fullname="QDBusObjectPath::path" href="qdbusobjectpath.html#path" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="plain" const="true" type="QString" signature="QString path() const"/>
            <function name="setPath" fullname="QDBusObjectPath::setPath" href="qdbusobjectpath.html#setPath" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="plain" type="void" signature="void setPath(const QString &amp;path)">
                <parameter type="const QString &amp;" name="path" default=""/>
            </function>
            <function name="swap" fullname="QDBusObjectPath::swap" href="qdbusobjectpath.html#swap" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QDBusObjectPath &amp;other)">
                <parameter type="QDBusObjectPath &amp;" name="other" default=""/>
            </function>
        </class>
        <class name="QDBusPendingCall" href="qdbuspendingcall.html" status="active" access="public" location="qdbuspendingcall.h" documented="true" groups="shared" module="QtDBus" brief="Refers to one pending asynchronous call">
            <function name="QDBusPendingCall" fullname="QDBusPendingCall::QDBusPendingCall" href="qdbuspendingcall.html#QDBusPendingCall" status="active" access="public" location="qdbuspendingcall.h" documented="true" meta="copy-constructor" signature="QDBusPendingCall(const QDBusPendingCall &amp;other)">
                <parameter type="const QDBusPendingCall &amp;" name="other" default=""/>
            </function>
            <function name="fromCompletedCall" fullname="QDBusPendingCall::fromCompletedCall" href="qdbuspendingcall.html#fromCompletedCall" status="active" access="public" location="qdbuspendingcall.h" documented="true" meta="plain" static="true" type="QDBusPendingCall" signature="QDBusPendingCall fromCompletedCall(const QDBusMessage &amp;msg)">
                <parameter type="const QDBusMessage &amp;" name="msg" default=""/>
            </function>
            <function name="fromError" fullname="QDBusPendingCall::fromError" href="qdbuspendingcall.html#fromError" status="active" access="public" location="qdbuspendingcall.h" documented="true" meta="plain" static="true" type="QDBusPendingCall" signature="QDBusPendingCall fromError(const QDBusError &amp;error)">
                <parameter type="const QDBusError &amp;" name="error" default=""/>
            </function>
            <function name="operator=" fullname="QDBusPendingCall::operator=" href="qdbuspendingcall.html#operator-eq-1" status="active" access="public" location="qdbuspendingcall.h" documented="true" meta="copy-assign" overload="true" overload-number="1" type="QDBusPendingCall &amp;" signature="QDBusPendingCall &amp; operator=(const QDBusPendingCall &amp;other)">
                <parameter type="const QDBusPendingCall &amp;" name="other" default=""/>
            </function>
            <function name="swap" fullname="QDBusPendingCall::swap" href="qdbuspendingcall.html#swap" status="active" access="public" location="qdbuspendingcall.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QDBusPendingCall &amp;other)">
                <parameter type="QDBusPendingCall &amp;" name="other" default=""/>
            </function>
            <function name="~QDBusPendingCall" fullname="QDBusPendingCall::~QDBusPendingCall" href="qdbuspendingcall.html#dtor.QDBusPendingCall" status="active" access="public" location="qdbuspendingcall.h" documented="true" meta="destructor" noexcept="true" signature="~QDBusPendingCall()"/>
        </class>
        <class name="QDBusPendingCallWatcher" href="qdbuspendingcallwatcher.html" status="active" access="public" location="qdbuspendingcall.h" documented="true" bases="QDBusPendingCall,QObject" module="QtDBus" brief="Convenient way for waiting for asynchronous replies">
            <function name="QDBusPendingCallWatcher" fullname="QDBusPendingCallWatcher::QDBusPendingCallWatcher" href="qdbuspendingcallwatcher.html#QDBusPendingCallWatcher" status="active" access="public" location="qdbuspendingcall.h" documented="true" meta="constructor" explicit="true" signature="QDBusPendingCallWatcher(const QDBusPendingCall &amp;call, QObject *parent)">
                <parameter type="const QDBusPendingCall &amp;" name="call" default=""/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="finished" fullname="QDBusPendingCallWatcher::finished" href="qdbuspendingcallwatcher.html#finished" status="active" access="public" location="qdbuspendingcall.h" documented="true" meta="signal" type="void" signature="void finished(QDBusPendingCallWatcher *self)">
                <parameter type="QDBusPendingCallWatcher *" name="self" default="nullptr"/>
            </function>
            <function name="isFinished" fullname="QDBusPendingCallWatcher::isFinished" href="qdbuspendingcallwatcher.html#isFinished" status="active" access="public" location="qdbuspendingcall.h" documented="true" meta="plain" const="true" type="bool" signature="bool isFinished() const"/>
            <function name="waitForFinished" fullname="QDBusPendingCallWatcher::waitForFinished" href="qdbuspendingcallwatcher.html#waitForFinished" status="active" access="public" location="qdbuspendingcall.h" documented="true" meta="plain" type="void" signature="void waitForFinished()"/>
            <function name="~QDBusPendingCallWatcher" fullname="QDBusPendingCallWatcher::~QDBusPendingCallWatcher" href="qdbuspendingcallwatcher.html#dtor.QDBusPendingCallWatcher" status="active" access="public" location="qdbuspendingcall.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QDBusPendingCallWatcher()"/>
        </class>
        <class name="QDBusPendingReply" href="qdbuspendingreply.html" status="active" access="public" location="qdbuspendingreply.h" documented="true" bases="QDBusPendingReplyBase" module="QtDBus" brief="Contains the reply to an asynchronous method call">
            <function name="QDBusPendingReply" fullname="QDBusPendingReply::QDBusPendingReply" href="qdbuspendingreply.html#QDBusPendingReply" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="constructor" signature="QDBusPendingReply()"/>
            <function name="QDBusPendingReply" fullname="QDBusPendingReply::QDBusPendingReply" href="qdbuspendingreply.html#QDBusPendingReply-1" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="copy-constructor" overload="true" overload-number="1" signature="QDBusPendingReply(const QDBusPendingReply&lt;Types...&gt; &amp;other)">
                <parameter type="const QDBusPendingReply&lt;Types...&gt; &amp;" name="other" default=""/>
            </function>
            <function name="QDBusPendingReply" fullname="QDBusPendingReply::QDBusPendingReply" href="qdbuspendingreply.html#QDBusPendingReply-2" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="constructor" overload="true" overload-number="2" signature="QDBusPendingReply(const QDBusPendingCall &amp;call)">
                <parameter type="const QDBusPendingCall &amp;" name="call" default=""/>
            </function>
            <function name="QDBusPendingReply" fullname="QDBusPendingReply::QDBusPendingReply" href="qdbuspendingreply.html#QDBusPendingReply-3" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="constructor" overload="true" overload-number="3" signature="QDBusPendingReply(const QDBusMessage &amp;message)">
                <parameter type="const QDBusMessage &amp;" name="message" default=""/>
            </function>
            <function name="argumentAt" fullname="QDBusPendingReply::argumentAt" href="qdbuspendingreply.html#argumentAt-1" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="plain" const="true" overload="true" overload-number="1" type="QVariant" signature="QVariant argumentAt(int index) const">
                <parameter type="int" name="index" default=""/>
            </function>
            <function name="count" fullname="QDBusPendingReply::count" href="qdbuspendingreply.html#count" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="plain" const="true" constexpr="true" type="int" signature="int count() const"/>
            <function name="error" fullname="QDBusPendingReply::error" href="qdbuspendingreply.html#error" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="plain" const="true" type="QDBusError" signature="QDBusError error() const"/>
            <function name="isError" fullname="QDBusPendingReply::isError" href="qdbuspendingreply.html#isError" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="plain" const="true" type="bool" signature="bool isError() const"/>
            <function name="isFinished" fullname="QDBusPendingReply::isFinished" href="qdbuspendingreply.html#isFinished" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="plain" const="true" type="bool" signature="bool isFinished() const"/>
            <function name="isValid" fullname="QDBusPendingReply::isValid" href="qdbuspendingreply.html#isValid" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="plain" const="true" type="bool" signature="bool isValid() const"/>
            <function name="operator typename Select&lt;0&gt;::Type" fullname="QDBusPendingReply::operator typename Select&lt;0&gt;::Type" href="qdbuspendingreply.html#operator-typename-Select-lt0-gt-3a-3aType" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="plain" const="true" type="typename Select&lt;0&gt;::Type" signature="typename Select&lt;0&gt;::Type operator typename Select&lt;0&gt;::Type() const"/>
            <function name="operator=" fullname="QDBusPendingReply::operator=" href="qdbuspendingreply.html#operator-eq" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="copy-assign" type="QDBusPendingReply&lt;Types...&gt; &amp;" signature="QDBusPendingReply&lt;Types...&gt; &amp; operator=(const QDBusPendingReply&lt;Types...&gt; &amp;other)">
                <parameter type="const QDBusPendingReply&lt;Types...&gt; &amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QDBusPendingReply::operator=" href="qdbuspendingreply.html#operator-eq-1" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="plain" overload="true" overload-number="1" type="QDBusPendingReply&lt;Types...&gt; &amp;" signature="QDBusPendingReply&lt;Types...&gt; &amp; operator=(const QDBusPendingCall &amp;call)">
                <parameter type="const QDBusPendingCall &amp;" name="call" default=""/>
            </function>
            <function name="operator=" fullname="QDBusPendingReply::operator=" href="qdbuspendingreply.html#operator-eq-2" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="plain" overload="true" overload-number="2" type="QDBusPendingReply&lt;Types...&gt; &amp;" signature="QDBusPendingReply&lt;Types...&gt; &amp; operator=(const QDBusMessage &amp;message)">
                <parameter type="const QDBusMessage &amp;" name="message" default=""/>
            </function>
            <function name="reply" fullname="QDBusPendingReply::reply" href="qdbuspendingreply.html#reply" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="plain" const="true" type="QDBusMessage" signature="QDBusMessage reply() const"/>
            <function name="value" fullname="QDBusPendingReply::value" href="qdbuspendingreply.html#value" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="plain" const="true" type="typename Select&lt;0&gt;::Type" signature="typename Select&lt;0&gt;::Type value() const"/>
            <function name="waitForFinished" fullname="QDBusPendingReply::waitForFinished" href="qdbuspendingreply.html#waitForFinished" status="active" access="public" location="qdbuspendingreply.h" documented="true" meta="plain" type="void" signature="void waitForFinished()"/>
            <enum name="anonymous" fullname="QDBusPendingReply::anonymous" href="qdbuspendingreply.html#anonymous-enum" status="active" access="public" location="qdbuspendingreply.h" documented="true">
                <value name="Count" value="std::is_same_v&lt;typename Select&lt;0&gt;::Type, void&gt; ? 0 : sizeof...(Types)"/>
            </enum>
        </class>
        <class name="QDBusReply" href="qdbusreply.html" status="active" access="public" location="qdbusreply.h" documented="true" module="QtDBus" brief="Stores the reply for a method call to a remote object">
            <function name="QDBusReply" fullname="QDBusReply::QDBusReply" href="qdbusreply.html#QDBusReply" status="active" access="public" location="qdbusreply.h" documented="true" meta="constructor" signature="QDBusReply(const QDBusMessage &amp;reply)">
                <parameter type="const QDBusMessage &amp;" name="reply" default=""/>
            </function>
            <function name="QDBusReply" fullname="QDBusReply::QDBusReply" href="qdbusreply.html#QDBusReply-1" status="active" access="public" location="qdbusreply.h" documented="true" meta="copy-constructor" overload="true" overload-number="1" signature="QDBusReply(const QDBusReply&lt;T&gt; &amp;other)">
                <parameter type="const QDBusReply&lt;T&gt; &amp;" name="other" default=""/>
            </function>
            <function name="QDBusReply" fullname="QDBusReply::QDBusReply" href="qdbusreply.html#QDBusReply-2" status="active" access="public" location="qdbusreply.h" documented="true" meta="constructor" overload="true" overload-number="2" signature="QDBusReply(const QDBusPendingCall &amp;pcall)">
                <parameter type="const QDBusPendingCall &amp;" name="pcall" default=""/>
            </function>
            <function name="QDBusReply" fullname="QDBusReply::QDBusReply" href="qdbusreply.html#QDBusReply-3" status="active" access="public" location="qdbusreply.h" documented="true" meta="constructor" overload="true" overload-number="3" signature="QDBusReply(const QDBusPendingReply&lt;T&gt; &amp;reply)">
                <parameter type="const QDBusPendingReply&lt;T&gt; &amp;" name="reply" default=""/>
            </function>
            <function name="QDBusReply" fullname="QDBusReply::QDBusReply" href="qdbusreply.html#QDBusReply-4" status="active" access="public" location="qdbusreply.h" documented="true" meta="constructor" overload="true" overload-number="4" signature="QDBusReply(const QDBusError &amp;error)">
                <parameter type="const QDBusError &amp;" name="error" default="QDBusError()"/>
            </function>
            <function name="error" fullname="QDBusReply::error" href="qdbusreply.html#error" status="active" access="public" location="qdbusreply.h" documented="true" meta="plain" const="true" type="const QDBusError &amp;" signature="const QDBusError &amp; error() const"/>
            <function name="error" fullname="QDBusReply::error" href="qdbusreply.html#error-1" status="active" access="public" location="qdbusreply.h" documented="true" meta="plain" overload="true" overload-number="1" type="const QDBusError &amp;" signature="const QDBusError &amp; error()"/>
            <function name="isValid" fullname="QDBusReply::isValid" href="qdbusreply.html#isValid" status="active" access="public" location="qdbusreply.h" documented="true" meta="plain" const="true" type="bool" signature="bool isValid() const"/>
            <function name="operator QDBusReply&lt;T&gt;::Type" fullname="QDBusReply::operator QDBusReply&lt;T&gt;::Type" href="qdbusreply.html#operator-QDBusReply-ltT-gt-3a-3aType" status="active" access="public" location="qdbusreply.h" documented="true" meta="plain" const="true" type="QDBusReply&lt;T&gt;::Type" signature="QDBusReply&lt;T&gt;::Type operator QDBusReply&lt;T&gt;::Type() const"/>
            <function name="operator=" fullname="QDBusReply::operator=" href="qdbusreply.html#operator-eq" status="active" access="public" location="qdbusreply.h" documented="true" meta="plain" type="QDBusReply&lt;T&gt; &amp;" signature="QDBusReply&lt;T&gt; &amp; operator=(const QDBusMessage &amp;reply)">
                <parameter type="const QDBusMessage &amp;" name="reply" default=""/>
            </function>
            <function name="operator=" fullname="QDBusReply::operator=" href="qdbusreply.html#operator-eq-1" status="active" access="public" location="qdbusreply.h" documented="true" meta="plain" overload="true" overload-number="1" type="QDBusReply&lt;T&gt; &amp;" signature="QDBusReply&lt;T&gt; &amp; operator=(const QDBusPendingCall &amp;pcall)">
                <parameter type="const QDBusPendingCall &amp;" name="pcall" default=""/>
            </function>
            <function name="operator=" fullname="QDBusReply::operator=" href="qdbusreply.html#operator-eq-2" status="active" access="public" location="qdbusreply.h" documented="true" meta="plain" overload="true" overload-number="2" type="QDBusReply&lt;T&gt; &amp;" signature="QDBusReply&lt;T&gt; &amp; operator=(const QDBusError &amp;dbusError)">
                <parameter type="const QDBusError &amp;" name="dbusError" default=""/>
            </function>
            <function name="operator=" fullname="QDBusReply::operator=" href="qdbusreply.html#operator-eq-3" status="active" access="public" location="qdbusreply.h" documented="true" meta="copy-assign" overload="true" overload-number="3" type="QDBusReply&lt;T&gt; &amp;" signature="QDBusReply&lt;T&gt; &amp; operator=(const QDBusReply&lt;T&gt; &amp;other)">
                <parameter type="const QDBusReply&lt;T&gt; &amp;" name="other" default=""/>
            </function>
            <function name="value" fullname="QDBusReply::value" href="qdbusreply.html#value" status="active" access="public" location="qdbusreply.h" documented="true" meta="plain" const="true" type="QDBusReply&lt;T&gt;::Type" signature="QDBusReply&lt;T&gt;::Type value() const"/>
        </class>
        <class name="QDBusServer" href="qdbusserver.html" status="active" access="public" location="qdbusserver.h" documented="true" bases="QObject" module="QtDBus" brief="Peer-to-peer communication between processes on the same computer">
            <function name="QDBusServer" fullname="QDBusServer::QDBusServer" href="qdbusserver.html#QDBusServer" status="active" access="public" location="qdbusserver.h" documented="true" meta="constructor" explicit="true" signature="QDBusServer(const QString &amp;address, QObject *parent)">
                <parameter type="const QString &amp;" name="address" default=""/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="QDBusServer" fullname="QDBusServer::QDBusServer" href="qdbusserver.html#QDBusServer-1" status="active" access="public" location="qdbusserver.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QDBusServer(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="address" fullname="QDBusServer::address" href="qdbusserver.html#address" status="active" access="public" location="qdbusserver.h" documented="true" meta="plain" const="true" type="QString" signature="QString address() const"/>
            <function name="isAnonymousAuthenticationAllowed" fullname="QDBusServer::isAnonymousAuthenticationAllowed" href="qdbusserver.html#isAnonymousAuthenticationAllowed" status="active" access="public" location="qdbusserver.h" documented="true" meta="plain" const="true" type="bool" signature="bool isAnonymousAuthenticationAllowed() const"/>
            <function name="isConnected" fullname="QDBusServer::isConnected" href="qdbusserver.html#isConnected" status="active" access="public" location="qdbusserver.h" documented="true" meta="plain" const="true" type="bool" signature="bool isConnected() const"/>
            <function name="lastError" fullname="QDBusServer::lastError" href="qdbusserver.html#lastError" status="active" access="public" location="qdbusserver.h" documented="true" meta="plain" const="true" type="QDBusError" signature="QDBusError lastError() const"/>
            <function name="newConnection" fullname="QDBusServer::newConnection" href="qdbusserver.html#newConnection" status="active" access="public" location="qdbusserver.h" documented="true" meta="signal" type="void" signature="void newConnection(const QDBusConnection &amp;connection)">
                <parameter type="const QDBusConnection &amp;" name="connection" default=""/>
            </function>
            <function name="setAnonymousAuthenticationAllowed" fullname="QDBusServer::setAnonymousAuthenticationAllowed" href="qdbusserver.html#setAnonymousAuthenticationAllowed" status="active" access="public" location="qdbusserver.h" documented="true" meta="plain" type="void" signature="void setAnonymousAuthenticationAllowed(bool value)">
                <parameter type="bool" name="value" default=""/>
            </function>
            <function name="~QDBusServer" fullname="QDBusServer::~QDBusServer" href="qdbusserver.html#dtor.QDBusServer" status="active" access="public" location="qdbusserver.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QDBusServer()"/>
        </class>
        <class name="QDBusServiceWatcher" href="qdbusservicewatcher.html" status="active" access="public" location="qdbusservicewatcher.h" documented="true" bases="QObject" module="QtDBus" brief="Allows the user to watch for a bus service change">
            <function name="QDBusServiceWatcher" fullname="QDBusServiceWatcher::QDBusServiceWatcher" href="qdbusservicewatcher.html#QDBusServiceWatcher" status="active" access="public" location="qdbusservicewatcher.h" documented="true" meta="constructor" explicit="true" signature="QDBusServiceWatcher(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="QDBusServiceWatcher" fullname="QDBusServiceWatcher::QDBusServiceWatcher" href="qdbusservicewatcher.html#QDBusServiceWatcher-1" status="active" access="public" location="qdbusservicewatcher.h" documented="true" meta="constructor" overload="true" overload-number="1" signature="QDBusServiceWatcher(const QString &amp;service, const QDBusConnection &amp;connection, QDBusServiceWatcher::WatchMode watchMode, QObject *parent)">
                <parameter type="const QString &amp;" name="service" default=""/>
                <parameter type="const QDBusConnection &amp;" name="connection" default=""/>
                <parameter type="QDBusServiceWatcher::WatchMode" name="watchMode" default="WatchForOwnerChange"/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="addWatchedService" fullname="QDBusServiceWatcher::addWatchedService" href="qdbusservicewatcher.html#addWatchedService" status="active" access="public" location="qdbusservicewatcher.h" documented="true" meta="plain" type="void" signature="void addWatchedService(const QString &amp;newService)">
                <parameter type="const QString &amp;" name="newService" default=""/>
            </function>
            <function name="bindableWatchMode" fullname="QDBusServiceWatcher::bindableWatchMode" href="qdbusservicewatcher.html#watchMode-prop" status="active" access="public" location="qdbusservicewatcher.h" meta="plain" associated-property="watchMode" type="QBindable&lt;QDBusServiceWatcher::WatchMode&gt;" signature="QBindable&lt;QDBusServiceWatcher::WatchMode&gt; bindableWatchMode()"/>
            <function name="bindableWatchedServices" fullname="QDBusServiceWatcher::bindableWatchedServices" href="qdbusservicewatcher.html#watchedServices-prop" status="active" access="public" location="qdbusservicewatcher.h" meta="plain" associated-property="watchedServices" type="QBindable&lt;QStringList&gt;" signature="QBindable&lt;QStringList&gt; bindableWatchedServices()"/>
            <function name="connection" fullname="QDBusServiceWatcher::connection" href="qdbusservicewatcher.html#connection" status="active" access="public" location="qdbusservicewatcher.h" documented="true" meta="plain" const="true" type="QDBusConnection" signature="QDBusConnection connection() const"/>
            <function name="removeWatchedService" fullname="QDBusServiceWatcher::removeWatchedService" href="qdbusservicewatcher.html#removeWatchedService" status="active" access="public" location="qdbusservicewatcher.h" documented="true" meta="plain" type="bool" signature="bool removeWatchedService(const QString &amp;service)">
                <parameter type="const QString &amp;" name="service" default=""/>
            </function>
            <function name="serviceOwnerChanged" fullname="QDBusServiceWatcher::serviceOwnerChanged" href="qdbusservicewatcher.html#serviceOwnerChanged" status="active" access="public" location="qdbusservicewatcher.h" documented="true" meta="signal" type="void" signature="void serviceOwnerChanged(const QString &amp;serviceName, const QString &amp;oldOwner, const QString &amp;newOwner)">
                <parameter type="const QString &amp;" name="serviceName" default=""/>
                <parameter type="const QString &amp;" name="oldOwner" default=""/>
                <parameter type="const QString &amp;" name="newOwner" default=""/>
            </function>
            <function name="serviceRegistered" fullname="QDBusServiceWatcher::serviceRegistered" href="qdbusservicewatcher.html#serviceRegistered" status="active" access="public" location="qdbusservicewatcher.h" documented="true" meta="signal" type="void" signature="void serviceRegistered(const QString &amp;serviceName)">
                <parameter type="const QString &amp;" name="serviceName" default=""/>
            </function>
            <function name="serviceUnregistered" fullname="QDBusServiceWatcher::serviceUnregistered" href="qdbusservicewatcher.html#serviceUnregistered" status="active" access="public" location="qdbusservicewatcher.h" documented="true" meta="signal" type="void" signature="void serviceUnregistered(const QString &amp;serviceName)">
                <parameter type="const QString &amp;" name="serviceName" default=""/>
            </function>
            <function name="setConnection" fullname="QDBusServiceWatcher::setConnection" href="qdbusservicewatcher.html#setConnection" status="active" access="public" location="qdbusservicewatcher.h" documented="true" meta="plain" type="void" signature="void setConnection(const QDBusConnection &amp;connection)">
                <parameter type="const QDBusConnection &amp;" name="connection" default=""/>
            </function>
            <function name="setWatchMode" fullname="QDBusServiceWatcher::setWatchMode" href="qdbusservicewatcher.html#watchMode-prop" status="active" access="public" location="qdbusservicewatcher.h" meta="plain" associated-property="watchMode" type="void" signature="void setWatchMode(QDBusServiceWatcher::WatchMode mode)">
                <parameter type="QDBusServiceWatcher::WatchMode" name="mode" default=""/>
            </function>
            <function name="setWatchedServices" fullname="QDBusServiceWatcher::setWatchedServices" href="qdbusservicewatcher.html#setWatchedServices" status="active" access="public" location="qdbusservicewatcher.h" documented="true" meta="plain" associated-property="watchedServices" type="void" signature="void setWatchedServices(const QStringList &amp;services)">
                <parameter type="const QStringList &amp;" name="services" default=""/>
            </function>
            <function name="watchMode" fullname="QDBusServiceWatcher::watchMode" href="qdbusservicewatcher.html#watchMode-prop" status="active" access="public" location="qdbusservicewatcher.h" meta="plain" const="true" associated-property="watchMode" type="QDBusServiceWatcher::WatchMode" signature="QDBusServiceWatcher::WatchMode watchMode() const"/>
            <function name="watchedServices" fullname="QDBusServiceWatcher::watchedServices" href="qdbusservicewatcher.html#watchedServices" status="active" access="public" location="qdbusservicewatcher.h" documented="true" meta="plain" const="true" associated-property="watchedServices" type="QStringList" signature="QStringList watchedServices() const"/>
            <function name="~QDBusServiceWatcher" fullname="QDBusServiceWatcher::~QDBusServiceWatcher" href="qdbusservicewatcher.html#dtor.QDBusServiceWatcher" status="active" access="public" location="qdbusservicewatcher.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QDBusServiceWatcher()"/>
            <enum name="WatchModeFlag" fullname="QDBusServiceWatcher::WatchModeFlag" href="qdbusservicewatcher.html#WatchModeFlag-enum" status="active" access="public" location="qdbusservicewatcher.h" documented="true" typedef="QDBusServiceWatcher::WatchMode">
                <value name="WatchForRegistration" value="0x01"/>
                <value name="WatchForUnregistration" value="0x02"/>
                <value name="WatchForOwnerChange" value="0x03"/>
            </enum>
            <typedef name="WatchMode" fullname="QDBusServiceWatcher::WatchMode" href="qdbusservicewatcher.html#WatchModeFlag-enum" status="active" access="public" location="qdbusservicewatcher.h" enum="QDBusServiceWatcher::WatchModeFlag"/>
            <property name="watchMode" fullname="QDBusServiceWatcher::watchMode" href="qdbusservicewatcher.html#watchMode-prop" status="active" access="public" location="qdbusservicewatcher.h" documented="true" bindable="true" brief="The current watch mode for this QDBusServiceWatcher object">
                <getter name="watchMode"/>
                <setter name="setWatchMode"/>
                <bindable name="bindableWatchMode"/>
            </property>
            <property name="watchedServices" fullname="QDBusServiceWatcher::watchedServices" href="qdbusservicewatcher.html#watchedServices-prop" status="active" access="public" location="qdbusservicewatcher.h" documented="true" bindable="true" brief="The list of services watched">
                <getter name="watchedServices"/>
                <setter name="setWatchedServices"/>
                <bindable name="bindableWatchedServices"/>
            </property>
        </class>
        <class name="QDBusSignature" href="qdbussignature.html" status="active" access="public" location="qdbusextratypes.h" documented="true" module="QtDBus" brief="Enables the programmer to identify the SIGNATURE type provided by the D-Bus typesystem">
            <function name="QDBusSignature" fullname="QDBusSignature::QDBusSignature" href="qdbussignature.html#QDBusSignature" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="constructor" noexcept="true" signature="QDBusSignature()"/>
            <function name="QDBusSignature" fullname="QDBusSignature::QDBusSignature" href="qdbussignature.html#QDBusSignature-1" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QDBusSignature(const char *signature)">
                <parameter type="const char *" name="signature" default=""/>
            </function>
            <function name="QDBusSignature" fullname="QDBusSignature::QDBusSignature" href="qdbussignature.html#QDBusSignature-2" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="2" signature="QDBusSignature(QLatin1StringView signature)">
                <parameter type="QLatin1StringView" name="signature" default=""/>
            </function>
            <function name="QDBusSignature" fullname="QDBusSignature::QDBusSignature" href="qdbussignature.html#QDBusSignature-3" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="3" signature="QDBusSignature(const QString &amp;signature)">
                <parameter type="const QString &amp;" name="signature" default=""/>
            </function>
            <function name="setSignature" fullname="QDBusSignature::setSignature" href="qdbussignature.html#setSignature" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="plain" type="void" signature="void setSignature(const QString &amp;signature)">
                <parameter type="const QString &amp;" name="signature" default=""/>
            </function>
            <function name="signature" fullname="QDBusSignature::signature" href="qdbussignature.html#signature" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="plain" const="true" type="QString" signature="QString signature() const"/>
            <function name="swap" fullname="QDBusSignature::swap" href="qdbussignature.html#swap" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QDBusSignature &amp;other)">
                <parameter type="QDBusSignature &amp;" name="other" default=""/>
            </function>
        </class>
        <class name="QDBusUnixFileDescriptor" href="qdbusunixfiledescriptor.html" status="active" access="public" location="qdbusunixfiledescriptor.h" documented="true" groups="shared" module="QtDBus" brief="Holds one Unix file descriptor">
            <contents name="availability" title="Availability" level="2"/>
            <function name="QDBusUnixFileDescriptor" fullname="QDBusUnixFileDescriptor::QDBusUnixFileDescriptor" href="qdbusunixfiledescriptor.html#QDBusUnixFileDescriptor" status="active" access="public" location="qdbusunixfiledescriptor.h" documented="true" meta="constructor" signature="QDBusUnixFileDescriptor()"/>
            <function name="QDBusUnixFileDescriptor" fullname="QDBusUnixFileDescriptor::QDBusUnixFileDescriptor" href="qdbusunixfiledescriptor.html#QDBusUnixFileDescriptor-1" status="active" access="public" location="qdbusunixfiledescriptor.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QDBusUnixFileDescriptor(int fileDescriptor)">
                <parameter type="int" name="fileDescriptor" default=""/>
            </function>
            <function name="QDBusUnixFileDescriptor" fullname="QDBusUnixFileDescriptor::QDBusUnixFileDescriptor" href="qdbusunixfiledescriptor.html#QDBusUnixFileDescriptor-2" status="active" access="public" location="qdbusunixfiledescriptor.h" documented="true" meta="copy-constructor" overload="true" overload-number="2" signature="QDBusUnixFileDescriptor(const QDBusUnixFileDescriptor &amp;other)">
                <parameter type="const QDBusUnixFileDescriptor &amp;" name="other" default=""/>
            </function>
            <function name="fileDescriptor" fullname="QDBusUnixFileDescriptor::fileDescriptor" href="qdbusunixfiledescriptor.html#fileDescriptor" status="active" access="public" location="qdbusunixfiledescriptor.h" documented="true" meta="plain" const="true" type="int" signature="int fileDescriptor() const"/>
            <function name="isSupported" fullname="QDBusUnixFileDescriptor::isSupported" href="qdbusunixfiledescriptor.html#isSupported" status="active" access="public" location="qdbusunixfiledescriptor.h" documented="true" meta="plain" static="true" type="bool" signature="bool isSupported()"/>
            <function name="isValid" fullname="QDBusUnixFileDescriptor::isValid" href="qdbusunixfiledescriptor.html#isValid" status="active" access="public" location="qdbusunixfiledescriptor.h" documented="true" meta="plain" const="true" type="bool" signature="bool isValid() const"/>
            <function name="operator=" fullname="QDBusUnixFileDescriptor::operator=" href="qdbusunixfiledescriptor.html#operator-eq" status="active" access="public" location="qdbusunixfiledescriptor.h" documented="true" meta="move-assign" noexcept="true" type="QDBusUnixFileDescriptor &amp;" signature="QDBusUnixFileDescriptor &amp; operator=(QDBusUnixFileDescriptor &amp;&amp;other)">
                <parameter type="QDBusUnixFileDescriptor &amp;&amp;" name="other" default=""/>
            </function>
            <function name="operator=" fullname="QDBusUnixFileDescriptor::operator=" href="qdbusunixfiledescriptor.html#operator-eq-1" status="active" access="public" location="qdbusunixfiledescriptor.h" documented="true" meta="copy-assign" overload="true" overload-number="1" type="QDBusUnixFileDescriptor &amp;" signature="QDBusUnixFileDescriptor &amp; operator=(const QDBusUnixFileDescriptor &amp;other)">
                <parameter type="const QDBusUnixFileDescriptor &amp;" name="other" default=""/>
            </function>
            <function name="setFileDescriptor" fullname="QDBusUnixFileDescriptor::setFileDescriptor" href="qdbusunixfiledescriptor.html#setFileDescriptor" status="active" access="public" location="qdbusunixfiledescriptor.h" documented="true" meta="plain" type="void" signature="void setFileDescriptor(int fileDescriptor)">
                <parameter type="int" name="fileDescriptor" default=""/>
            </function>
            <function name="swap" fullname="QDBusUnixFileDescriptor::swap" href="qdbusunixfiledescriptor.html#swap" status="active" access="public" location="qdbusunixfiledescriptor.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QDBusUnixFileDescriptor &amp;other)">
                <parameter type="QDBusUnixFileDescriptor &amp;" name="other" default=""/>
            </function>
            <function name="~QDBusUnixFileDescriptor" fullname="QDBusUnixFileDescriptor::~QDBusUnixFileDescriptor" href="qdbusunixfiledescriptor.html#dtor.QDBusUnixFileDescriptor" status="active" access="public" location="qdbusunixfiledescriptor.h" documented="true" meta="destructor" noexcept="true" signature="~QDBusUnixFileDescriptor()"/>
        </class>
        <class name="QDBusVariant" href="qdbusvariant.html" status="active" access="public" location="qdbusextratypes.h" documented="true" module="QtDBus" brief="Enables the programmer to identify the variant type provided by the D-Bus typesystem">
            <function name="QDBusVariant" fullname="QDBusVariant::QDBusVariant" href="qdbusvariant.html#QDBusVariant" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="constructor" noexcept="true" signature="QDBusVariant()"/>
            <function name="QDBusVariant" fullname="QDBusVariant::QDBusVariant" href="qdbusvariant.html#QDBusVariant-1" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="constructor" explicit="true" overload="true" overload-number="1" signature="QDBusVariant(const QVariant &amp;variant)">
                <parameter type="const QVariant &amp;" name="variant" default=""/>
            </function>
            <function name="setVariant" fullname="QDBusVariant::setVariant" href="qdbusvariant.html#setVariant" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="plain" type="void" signature="void setVariant(const QVariant &amp;variant)">
                <parameter type="const QVariant &amp;" name="variant" default=""/>
            </function>
            <function name="swap" fullname="QDBusVariant::swap" href="qdbusvariant.html#swap" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="plain" noexcept="true" type="void" signature="void swap(QDBusVariant &amp;other)">
                <parameter type="QDBusVariant &amp;" name="other" default=""/>
            </function>
            <function name="variant" fullname="QDBusVariant::variant" href="qdbusvariant.html#variant" status="active" access="public" location="qdbusextratypes.h" documented="true" meta="plain" const="true" type="QVariant" signature="QVariant variant() const"/>
        </class>
        <class name="QDBusVirtualObject" href="qdbusvirtualobject.html" status="active" access="public" location="qdbusvirtualobject.h" documented="true" bases="QObject" module="QtDBus" brief="Used to handle several DBus paths with one class">
            <function name="QDBusVirtualObject" fullname="QDBusVirtualObject::QDBusVirtualObject" href="qdbusvirtualobject.html#QDBusVirtualObject" status="active" access="public" location="qdbusvirtualobject.h" documented="true" meta="constructor" explicit="true" signature="QDBusVirtualObject(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
            </function>
            <function name="handleMessage" fullname="QDBusVirtualObject::handleMessage" href="qdbusvirtualobject.html#handleMessage" status="active" access="public" location="qdbusvirtualobject.h" documented="true" meta="plain" virtual="pure" type="bool" signature="bool handleMessage(const QDBusMessage &amp;message, const QDBusConnection &amp;connection) = 0">
                <parameter type="const QDBusMessage &amp;" name="message" default=""/>
                <parameter type="const QDBusConnection &amp;" name="connection" default=""/>
            </function>
            <function name="introspect" fullname="QDBusVirtualObject::introspect" href="qdbusvirtualobject.html#introspect" status="active" access="public" location="qdbusvirtualobject.h" documented="true" meta="plain" virtual="pure" const="true" type="QString" signature="QString introspect(const QString &amp;path) const = 0">
                <parameter type="const QString &amp;" name="path" default=""/>
            </function>
            <function name="~QDBusVirtualObject" fullname="QDBusVirtualObject::~QDBusVirtualObject" href="qdbusvirtualobject.html#dtor.QDBusVirtualObject" status="active" access="public" location="qdbusvirtualobject.h" documented="true" meta="destructor" virtual="virtual" noexcept="true" signature="~QDBusVirtualObject()"/>
        </class>
        <struct name="QMetaTypeId" href="qmetatypeid.html" status="ignored" access="public" location="qdbuserror.h"/>
        <struct name="QMetaTypeId2" href="qmetatypeid2.html" status="ignored" access="public" location="qdbusconnectioninterface.h"/>
        <class name="QTypeInfo" href="qtypeinfo.html" status="ignored" access="public" location="qdbuserror.h"/>
        <page name="qtdbus-index.html" href="qtdbus-index.html" status="active" location="qtdbus-index.qdoc" documented="true" subtype="page" title="Qt D-Bus" fulltitle="Qt D-Bus" subtitle="" brief="An introduction to Inter-Process Communication and Remote Procedure Calling with D-Bus">
            <keyword name="qtdbus" title="QtDBus"/>
            <contents name="using-the-module" title="Using the Module" level="1"/>
            <contents name="articles-and-guides" title="Articles and Guides" level="1"/>
            <contents name="examples" title="Examples" level="1"/>
            <contents name="reference" title="Reference" level="1"/>
            <contents name="module-evolution" title="Module Evolution" level="1"/>
            <contents name="licenses-and-attributions" title="Licenses and Attributions" level="1"/>
        </page>
        <page name="qtdbus-overview.html" href="qtdbus-overview.html" status="active" location="qtdbus-overview.qdoc" documented="true" groups="explanations-networkingandconnectivity" subtype="page" title="Qt D-Bus Overview" fulltitle="Qt D-Bus Overview" subtitle="" brief="Provides insight into the Qt Qt D-Bus module">
            <contents name="the-buses" title="The Buses" level="1"/>
            <contents name="concepts" title="Concepts" level="1"/>
            <contents name="messages" title="Messages" level="2"/>
            <contents name="service-names" title="Service Names" level="2"/>
            <contents name="object-paths" title="Object Paths" level="2"/>
            <contents name="interfaces" title="Interfaces" level="2"/>
            <contents name="cheat-sheet" title="Cheat Sheet" level="2"/>
            <contents name="debugging" title="Debugging" level="1"/>
        </page>
        <page name="qdbusxml2cpp.html" href="qdbusxml2cpp.html" status="active" location="qdbusxml2cpp.qdoc" documented="true" subtype="page" title="Qt D-Bus XML compiler (qdbusxml2cpp)" fulltitle="Qt D-Bus XML compiler (qdbusxml2cpp)" subtitle="">
            <keyword name="qdbusxml2cpp"/>
        </page>
        <page name="qdbustypesystem.html" href="qdbustypesystem.html" status="active" location="dbus-adaptors.qdoc" documented="true" subtype="page" title="The Qt D-Bus Type System" fulltitle="The Qt D-Bus Type System" subtitle="">
            <contents name="primitive-types" title="Primitive Types" level="1"/>
            <contents name="compound-types" title="Compound Types" level="1"/>
            <contents name="extending-the-type-system" title="Extending the Type System" level="1"/>
            <contents name="the-type-system-in-use" title="The Type System in Use" level="1"/>
        </page>
        <page name="usingadaptors.html" href="usingadaptors.html" status="active" location="dbus-adaptors.qdoc" documented="true" groups="how-to" subtype="page" title="Using Qt D-Bus Adaptors" fulltitle="Using Qt D-Bus Adaptors" subtitle="" brief="How to create and use DBus adaptors in Qt"/>
        <page name="qtdbus-attribution-libdbus-1-headers.html" href="qtdbus-attribution-libdbus-1-headers.html" status="active" location="codeattributions.qdoc" documented="true" groups="attributions-libs,attributions-qtdbus,attributions-qtdbus-libs" subtype="attribution" title="libdus-1 headers, version dbus-1.13.12" fulltitle="libdus-1 headers, version dbus-1.13.12" subtitle="" brief="Academic Free License v2.1, or GNU General Public License v2.0 or later">
            <target name="libdbus-1-headers"/>
        </page>
        <page name="qtdbus-cmake-qt-add-dbus-adaptor.html" href="qtdbus-cmake-qt-add-dbus-adaptor.html" status="active" location="qtdbus-cmake.qdoc" documented="true" groups="cmake-commands-qtdbus" subtype="page" title="qt_add_dbus_adaptor" fulltitle="qt_add_dbus_adaptor" subtitle="" brief="Generates an adaptor class for a D-Bus interface">
            <keyword name="qt6-add-dbus-adaptor" title="qt6_add_dbus_adaptor"/>
            <contents name="synopsis" title="Synopsis" level="1"/>
            <contents name="description" title="Description" level="1"/>
            <contents name="examples" title="Examples" level="1"/>
        </page>
        <page name="qtdbus-cmake-qt-add-dbus-interface.html" href="qtdbus-cmake-qt-add-dbus-interface.html" status="active" location="qtdbus-cmake.qdoc" documented="true" groups="cmake-commands-qtdbus" subtype="page" title="qt_add_dbus_interface" fulltitle="qt_add_dbus_interface" subtitle="" brief="Generates C++ sources implementing an interface for a D-Bus interface description file">
            <keyword name="qt6-add-dbus-interface" title="qt6_add_dbus_interface"/>
            <contents name="synopsis" title="Synopsis" level="1"/>
            <contents name="description" title="Description" level="1"/>
            <contents name="options" title="Options" level="1"/>
        </page>
        <page name="qtdbus-cmake-qt-add-dbus-interfaces.html" href="qtdbus-cmake-qt-add-dbus-interfaces.html" status="active" location="qtdbus-cmake.qdoc" documented="true" groups="cmake-commands-qtdbus" subtype="page" title="qt_add_dbus_interfaces" fulltitle="qt_add_dbus_interfaces" subtitle="" brief="Generates C++ sources implementing interfaces for D-Bus interface description files">
            <keyword name="qt6-add-dbus-interfaces" title="qt6_add_dbus_interfaces"/>
            <contents name="synopsis" title="Synopsis" level="1"/>
            <contents name="description" title="Description" level="1"/>
            <contents name="options" title="Options" level="1"/>
        </page>
        <page name="qtdbus-cmake-qt-generate-dbus-interface.html" href="qtdbus-cmake-qt-generate-dbus-interface.html" status="active" location="qtdbus-cmake.qdoc" documented="true" groups="cmake-commands-qtdbus" subtype="page" title="qt_generate_dbus_interface" fulltitle="qt_generate_dbus_interface" subtitle="" brief="Generates a D-Bus interface from a header file">
            <keyword name="qt6-generate-dbus-interface" title="qt6_generate_dbus_interface"/>
            <contents name="synopsis" title="Synopsis" level="1"/>
            <contents name="description" title="Description" level="1"/>
            <contents name="options" title="Options" level="1"/>
        </page>
        <group name="all-examples" href="all-examples.html" status="internal" seen="false" title=""/>
        <group name="attributions-libs" href="attributions-libs.html" status="internal" seen="false" title=""/>
        <group name="attributions-qtdbus" href="attributions-qtdbus.html" status="internal" seen="false" title=""/>
        <group name="attributions-qtdbus-libs" href="attributions-qtdbus-libs.html" status="internal" seen="false" title=""/>
        <group name="category Connectivity" href="category-connectivity.html" status="internal" seen="false" title=""/>
        <group name="changes-qt-5-to-6" href="changes-qt-5-to-6.html" status="internal" seen="false" title=""/>
        <group name="cmake-commands-qtdbus" href="cmake-commands-qtdbus.html" status="active" location="qtdbus-cmake.qdoc" documented="true" seen="true" title="CMake Commands in Qt6 DBus" brief="Lists CMake commands defined in Qt6::DBus"/>
        <group name="cmake-source-file-properties-qtdbus" href="cmake-source-file-properties-qtdbus.html" status="active" location="qtdbus-cmake.qdoc" documented="true" seen="true" title="CMake Source File Properties in Qt6 DBus" brief="Lists CMake file properties used in Qt6::DBus"/>
        <group name="examples-dbus" href="examples-dbus.html" status="active" location="qtdbus-examples.qdoc" documented="true" groups="all-examples" seen="true" title="Qt D-Bus Examples" brief="Using D-Bus from Qt applications"/>
        <group name="explanations-networkingandconnectivity" href="explanations-networkingandconnectivity.html" status="internal" seen="false" title=""/>
        <group name="how-to" href="how-to.html" status="internal" seen="false" title=""/>
        <group name="modules" href="modules.html" status="internal" seen="false" title=""/>
        <group name="shared" href="shared.html" status="internal" seen="false" title=""/>
        <module name="QtDBus" href="qtdbus-module.html" status="active" location="qtdbus-module.qdoc" documented="true" groups="modules" seen="true" title="Qt D-Bus C++ Classes" brief="Qt D-Bus module is a Unix-only library that you can use to perform Inter-Process Communication using the D-Bus protocol">
            <keyword name="the-qdbus-compiler" title="The QDBus compiler"/>
        </module>
    </namespace>
</INDEX>
