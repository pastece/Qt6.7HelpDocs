<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="https://doc.qt.io/qt" title="Qt Shader Tools Reference Documentation" version="6.7.0" project="QtShaderTools" indexTitle="Shader Tools">
    <namespace name="" status="active" access="public" module="qtshadertools">
        <page name="qtshadertools-qsb.html" href="qtshadertools-qsb.html" status="active" location="qtshadertools-qsb.qdoc" documented="true" subtype="page" title="QSB Manual" fulltitle="QSB Manual" subtitle="">
            <contents name="modes-of-operation" title="Modes of Operation" level="1"/>
            <contents name="example" title="Example" level="1"/>
            <contents name="shader-types" title="Shader Types" level="1"/>
            <contents name="shading-languages-and-versions" title="Shading Languages and Versions" level="1"/>
            <contents name="qt-quick-scene-graph-batching" title="Qt Quick Scene Graph Batching" level="1"/>
            <contents name="invoking-external-tools" title="Invoking External Tools" level="1"/>
            <contents name="other-options" title="Other Options" level="1"/>
            <contents name="tessellation" title="Tessellation" level="1"/>
            <contents name="multiview" title="Multiview" level="1"/>
            <contents name="working-with-glsl-features-specific-to-opengl" title="Working with GLSL Features Specific to OpenGL" level="1"/>
        </page>
        <class name="QShaderBaker" href="qshaderbaker.html" status="active" access="public" location="qshaderbaker.h" since="6.6" documented="true" module="QtShaderTools" brief="Compiles a GLSL/Vulkan shader into SPIR-V, translates into other shading languages, and gathers reflection metadata">
            <contents name="typical-workflow" title="Typical Workflow" level="2"/>
            <function name="QShaderBaker" fullname="QShaderBaker::QShaderBaker" href="qshaderbaker.html#QShaderBaker" status="active" access="public" location="qshaderbaker.h" documented="true" meta="constructor" signature="QShaderBaker()"/>
            <function name="bake" fullname="QShaderBaker::bake" href="qshaderbaker.html#bake" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" type="QShader" signature="QShader bake()"/>
            <function name="errorMessage" fullname="QShaderBaker::errorMessage" href="qshaderbaker.html#errorMessage" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" const="true" type="QString" signature="QString errorMessage() const"/>
            <function name="setBatchableVertexShaderExtraInputLocation" fullname="QShaderBaker::setBatchableVertexShaderExtraInputLocation" href="qshaderbaker.html#setBatchableVertexShaderExtraInputLocation" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" type="void" signature="void setBatchableVertexShaderExtraInputLocation(int location)">
                <parameter type="int" name="location" default=""/>
            </function>
            <function name="setBreakOnShaderTranslationError" fullname="QShaderBaker::setBreakOnShaderTranslationError" href="qshaderbaker.html#setBreakOnShaderTranslationError" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" type="void" signature="void setBreakOnShaderTranslationError(bool enable)">
                <parameter type="bool" name="enable" default=""/>
            </function>
            <function name="setGeneratedShaderVariants" fullname="QShaderBaker::setGeneratedShaderVariants" href="qshaderbaker.html#setGeneratedShaderVariants" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" type="void" signature="void setGeneratedShaderVariants(const QList&lt;QShader::Variant&gt; &amp;v)">
                <parameter type="const QList&lt;QShader::Variant&gt; &amp;" name="v" default=""/>
            </function>
            <function name="setGeneratedShaders" fullname="QShaderBaker::setGeneratedShaders" href="qshaderbaker.html#setGeneratedShaders" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" type="void" signature="void setGeneratedShaders(const QList&lt;QShaderBaker::GeneratedShader&gt; &amp;v)">
                <parameter type="const QList&lt;QShaderBaker::GeneratedShader&gt; &amp;" name="v" default=""/>
            </function>
            <function name="setMultiViewCount" fullname="QShaderBaker::setMultiViewCount" href="qshaderbaker.html#setMultiViewCount" status="active" access="public" location="qshaderbaker.h" documented="true" since="6.7" meta="plain" type="void" signature="void setMultiViewCount(int count)">
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="setPerTargetCompilation" fullname="QShaderBaker::setPerTargetCompilation" href="qshaderbaker.html#setPerTargetCompilation" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" type="void" signature="void setPerTargetCompilation(bool enable)">
                <parameter type="bool" name="enable" default=""/>
            </function>
            <function name="setPreamble" fullname="QShaderBaker::setPreamble" href="qshaderbaker.html#setPreamble" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" type="void" signature="void setPreamble(const QByteArray &amp;preamble)">
                <parameter type="const QByteArray &amp;" name="preamble" default=""/>
            </function>
            <function name="setSourceDevice" fullname="QShaderBaker::setSourceDevice" href="qshaderbaker.html#setSourceDevice" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" type="void" signature="void setSourceDevice(QIODevice *device, QShader::Stage stage, const QString &amp;fileName)">
                <parameter type="QIODevice *" name="device" default=""/>
                <parameter type="QShader::Stage" name="stage" default=""/>
                <parameter type="const QString &amp;" name="fileName" default="QString()"/>
            </function>
            <function name="setSourceFileName" fullname="QShaderBaker::setSourceFileName" href="qshaderbaker.html#setSourceFileName" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" type="void" signature="void setSourceFileName(const QString &amp;fileName)">
                <parameter type="const QString &amp;" name="fileName" default=""/>
            </function>
            <function name="setSourceFileName" fullname="QShaderBaker::setSourceFileName" href="qshaderbaker.html#setSourceFileName-1" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" overload="true" overload-number="1" type="void" signature="void setSourceFileName(const QString &amp;fileName, QShader::Stage stage)">
                <parameter type="const QString &amp;" name="fileName" default=""/>
                <parameter type="QShader::Stage" name="stage" default=""/>
            </function>
            <function name="setSourceString" fullname="QShaderBaker::setSourceString" href="qshaderbaker.html#setSourceString" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" type="void" signature="void setSourceString(const QByteArray &amp;sourceString, QShader::Stage stage, const QString &amp;fileName)">
                <parameter type="const QByteArray &amp;" name="sourceString" default=""/>
                <parameter type="QShader::Stage" name="stage" default=""/>
                <parameter type="const QString &amp;" name="fileName" default="QString()"/>
            </function>
            <function name="setTessellationMode" fullname="QShaderBaker::setTessellationMode" href="qshaderbaker.html#setTessellationMode" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" type="void" signature="void setTessellationMode(QShaderDescription::TessellationMode mode)">
                <parameter type="QShaderDescription::TessellationMode" name="mode" default=""/>
            </function>
            <function name="setTessellationOutputVertexCount" fullname="QShaderBaker::setTessellationOutputVertexCount" href="qshaderbaker.html#setTessellationOutputVertexCount" status="active" access="public" location="qshaderbaker.h" documented="true" meta="plain" type="void" signature="void setTessellationOutputVertexCount(int count)">
                <parameter type="int" name="count" default=""/>
            </function>
            <function name="~QShaderBaker" fullname="QShaderBaker::~QShaderBaker" href="qshaderbaker.html#dtor.QShaderBaker" status="active" access="public" location="qshaderbaker.h" documented="true" meta="destructor" noexcept="true" signature="~QShaderBaker()"/>
            <typedef name="GeneratedShader" fullname="QShaderBaker::GeneratedShader" href="qshaderbaker.html#GeneratedShader-typedef" status="active" access="public" location="qshaderbaker.h" documented="true"/>
            <typedef name="SpirvOptions" fullname="QShaderBaker::SpirvOptions" href="qshaderbaker.html#SpirvOption-enum" status="active" access="public" location="qshaderbaker.h" enum="QShaderBaker::SpirvOption"/>
        </class>
        <page name="qtshadertools-index.html" href="qtshadertools-index.html" status="active" location="qtshadertools-index.qdoc" documented="true" subtype="page" title="Qt Shader Tools" fulltitle="Qt Shader Tools" subtitle="">
            <contents name="articles-and-guides" title="Articles and Guides" level="1"/>
            <contents name="c-api" title="C++ API" level="2"/>
            <contents name="licenses-and-attributions" title="Licenses and Attributions" level="1"/>
        </page>
        <page name="qtshadertools-build.html" href="qtshadertools-build.html" status="active" location="qtshadertools-build.qdoc" documented="true" groups="cmake-commands-qtshadertools" subtype="page" title="Qt Shader Tools Build System Integration" fulltitle="Qt Shader Tools Build System Integration" subtitle="" brief="Compiles shaders and adds them to a Qt resource">
            <contents name="introduction" title="Introduction" level="1"/>
            <contents name="first-example" title="First Example" level="1"/>
            <contents name="configuration" title="Configuration" level="1"/>
            <contents name="shader-type" title="Shader type" level="2"/>
            <contents name="targets" title="Targets" level="2"/>
            <contents name="qt-quick-specifics" title="Qt Quick specifics" level="2"/>
            <contents name="invoking-external-tools" title="Invoking external tools" level="2"/>
            <contents name="other-settings" title="Other settings" level="2"/>
            <contents name="substituting-hand-crafted-shaders" title="Substituting Hand-Crafted Shaders" level="1"/>
            <contents name="tessellation-example" title="Tessellation Example" level="2"/>
        </page>
        <page name="qtshadertools-overview.html" href="qtshadertools-overview.html" status="active" location="qtshadertools-overview.qdoc" documented="true" groups="explanation" subtype="page" title="Qt Shader Tools Overview" fulltitle="Qt Shader Tools Overview" subtitle="" brief="Provides insight into the Qt Shader Tools module">
            <contents name="typical-usage-with-qt-quick" title="Typical Usage with Qt Quick" level="1"/>
            <contents name="typical-usage-with-qt-quick-3d" title="Typical Usage with Qt Quick 3D" level="1"/>
        </page>
        <page name="qtshadertools-attribution-SpirvCross.html" href="qtshadertools-attribution-spirvcross.html" status="active" location="codeattributions.qdoc" documented="true" groups="attributions-libs,attributions-qtshadertools,attributions-qtshadertools-libs" subtype="attribution" title="SPIRV-Cross, version sdk-1.3.261.0" fulltitle="SPIRV-Cross, version sdk-1.3.261.0" subtitle="" brief="Apache License 2.0 and Khronos License">
            <target name="spirvcross" title="SpirvCross"/>
        </page>
        <page name="qtshadertools-attribution-glslang.html" href="qtshadertools-attribution-glslang.html" status="active" location="codeattributions.qdoc" documented="true" groups="attributions-libs,attributions-qtshadertools,attributions-qtshadertools-libs" subtype="attribution" title="glslang, version 13.0.0" fulltitle="glslang, version 13.0.0" subtitle="" brief="BSD 3-Clause &quot;New&quot; or &quot;Revised&quot; License, and Khronos License, and Apache License 2.0, and GNU General Public License v3.0 or later with Bison exception 2.2, and NVIDIA 2002 License">
            <target name="glslang"/>
        </page>
        <group name="attributions-libs" href="attributions-libs.html" status="internal" seen="false" title=""/>
        <group name="attributions-qtshadertools" href="attributions-qtshadertools.html" status="internal" seen="false" title=""/>
        <group name="attributions-qtshadertools-libs" href="attributions-qtshadertools-libs.html" status="internal" seen="false" title=""/>
        <group name="cmake-commands-qtshadertools" href="cmake-commands-qtshadertools.html" status="internal" seen="false" title=""/>
        <group name="explanation" href="explanation.html" status="internal" seen="false" title=""/>
        <module name="QtShaderTools" href="qtshadertools-module.html" status="internal" seen="false" title=""/>
    </namespace>
</INDEX>
