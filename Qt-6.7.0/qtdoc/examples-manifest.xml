<?xml version="1.0" encoding="UTF-8"?>
<instructionals module="QtDoc">
    <examples>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-calqlatr-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/qtquick-demo-calqlatr.png" isHighlighted="true" name="Calqlatr" projectPath="demos/calqlatr/CMakeLists.txt">
            <description><![CDATA[A Qt Quick app designed for landscape and portrait devices that uses custom components, responsive layouts, and JavaScript for the application logic.]]></description>
            <tags>quick</tags>
            <meta>
                <entry name="category">Mobile</entry>
                <entry name="category">Application Examples</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-car-configurator-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/car_configurator_overview.png" isHighlighted="true" name="Car Configurator" projectPath="demos/car-configurator/CMakeLists.txt">
            <description><![CDATA[A car model example that demonstrates using Qt Quick 3D cameras, extended scene environment and Qt Quick 3D.]]></description>
            <tags> 3d, camera,quick</tags>
            <meta>
                <entry name="category">Application Examples</entry>
                <entry name="docdependencies">QtQuick3D</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-coffee-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/coffee_machine_overview.png" isHighlighted="true" name="Coffee Machine" projectPath="demos/coffee/CMakeLists.txt">
            <description><![CDATA[A Qt Quick application with a state-based custom user interface.]]></description>
            <tags>embedded,quick,states,touch</tags>
            <meta>
                <entry name="category">Mobile</entry>
                <entry name="category">Embedded</entry>
                <entry name="category">Application Examples</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-dice-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/dice-screenshot.webp" isHighlighted="true" name="Dice" projectPath="demos/dice/CMakeLists.txt">
            <description><![CDATA[A dice throwing application using Qt Quick 3D Physics and other Qt Modules.]]></description>
            <tags> multimedia, sensors,3d,physics,quick</tags>
            <meta>
                <entry name="category">Mobile</entry>
                <entry name="category">Application Examples</entry>
                <entry name="docdependencies">QtQuick3DPhysics,QtMultimedia,QtSensors</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-documentviewer-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/documentviewer_open.png" isHighlighted="true" name="Document Viewer" projectPath="demos/documentviewer/CMakeLists.txt">
            <description><![CDATA[A Widgets application to display and print JSON, text, and PDF files.]]></description>
            <tags>demo,mainwindow,widgets</tags>
            <meta>
                <entry name="category">Application Examples</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-fx-material-showroom-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/FX_Material_Showroom.png" isHighlighted="true" name="FX &amp; Material Showroom" projectPath="demos/FX_Material_Showroom/CMakeLists.txt">
            <description><![CDATA[Demonstrates material and effects capabilities of Qt Quick 3D. This example demonstrates how you can use particle effects and materials in Qt Quick 3D.]]></description>
            <tags>demo,quick</tags>
            <meta>
                <entry name="category">3D</entry>
                <entry name="category">Application Examples</entry>
                <entry name="docdependencies">QtQuick3D</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-tutorials-alarms-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/mainscreen.png" name="Getting Started Programming with Qt Quick" projectPath="tutorials/alarms/CMakeLists.txt">
            <description><![CDATA[A tutorial for Qt Quick based on an alarms application.]]></description>
            <tags>quick,tutorial</tags>
            <meta>
                <entry name="category">Application Examples</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-hangman-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/qthangman-example.png" name="In-App purchasing demo" projectPath="demos/hangman/CMakeLists.txt">
            <description><![CDATA[A complete mobile application that demonstrates purchasing in-app products.]]></description>
            <tags>android,demo,ios,purchasing,quick,quickcontrols,store</tags>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-lightningviewer-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/lightningviewer.jpg" isHighlighted="true" name="Lightning Viewer" projectPath="demos/lightningviewer/CMakeLists.txt">
            <description><![CDATA[An application with a responsive UI showing lightning strikes on a map in real-time by combining Qt Quick, Qt Location, Qt Positioning and Qt Websockets.]]></description>
            <meta>
                <entry name="category">Positioning &amp; Location</entry>
                <entry name="category">Networking</entry>
                <entry name="category">Mobile</entry>
                <entry name="category">Application Examples</entry>
                <entry name="docdependencies">QtWebSockets,QtPositioning,QtLocation</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-mediaplayer-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/mediaplayer.png" isHighlighted="true" name="Media Player" projectPath="demos/mediaplayer/CMakeLists.txt">
            <description><![CDATA[Playing audio and video using Qt Quick.]]></description>
            <tags>multimedia,player,quick</tags>
            <meta>
                <entry name="category">Mobile</entry>
                <entry name="category">Desktop</entry>
                <entry name="category">Application Examples</entry>
                <entry name="docdependencies">QtMultimedia</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-osmbuildings-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/osmbuildings.jpg" isHighlighted="true" name="OSM Buildings" projectPath="demos/osmbuildings/CMakeLists.txt">
            <description><![CDATA[A 3D building viewer of OSM (OpenStreetMap) buildings map data.]]></description>
            <tags>3d,demo,quick</tags>
            <meta>
                <entry name="category">3D</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-photosurface-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/qtquick-demo-photosurface-small.png" isHighlighted="true" name="Photo Surface" projectPath="demos/photosurface/CMakeLists.txt">
            <description><![CDATA[A QML app for touch devices that uses a Repeater with a FolderListModel to access content in a folder, and a PinchHandler to handle pinch gestures on the fetched content.]]></description>
            <tags>quick,touch</tags>
            <meta>
                <entry name="category">Application Examples</entry>
                <entry name="docdependencies">QtPdf</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-clocks-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/qtquick-demo-clocks-small.png" name="Qt Quick Demo - Clocks" projectPath="demos/clocks/CMakeLists.txt">
            <description><![CDATA[A QML clock application that demonstrates using a ListView type to display data generated by a ListModel and a SpringAnimation type to animate images.]]></description>
            <tags>demo,quick</tags>
            <meta>
                <entry name="category">Graphics</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-colorpaletteclient-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/colorpalette_listing.png" name="Qt Quick Demo - RESTful API client" projectPath="demos/colorpaletteclient/CMakeLists.txt">
            <description><![CDATA[Example of how to create a RESTful API QML client.]]></description>
            <tags> http, network,quick</tags>
            <meta>
                <entry name="category">Networking</entry>
                <entry name="category">Application Examples</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-rssnews-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/qtquick-demo-rssnews-small.png" name="Qt Quick Demo - RSS News" projectPath="demos/rssnews/CMakeLists.txt">
            <description><![CDATA[A QML RSS news reader that uses XmlListModel and XmlListModelRole custom QML types to download XML data, ListModel and ListElement to create a category list, and ListView to display the data.]]></description>
            <tags>demo,download,quick,xml</tags>
            <meta>
                <entry name="category">Web Technologies</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-documentviewer-plugins-txtviewer-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/txtviewer_screenshot.png" name="Qt Widgets - Text Viewer Plugin Example" projectPath="demos/documentviewer/plugins/txtviewer/CMakeLists.txt">
            <description><![CDATA[A widget example with menus, toolbars and a status bar.]]></description>
            <meta>
                <entry name="category">Graphics</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-robotarm-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/robotarm-example.png" isHighlighted="true" name="Robot Arm" projectPath="demos/robotarm/CMakeLists.txt">
            <description><![CDATA[Demonstrates how to add a C++ backend to a 3D project from Qt Design Studio. This example demonstrates adding a C++ backend to a 3D project created in Qt Design Studio. The example itself consists of an interactive industrial robot arm in a Qt Quick 3D scene. The 2D UI to control the robot arm is implement using Qt Quick Controls.]]></description>
            <tags>demo,quick</tags>
            <meta>
                <entry name="category">Application Examples</entry>
                <entry name="docdependencies">QtQuick3D</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-samegame-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/qtquick-demo-samegame-med-1.png" isHighlighted="true" name="Same Game" projectPath="demos/samegame/CMakeLists.txt">
            <description><![CDATA[A QML implementation of the popular puzzle game by Kuniaki Moribe.]]></description>
            <tags>demo,game,quick</tags>
            <meta>
                <entry name="category">Application Examples</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-stocqt-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/qtquick-demo-stocqt.png" isHighlighted="true" name="StocQt" projectPath="demos/stocqt/CMakeLists.txt">
            <description><![CDATA[A configurable stock chart for 100 stocks.]]></description>
            <tags>demo,game,graphs,quick</tags>
            <meta>
                <entry name="category">Data Visualization</entry>
                <entry name="docdependencies">QtGraphs</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-thermostat-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/small_light.png" isHighlighted="true" name="Thermostat" projectPath="demos/thermostat/CMakeLists.txt">
            <description><![CDATA[A user interface for a home thermostat, implemented in Qt Quick. It demonstrates how to create responsive applications that scale from large desktop displays to mobile and small embedded displays.]]></description>
            <tags>charts,demo,emdedded,quick</tags>
            <meta>
                <entry name="category">Embedded</entry>
                <entry name="category">Application Examples</entry>
                <entry name="docdependencies">QtCharts</entry>
            </meta>
        </example>
        <example docUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/qtdoc-demos-todolist-example.html" imageUrl="qthelp://org.qt-project.qtdoc.670/qtdoc/images/CustomStyle_Light.png" isHighlighted="true" name="To Do List" projectPath="demos/todolist/CMakeLists.txt">
            <description><![CDATA[A QML implementation of to do list application that demonstrates how to create application thats looks native on any platform.]]></description>
            <tags>demo,quick</tags>
            <meta>
                <entry name="category">Application Examples</entry>
            </meta>
        </example>
    </examples>
    <categories>
        <category>Application Examples</category>
        <category>Desktop</category>
        <category>Mobile</category>
        <category>Embedded</category>
        <category>Graphics</category>
        <category>Multimedia</category>
        <category>3D</category>
        <category>Data Visualization</category>
        <category>Data Processing &amp; I/O</category>
        <category>Connectivity</category>
        <category>Networking</category>
        <category>Positioning &amp; Location</category>
        <category>User Interface Components</category>
        <category>Web Technologies</category>
    </categories>
</instructionals>
